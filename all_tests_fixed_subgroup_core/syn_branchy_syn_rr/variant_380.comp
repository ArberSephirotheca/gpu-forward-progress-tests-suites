#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))[1], float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))[1], 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3250.8390))), 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3250.8390))), 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3250.8390))), 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3250.8390))), 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, length(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat4x3(injectionSwitch.x, 0.0, 0.0, length(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(8650.7173)), bool(false)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-23.93)), float(injectionSwitch.y), bool(true)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4117.7548) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-222.810 * 7.5))), bool(false))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))))) && _GLF_IDENTITY(true, ! (! (true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4117.7548) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-222.810 * 7.5))), bool(false))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))) && true) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))), _GLF_IDENTITY(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((true), true, false))))))))), (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))))))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))))))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((96.05))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)))), bool(true)))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), true)))))))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)) || false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8296.8230), _GLF_FUZZED((8.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), false, _GLF_IDENTITY(true, (true) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))) && _GLF_IDENTITY(true, ! (! (true))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))) && _GLF_IDENTITY(true, ! (! (true)))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3241.0890) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-327.089) : injectionSwitch.y)))))))) && (true))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, false))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (true))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, injectionSwitch.y)))) && (true))))), (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)))))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false)))) || false) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))), false, true))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((true ? _GLF_IDENTITY(-618.471, clamp(-618.471, _GLF_IDENTITY(-618.471, min(-618.471, -618.471)), _GLF_IDENTITY(-618.471, (false ? _GLF_FUZZED(-0.1) : -618.471)))) : 1.9)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, true))), (true) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3194.9916)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-5811.3086) : float(injectionSwitch.x))), (true ? float(injectionSwitch.x) : _GLF_FUZZED(274.194))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(_GLF_DEAD(false)))))))), (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(_GLF_DEAD(false))))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sin(0.0), 1.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-47.86), _GLF_FUZZED(5921.7004)), bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-47.86), _GLF_FUZZED(5921.7004)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-47.86), _GLF_FUZZED(5921.7004)), bvec2(false, false)))) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), mix(vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))[0], (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))[_GLF_IDENTITY(1, int(ivec2(1, 0)))]), vec2(_GLF_FUZZED(3419.3192), _GLF_FUZZED(float(77356))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-3782.9060), (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-7.9, float(mat2x4(-7.9, _GLF_IDENTITY(dot(vec4(1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0))), -79.03))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), min(mix(vec2(_GLF_FUZZED(-3782.9060), (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))) : _GLF_FUZZED(vec2(-7.9, -79.03))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-3782.9060), (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.9, -79.03), mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(9367.1601)), vec2(_GLF_IDENTITY((vec2(-7.9, -79.03))[0], ((vec2(-7.9, -79.03))[0]) * 1.0), (vec2(-7.9, -79.03))[1]), bvec2(true, true))))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)), clamp(mix(vec2(_GLF_FUZZED(-3782.9060), (clamp(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED((vec2(830.831, 3685.5239))) : vec2(vec2(injectionSwitch)))), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))) : _GLF_FUZZED(vec2(-7.9, -79.03))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(-3782.9060), (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))) : _GLF_FUZZED(vec2(-7.9, -79.03))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(-3782.9060), (_GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))), min(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))), _GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))), mix(vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[0], (clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(9825.0911)), bvec2(false, false))), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))))))))[1]), vec2((clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))) : _GLF_FUZZED(vec2(-7.9, -79.03))))))[0], _GLF_FUZZED(-49.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0], (vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(4578.2112)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), 0u | (uint(uint(subgroup_id * subgroup_size)))), (_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), 0u | (uint(uint(subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), 0u | (uint(uint(subgroup_id * subgroup_size))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), 0u | (uint(uint(subgroup_id * subgroup_size))))))))) : _GLF_FUZZED(subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_local_id))) % subgroup_size), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), ~ (~ ((0u) | (0u))))) | ((0u) | (0u)))) / 1u)) | (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), min(uvec2(subgroup_local_id + 1, 0u), uvec2(subgroup_local_id + 1, 0u)))) * uvec2(1u, 1u))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), min(uvec2(subgroup_local_id + 1, 0u), uvec2(subgroup_local_id + 1, 0u)))) * uvec2(1u, 1u))), 0u))))), 0u | ((subgroup_local_id + 1))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | 0) : _GLF_FUZZED(9534))), 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(3.0))), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) - 0.0)) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8811.6201)), bool(false))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))), bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), true, false, false))))))), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), (1) | (1))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))), (true ? ~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 0), ivec2(ivec3(ivec2((1), 0), 0))))))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (1))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (1))) | (1))) << 0))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (~ (_GLF_FUZZED(workgroup_base))))) * 1u)))))) < subgroup_size, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(false || (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), (1) | (1))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) * 1))))))))), (true ? ~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))) : _GLF_FUZZED(workgroup_base)))))) < subgroup_size, false, false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(bool(bvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) ^ 0, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false)))) ? _GLF_FUZZED(57251) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) << 0))))), min((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) << 0))))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) << 0))))))) ^ 0, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29583) : 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)))) ^ 0) | _GLF_IDENTITY(0, (0) << 0))))) < subgroup_size, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), (true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, 0 | (0))], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / 1.0) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, 1.0, 0.0)), float(vec3(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, 1.0, 0.0)), 0.0, 1.0))))))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), false || _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), 0 + ((1))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-69750) : _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, 0 + (1)))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) * 1, clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(4, max(4, 4)))), (_GLF_IDENTITY(4, max(4, 4))) + (0 << _GLF_IDENTITY(int(4), int(4))))))), min(4, 4))) * 1, (_GLF_IDENTITY(4, min(4, 4))) * _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), (1))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), (1))) >> 0)) >> 0), (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(4, 4)))) ^ 0) * 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))))))) ^ 0)))))), (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(_GLF_IDENTITY(67184, (67184) / 1))))) | (86951))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))))) ^ 0))))))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))))))) ^ 0)))))), (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(_GLF_IDENTITY(67184, (67184) / 1))))) | (86951))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))))) ^ 0))))))) | 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))))))) ^ 0)))))), (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(_GLF_IDENTITY(67184, (67184) / 1))))) | (86951))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))))) ^ 0))))))) | 0)))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))))))) ^ 0)))))), (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(86951, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max(_GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), 0 ^ ((true ? 86951 : _GLF_FUZZED(67184)))), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), min((true ? 86951 : _GLF_FUZZED(67184)), _GLF_IDENTITY((true ? 86951 : _GLF_FUZZED(67184)), max((true ? 86951 : _GLF_FUZZED(67184)), (true ? 86951 : _GLF_FUZZED(67184)))))))))) | (86951))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(_GLF_IDENTITY(67184, (67184) / 1))))) | (86951))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))))), _GLF_IDENTITY((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951))), 0 ^ ((_GLF_IDENTITY(86951, (_GLF_IDENTITY(86951, (true ? 86951 : _GLF_FUZZED(67184)))) | (86951)))))))) ^ 0))))))) | 0)))))) - _GLF_IDENTITY(0, (0) - 0)))), (4) / 1)) ^ _GLF_IDENTITY(0, (0) >> 0)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false)), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), false, true))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), false, true))), false))) || false)), false)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-6203.5381, -83.91, -4.7).z)), bool(false))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), min((~ (read_2)), (~ (read_2))))), _GLF_IDENTITY((read_2), ~ (_GLF_IDENTITY(~ ((read_2)), min(~ ((read_2)), ~ ((read_2)))))) >> 0u)) >> 0u)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (read_2) / 1u), read_2), 0u | (_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (read_2) / 1u), read_2), (min(_GLF_IDENTITY(read_2, (read_2) / 1u), read_2)) | (min(_GLF_IDENTITY(read_2, (read_2) / 1u), read_2))))), clamp(min(read_2, read_2), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(uint(uvec3(workgroup_id, 1u, 0u)), 0u, 1u))))))) : _GLF_IDENTITY((read_2), ((read_2)) | ((read_2)))))))), (_GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, 0u ^ (read_2)))))))), clamp(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)), 0u + (uint(uvec3(read_2, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))))) >> 0u)) | (read_2)), ~ (~ (read_2))))))) >> 0u), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u), (uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ~ (~ ((read_2))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), min(read_2, read_2), _GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) / 1u))), (min(read_2, read_2)) | (min(read_2, read_2))), min(read_2, read_2)), 0u + (max(_GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), min(read_2, read_2), min(read_2, read_2)))) | (min(read_2, read_2))), min(_GLF_IDENTITY(read_2, ~ (~ (read_2))), read_2))))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)))))))), 0u | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2))))) / (1u & 1u)), _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2)))), read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, read_2)))) << 0u, ((_GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, read_2)))) << 0u) << 0u)), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_base) : read_2)), read_2, read_2))), max(_GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), min(read_2, read_2))))), 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(_GLF_IDENTITY(read_2, ~ (~ (read_2))), read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) + 0u)) ^ 0u)) / 1u), _GLF_IDENTITY(~ (~ (read_2)), ~ (~ (_GLF_IDENTITY(~ (~ (read_2)), (true ? ~ (~ (read_2)) : _GLF_FUZZED(workgroup_base)))))))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(_GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (read_2)), ~ (_GLF_IDENTITY(~ (~ (~ (read_2))), max(~ (~ (~ (read_2))), ~ (~ (~ (read_2)))))))), _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (1u & ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) * (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) ^ 0u)), ((_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | ((_GLF_IDENTITY(read_2, (read_2) ^ 0u)))))) / 1u), ~ (~ (read_2)))), max(_GLF_IDENTITY(min(read_2, read_2), uint(uvec4(min(read_2, read_2), 0u, 0u, 0u))), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY(max(min(read_2, read_2), min(read_2, read_2)), (max(min(read_2, read_2), min(read_2, read_2))) | (max(min(read_2, read_2), min(read_2, read_2))))))), 0u, 0u)) : _GLF_FUZZED((uvec3(132358u, 149930u, 4204u) + uvec3(149226u, 23345u, _GLF_IDENTITY(182337u, (182337u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(_GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (read_2)), ~ (_GLF_IDENTITY(~ (~ (~ (read_2))), max(~ (~ (~ (read_2))), ~ (~ (~ (read_2)))))))), _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (1u & ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) * (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) ^ 0u)), ((_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | ((_GLF_IDENTITY(read_2, (read_2) ^ 0u)))))) / 1u), ~ (~ (read_2)))), max(_GLF_IDENTITY(min(read_2, read_2), uint(uvec4(min(read_2, read_2), 0u, 0u, 0u))), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY(max(min(read_2, read_2), min(read_2, read_2)), (max(min(read_2, read_2), min(read_2, read_2))) | (max(min(read_2, read_2), min(read_2, read_2))))))), 0u, 0u)) : _GLF_FUZZED((uvec3(132358u, 149930u, 4204u) + uvec3(149226u, 23345u, _GLF_IDENTITY(182337u, (182337u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))))))), max(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, 0u | (read_2))), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), 0u ^ ((read_2)))))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((~ (read_2)))))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), clamp((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) * 1u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)))) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))), 0u | ((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) / 1u)), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((~ (read_2)))))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), clamp((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) * 1u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)))) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))), 0u | ((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) / 1u)), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec4(116349u, 103252u, 153622u, 6432u)) : uvec4((uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((~ (read_2)))))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), clamp((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) * 1u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)))) >> 0u), read_2), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))), 0u | ((_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) - 0u)), (min(read_2, read_2)) | (min(read_2, read_2)))))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(read_2, (read_2) / 1u)), (min(read_2, read_2)) | (min(read_2, read_2)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u)), 0u))))) ^ uvec3(0u, 0u, 0u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (read_1))) << 0u) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, _GLF_IDENTITY(read_2, min(read_2, read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))), (_GLF_IDENTITY(min(read_2, read_2), _GLF_IDENTITY(max(min(read_2, read_2), min(read_2, read_2)), (_GLF_IDENTITY(max(min(read_2, read_2), min(read_2, read_2)), (max(min(read_2, read_2), min(read_2, read_2))) | (max(min(read_2, read_2), min(read_2, read_2))))) >> 0u))) | (_GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (read_2)), clamp(~ (~ (read_2)), ~ (~ (read_2)), ~ (~ _GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2)))))))), max(min(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2), min(read_2, read_2))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), 0u, (1u ^ 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (1u ^ 1u)), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 1u))) - uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (1u ^ 1u)), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 1u))) - uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(159447u, 63419u, 20609u, 82747u)) : (_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (1u ^ 1u)), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 1u))) - uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))), 0u)) ^ uvec3(0u, 0u, 0u))))))), (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, _GLF_IDENTITY(read_2, (read_2) | (read_2))), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | 0u), read_2))))), _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))), 0u, 0u), (uvec3(_GLF_IDENTITY(min(read_2, read_2), clamp(min(read_2, read_2), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2)))), max(min(read_2, read_2), min(read_2, read_2))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), max(min(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))), read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, 1u, 0u), (true ? uvec3(read_2, 1u, 0u) : _GLF_FUZZED(uvec3(173061u, 31211u, 65858u)))))), 0u | (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, 1u, 0u), (true ? uvec3(read_2, 1u, 0u) : _GLF_FUZZED(uvec3(173061u, 31211u, 65858u)))))))))), _GLF_IDENTITY(read_2, (read_2) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) / 1u))), read_2))))), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : 0u)))) ^ uvec3(0u, 0u, 0u)))))))) || false)))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), false, true, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), false))))), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true, false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(-122.762))))) < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, true)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, true)), bool(bvec4(bool(bvec4((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), false))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))))), true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(mod(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)), ! (! (bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)))))))), bool(bvec3(! ((_GLF_IDENTITY(false, (false) || false)) || false), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)), ! (! (bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)))))))), bool(bvec3(! ((_GLF_IDENTITY(false, (false) || false)) || false), false, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)), _GLF_IDENTITY(! (! (bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true)))), (! (! (bool(bvec2(bool(bool((_GLF_IDENTITY(false, (false) || false)) || false)), true))))) && true))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true) || false), false, true)))))))))) && true)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(344.382), _GLF_FUZZED(-77.16)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(2.1)), bvec2(false, false))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(9.9) : 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0)), mix(float(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 1.0, 1.0, 0.0))), float(_GLF_FUZZED(-0.2)), bool(false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(74.45)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, (1 ^ 0))))))], (injectionSwitch[1]) / 1.0)), bool(true))))), min(false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1]))[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6399.6964, -2.7)) : false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), vec2(_GLF_IDENTITY(vec4(false ? _GLF_FUZZED(vec2(6399.6964, -2.7)) : false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? vec4(false ? _GLF_FUZZED(vec2(6399.6964, -2.7)) : false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(vec4(3.5, 3077.0532, -51.50, 3.4)))))))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))))), int(ivec3(~ (1), 0, (1 ^ 0)))), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, (1 ^ 0))))) / 1)))], _GLF_IDENTITY((injectionSwitch[1]), max(_GLF_IDENTITY((injectionSwitch[1]), min(_GLF_IDENTITY((injectionSwitch[1]), mix(float((injectionSwitch[1])), float(_GLF_FUZZED(6.5)), bool(false))), (injectionSwitch[1]))), _GLF_IDENTITY((injectionSwitch[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch[1]) : _GLF_FUZZED(9.3))))) / 1.0)), bool(true))))), min(false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) / 1.0, ((injectionSwitch[1]) / 1.0) - 0.0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)))), true, false, true))))))), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), true && (bool(bool(bool(bool(true)))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), true && (bool(bool(bool(bool(true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), true && (bool(bool(bool(bool(true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false))))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), injectionSwitch[1]))[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), (injectionSwitch[1]) / 1.0)), bool(true))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), injectionSwitch[1]))[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), (injectionSwitch[1]) / 1.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), injectionSwitch[1]))[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), (injectionSwitch[1]) / 1.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), injectionSwitch[1]))[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), (injectionSwitch[1]) / 1.0)), bool(true))))))), (false ? _GLF_FUZZED(vec2(6399.6964, _GLF_IDENTITY(-2.7, clamp(-2.7, -2.7, -2.7)))) : false ? _GLF_FUZZED(vec2(783.956, -875.685)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]) / 1.0)), bool(true))))))))))).x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
}
