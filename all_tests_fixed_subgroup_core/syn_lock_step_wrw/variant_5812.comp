#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, abs(0.0), 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))).y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), bool(bvec4(bool(! (_GLF_DEAD(false))), false, false, false))))))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true)))) && true)))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED((true ? injectionSwitch : injectionSwitch)) : max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-6358.8678), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(vec3(0.0, 0.0, 0.0)))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 1u, 0u), (false ? _GLF_FUZZED(uvec3(62492u, 193877u, 166094u)) : uvec3(subgroup_local_id, 1u, 0u))))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true)) || false))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))), false, true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(223.418), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(1309.7571)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))[_GLF_IDENTITY(1, (1) | 0)])), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1])), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1])), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (read_1)) + 1 : _GLF_FUZZED(workgroup_base))), 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) ^ ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base))))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), max(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))))), 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec3(read_1 + 1, 1u, 0u), (uvec3(read_1 + 1, 1u, 0u)) - uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base)), ((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))) >> 0u)), 1u)), _GLF_IDENTITY(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), uvec2(uvec4(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))) / uvec2(1u, 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(78588))))) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (read_1)) + 1 : _GLF_FUZZED(workgroup_base))), 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) ^ ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base))))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), max(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))))), 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec3(read_1 + 1, 1u, 0u), (uvec3(read_1 + 1, 1u, 0u)) - uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base)), ((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))) >> 0u)), 1u)), _GLF_IDENTITY(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), uvec2(uvec4(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))) / uvec2(1u, 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(78588))))) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (read_1)) + 1 : _GLF_FUZZED(workgroup_base))), 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) ^ ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base))))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), max(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))))), 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec3(read_1 + 1, 1u, 0u), (uvec3(read_1 + 1, 1u, 0u)) - uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base)), ((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))) >> 0u)), 1u)), _GLF_IDENTITY(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), uvec2(uvec4(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))) / uvec2(1u, 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(78588))))) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (read_1)) + 1 : _GLF_FUZZED(workgroup_base))), 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) ^ ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base))))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), max(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))))), 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec3(read_1 + 1, 1u, 0u), (uvec3(read_1 + 1, 1u, 0u)) - uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base)), ((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))) >> 0u)), 1u)), _GLF_IDENTITY(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), uvec2(uvec4(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))) / uvec2(1u, 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(78588))))) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)))))))))))))) + 0u)) | (_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (read_1)) + 1 : _GLF_FUZZED(workgroup_base))), 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) ^ ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (~ (min(read_1 + 1, read_1 + 1))))) : _GLF_FUZZED(workgroup_base))))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), max(true ? read_1 + 1 : _GLF_FUZZED(workgroup_base), true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))))), 1u))) / uvec2(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u)), min(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec3(read_1 + 1, 1u, 0u), (uvec3(read_1 + 1, 1u, 0u)) - uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)) : _GLF_FUZZED(workgroup_base))), 1u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base)), ((true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))) >> 0u)), 1u)), _GLF_IDENTITY(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), uvec2(uvec4(clamp(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u)), ~ (~ (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))) / uvec2(1u, 1u)), _GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(78588))))) : _GLF_FUZZED(workgroup_base))), 1u)), (~ (uvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(workgroup_base))), 1u))) / uvec2(1u, 1u))))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (0 >> _GLF_IDENTITY(int(6), int(6)))), (4) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}
