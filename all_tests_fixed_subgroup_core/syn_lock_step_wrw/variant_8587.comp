#version 460
struct _GLF_struct_2 {
 int _f0;
 bvec4 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 uvec3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 _GLF_struct_1 _f1;
 ivec3 _f2;
 uint virtual_gid;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
 ivec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_0(uvec4(1u)), _GLF_struct_3(mat4x2(1.0), _GLF_struct_1(vec2(1.0), uvec3(1u), ivec2(1), bvec3(true), mat3x2(1.0)), ivec3(1), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_2(1, bvec4(true), 1u)), ivec3(1));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_4._f1.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
