#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(36245u, 96197u, 192377u))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(36245u, 96197u, 192377u)))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(36245u, 96197u, 192377u)))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(min(uvec3(199272u, 51630u, 124948u), 60603u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(min(uvec3(199272u, 51630u, 124948u), 60603u))) / uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> 0u), 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.2)))) - 0.0, (_GLF_IDENTITY((injectionSwitch.x) - 0.0, 1.0 * ((injectionSwitch.x) - 0.0))) + 0.0)), injectionSwitch.x)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, min(_GLF_IDENTITY((injectionSwitch.x) - 0.0, (true ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED(-5232.2635))), (injectionSwitch.x) - 0.0))), 1.0, 1.0, sqrt(0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, sqrt(0.0))))))), injectionSwitch.x)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-75802))), float(1.0), bool(true))), 1.0)))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-87.04)), float(0.0), bool(true))), 1.0), mat4(1.0) * (mat4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-75802))), float(1.0), bool(true))), 1.0)))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-87.04)), float(0.0), bool(true))), 1.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x)), ((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x))) | _GLF_IDENTITY(((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x))), clamp(((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x))), ((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x))), ((max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x))))))))), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uvec3((gl_WorkGroupID.x), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3((gl_WorkGroupID.x), 0u, 0u))))), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupID.x) : _GLF_FUZZED(atomicAdd(subgroup_size, subgroup_size)))) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (0u | 0u) ^ (gl_WorkGroupID.x)))), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), ~ (~ (_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)))))) / 1u), (_GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) << 0u)) - 0u), gl_WorkGroupID.x))))), ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)) : _GLF_FUZZED(workgroup_size)))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u)))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((gl_WorkGroupID.x) - 0u, min(_GLF_IDENTITY((gl_WorkGroupID.x) - 0u, ((gl_WorkGroupID.x) - 0u) ^ _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x)))) * 1u)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0))))))) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), ~ (~ (uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))))))))))) / 1u), clamp((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))) && true))))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (0u) - 0u)))), gl_WorkGroupID.x)), 0u | ((max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (gl_WorkGroupID.x) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (0u) - 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (0u) - 0u))), ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (0u) - 0u)))) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (0u) - 0u)))))), gl_WorkGroupID.x)))), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))))).x) - _GLF_IDENTITY(0u, (0u) | 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) - 0u, ((gl_WorkGroupID.x) - 0u) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)), _GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), (~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))) | (~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)))), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))), 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, min(0u, 0u))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u, 0u))), gl_WorkGroupID.x))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) - 0u), gl_WorkGroupID.x))))), ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 1u, 0u, 1u))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), (uvec3(10810u, 115795u, 178127u) & uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), min(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u)))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, cos(0.0), exp(0.0))), max(float(vec3(0.0, cos(0.0), exp(0.0))), float(vec3(0.0, cos(0.0), exp(0.0))))))) - 0.0), injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)), max(_GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), min(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u)))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, cos(0.0), exp(0.0))), max(float(vec3(0.0, cos(0.0), exp(0.0))), float(vec3(0.0, cos(0.0), exp(0.0))))))) - 0.0), injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)), (false ? _GLF_FUZZED(subgroup_local_id) : (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), min(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u)))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, cos(0.0), exp(0.0))), max(float(vec3(0.0, cos(0.0), exp(0.0))), float(vec3(0.0, cos(0.0), exp(0.0))))))) - 0.0), injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))), _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), min(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u)))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, cos(0.0), exp(0.0))), max(float(vec3(0.0, cos(0.0), exp(0.0))), float(vec3(0.0, cos(0.0), exp(0.0))))))) - 0.0), injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)), ((max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), min(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u)))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, cos(0.0), exp(0.0))), max(float(vec3(0.0, cos(0.0), exp(0.0))), float(vec3(0.0, cos(0.0), exp(0.0))))))) - 0.0), injectionSwitch.x))))) - 0u), gl_WorkGroupID.x))) / 1u))))))) / 1u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), (false ? _GLF_FUZZED(uvec3(42755u, 180771u, 89797u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))))))).x, 0u, 1u, 1u))), (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), (false ? _GLF_FUZZED(uvec3(42755u, 180771u, 89797u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))))))).x, 0u, 1u, 1u))), (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))) >> 0u)), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x), min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x))) - 0u, ((1u ^ 0u) ^ 1u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), min(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), uvec3(1u, 1u, 1u) * (uvec3(uvec4(gl_WorkGroupID, 0u)))), uvec3(uvec4(gl_WorkGroupID, 0u))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), min(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), uvec3(1u, 1u, 1u) * (uvec3(uvec4(gl_WorkGroupID, 0u)))), uvec3(uvec4(gl_WorkGroupID, 0u))))).x)) >> 0u) - 0u)))), 0u | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)) * 1u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)))))), gl_WorkGroupID.x)), clamp(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)))), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))), 0u, 1u, 0u)))), 1u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), clamp(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size)), min((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size))) / 1u))), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)))) : _GLF_FUZZED(subgroup_size))), (~ ((true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), ~ _GLF_IDENTITY((~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x))), uint(uvec4((~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u, (0u) | ((54558u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x))), 0u, 1u, 0u)))) : _GLF_FUZZED(subgroup_size)))) ^ 0u))))), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (_GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ((max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))) | ((max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)))))), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), max((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), max(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))))) - 0u), gl_WorkGroupID.x))))), ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))))) / 1u), clamp((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u), gl_WorkGroupID.x, gl_WorkGroupID.x)))), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)) + 0u))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), 0u ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), ~ (~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))))) << 0u))), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)) >> 0u)) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))), 0u, 1u, 0u)))), 1u), (uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))))) ^ 0u), _GLF_IDENTITY((gl_WorkGroupID.x) - 0u, ((gl_WorkGroupID.x) - 0u) << 0u)), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x))))) ^ 0u) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))), gl_WorkGroupID.x))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (_GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) - 0u)) - 0u), gl_WorkGroupID.x)), max(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) ^ 0u)) - 0u), gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec4((gl_WorkGroupID.x), 0u, 0u, 0u))) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))))) / 1u), clamp((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u + (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x))) - 0u)))), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((gl_WorkGroupID.x)), max(((gl_WorkGroupID.x)), ((gl_WorkGroupID.x)))) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u), gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (_GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) - 0u)) - 0u), gl_WorkGroupID.x)), max(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))) ^ 0u)) - 0u), gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec4((gl_WorkGroupID.x), 0u, 0u, 0u))) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))))) / 1u), clamp((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u + (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x))) - 0u)))), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((gl_WorkGroupID.x)), max(((gl_WorkGroupID.x)), ((gl_WorkGroupID.x)))) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u), gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))), 0u, 1u, 0u))) - 0u))), 1u)) ^ uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))), (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) + ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x) - 0u)) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), 1u * (_GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((1u ^ 0u)), (uint((1u ^ 0u))) | (uint((1u ^ 0u))))), max(uint(_GLF_IDENTITY(uint((1u ^ 0u)), (uint((1u ^ 0u))) | (uint((1u ^ 0u))))), uint(_GLF_IDENTITY(uint((1u ^ 0u)), (uint((1u ^ 0u))) | (uint((1u ^ 0u)))))))))))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u))))) - 0u), gl_WorkGroupID.x))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) << 0u))), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))), max(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) << 0u))), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) << 0u))), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))), 0u ^ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) << 0u))), ~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), gl_WorkGroupID.x)))))))))) / 1u), clamp((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(148356u, 8765u, 33458u)))).x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) - 0u))), gl_WorkGroupID.x)), _GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), (~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))) | (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), (~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))) ^ 0u)))))), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), uvec3(0u, 0u, 0u) | (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u))))), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)), ~ (~ (0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x) - 0u)))))))))))), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) / 1u) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))), 0u ^ ((_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), clamp(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), (gl_WorkGroupID.x) - 0u))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))).x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), ~ (max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u) - 0u), gl_WorkGroupID.x))))))))), 0u, 1u, 0u)))), 1u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(99.58, 543.479)) : vec2(1.0, 1.0))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false), true)))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9472.3957), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_FUZZED(4528.4740)), bvec2(true, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true)))), true))))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3191.5462) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(30.68), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(-8.3)), bvec2(true, false)))).y)), true, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.5, 53.55)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))), uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))), 0u, 1u)))) / 1u) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(103425u))), min(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(103425u))), _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(103425u)))))) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), true))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.4)), bool(false)))) / 1.0))) && ((false)))) && true) || false), ! (! (false))))), bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-530.976, 57.08)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, sin(0.0), 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) / (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED(-18131))), int(1)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED(-18131))), int(1)), (true ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED(-18131))), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))) : _GLF_FUZZED(-41129)))) - 0)) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
