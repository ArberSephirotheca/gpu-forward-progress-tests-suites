#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 uvec4 _f1;
 bool _f2;
 mat3 _f3;
 mat3x2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 ivec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 mat3 _f2;
 _GLF_struct_8 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint _f1;
 vec2 _f2;
 mat4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 uvec2 _f1;
 ivec2 _f2;
 int _f3;
 mat3 _f4;
 bvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uvec3 _f1;
 vec4 _f2;
 mat2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uvec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_9 _f3;
 uvec4 _f4;
 _GLF_struct_10 _f5;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bvec3(((false)), true, false), bvec3(bvec3(bvec3(((false)), true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (false)), _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false, false, false)))) && true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(ivec4(1), _GLF_struct_3(_GLF_struct_0(vec2(1.0), 1.0), uvec4(1u), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), ~ (~ (1u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), clamp((_GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u)))))))), _GLF_IDENTITY(((1u)), _GLF_IDENTITY(uint(uint(((1u)))), (uint(uint(((1u))))) | (uint(uint(((1u))))))) ^ 0u), (1u))), (1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false)), float(vec2(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false)))), 0.0)))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uint(1u)))), ((_GLF_IDENTITY(1u, uint(uint(1u))))) << 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), _GLF_IDENTITY(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), max(_GLF_IDENTITY(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), min(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), _GLF_IDENTITY(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), min(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u)), (max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u))) + 0u)))), (1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), min(_GLF_FUZZED(vec2(-78.69, 126.467).x), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), 1.0 * (_GLF_FUZZED(vec2(-78.69, 126.467).x))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), (false ? _GLF_FUZZED(-6.8) : _GLF_FUZZED(vec2(-78.69, 126.467).x)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), min(_GLF_FUZZED(vec2(-78.69, 126.467).x), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), 1.0 * (_GLF_FUZZED(vec2(-78.69, 126.467).x))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), (false ? _GLF_FUZZED(-6.8) : _GLF_FUZZED(vec2(-78.69, 126.467).x)))))), mix(float(_GLF_FUZZED(6.1)), float(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), min(_GLF_FUZZED(vec2(-78.69, 126.467).x), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), 1.0 * (_GLF_FUZZED(vec2(-78.69, 126.467).x))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-78.69, 126.467).x), (false ? _GLF_FUZZED(-6.8) : _GLF_FUZZED(vec2(-78.69, 126.467).x))))))), bool(true)))) + 0.0), bool(false))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u))), (1u))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min((1u) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), (1u) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-78.69, 126.467).x)), bool(false))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(min((1u), (1u)), max(_GLF_IDENTITY(min((1u), (1u)), 0u ^ (min((1u), (1u)))), min((1u), (1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5921.2364)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))), clamp(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))))), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-3592.6604)), bool(false))))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(883.717, -9.5, _GLF_IDENTITY(-5.4, (-5.4) - 0.0)).y) : 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(883.717, -9.5, -5.4), mix(vec3(_GLF_FUZZED(-7.3), _GLF_FUZZED(-12.48), _GLF_FUZZED(547.643)), vec3((vec3(883.717, -9.5, -5.4))[0], (vec3(883.717, -9.5, -5.4))[1], (vec3(883.717, -9.5, -5.4))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y) : 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(883.717, -9.5, -5.4).y) : 1.0)), 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 1.0, 1.0))))))))) / 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))) / abs(_GLF_ONE(1.0, injectionSwitch.y))))))), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u)))))), uvec3(1u)))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u)))))), uvec3(1u)))) << uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))))))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(157687u, 72411u, 18754u)) : _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) + (uvec3(1u))))), uvec3(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)))), (_GLF_IDENTITY(uvec3(1u), min(uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, 1u))), (0u | 0u) + (~ (_GLF_IDENTITY(1u, max(1u, 1u)))))))), uvec3(1u)))) * uvec3(1u, 1u, 1u))))), _GLF_struct_2(1, uvec2(1u), ivec2(1), 1, mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(-7.4, float(mat3(-7.4, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-7.4)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (float(_GLF_FUZZED(-7.4))) - 0.0)) + 0.0), min(_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (float(_GLF_FUZZED(-7.4))) - 0.0)) - 0.0)) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), (_GLF_IDENTITY(float(_GLF_FUZZED(-7.4)), _GLF_IDENTITY((float(_GLF_FUZZED(-7.4))), float(mat3x2((float(_GLF_FUZZED(-7.4))), 1.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)) + 0.0))))), float(1.0), bool(true)))), bvec4(true), vec3(1.0)), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_struct_5(_GLF_struct_4(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), mat4x2(1.0), mat2x3(1.0), mat3x2(1.0)), 1u, vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3x2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(5968.3805)), bool(false))))), mat4(1.0), mat4x3(1.0)), _GLF_struct_9(_GLF_struct_6(ivec3(1), ivec3(1), mat2x3(1.0), uvec3(1u), ivec3(1), mat3x2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_struct_7(bvec2(true), mat3x4(1.0)), mat3(1.0), _GLF_struct_8(mat4x2(1.0), uvec4(1u), true, mat3(1.0), mat3x2(1.0), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), ivec2(1)))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false))))), uvec4(1u), _GLF_struct_10(1u), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))), (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x))))) - 0u)) + (_GLF_IDENTITY((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), max((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(clamp((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), (180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((180045u & 0u), 0u | ((180045u & 0u))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(clamp((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), (180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((180045u & 0u), 0u | ((180045u & 0u))) << _GLF_IDENTITY(uint(2u), uint(2u))), (clamp((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), (180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((180045u & 0u), 0u | ((180045u & 0u))) << _GLF_IDENTITY(uint(2u), uint(2u)))) - (1u ^ 1u))) | (clamp((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), (180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((180045u & 0u), 0u | ((180045u & 0u))) << _GLF_IDENTITY(uint(2u), uint(2u))))))))), ((gl_WorkGroupSize.x) + ((180045u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x) + ((_GLF_IDENTITY(180045u, max(180045u, 180045u)) & 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) | (uint(2u))))), (false ? _GLF_FUZZED(uvec2(168992u, 86278u).x) : (gl_WorkGroupSize.x) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(180045u, (false ? _GLF_FUZZED(subgroup_id) : 180045u)), max(180045u, 180045u)) & 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(180045u, (false ? _GLF_FUZZED(subgroup_id) : 180045u)), max(180045u, 180045u)) & 0u)) ^ 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) | (uint(2u)))))))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x) + 0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), tan(0.0)))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x) + 0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), tan(0.0)))) > injectionSwitch.y)), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(vec2(2.2, 38.44))) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(bvec4((_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, ! (! (false)))) && true))), true, false, true))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(bvec4((_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, ! (! (false)))) && true))), true, false, true))) || false))))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), uint(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), 1u))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), max((_GLF_struct_replacement_11.workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), uint(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), 1u))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), uint(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), 1u))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_size * workgroup_id, (_GLF_struct_replacement_11.workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), uint(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), 1u))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id)))))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_size * workgroup_id, (_GLF_struct_replacement_11.workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), _GLF_IDENTITY(1u, max(1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), _GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY((_GLF_struct_replacement_11.workgroup_size * workgroup_id), clamp((_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))), _GLF_IDENTITY(1u, max(1u, 1u)))) / uvec2(1u, 1u))))))), (_GLF_struct_replacement_11.workgroup_size * workgroup_id))))))))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, true)), true))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) >> 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) >> 0u), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) >> 0u)))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) : _GLF_IDENTITY(_GLF_FUZZED(25745), (_GLF_IDENTITY(_GLF_FUZZED(25745), (_GLF_FUZZED(25745)) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), false)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(22207))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), (~ (64)) - 0)), max((~ (64)), _GLF_IDENTITY((~ (64)), ((~ (64))) | 0)))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0, min(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.y) / 1.0, float(_GLF_IDENTITY(vec2((injectionSwitch.y) / 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(mat3(vec2((injectionSwitch.y) / 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 1.0)))))), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), bool(true))) - 0.0), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0, (injectionSwitch.y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))) / 1.0, 1.0 * ((injectionSwitch.y) / 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0, min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), bool(true))) - 0.0), (injectionSwitch.y) / 1.0)), (false ? _GLF_FUZZED(2161.8902) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), bool(true))) - 0.0), (injectionSwitch.y) / 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), bool(true))) - 0.0), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), bool(true))) - 0.0), (injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) / 1.0, (injectionSwitch.y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))) / 1.0, 1.0 * ((injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y))) / 1.0, min(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(false))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(false))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) - 0.0)) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(((injectionSwitch.y) / 1.0)), _GLF_IDENTITY(bool(true), (bool(true)) && true))) - 0.0), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))) / 1.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-919.049), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y) / 1.0)), clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)), ((injectionSwitch.y) / 1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2045.9504)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(mod(-281.373, -1085.9977)) : (injectionSwitch.y) / 1.0, (false ? _GLF_FUZZED(mod(-281.373, -1085.9977)) : (injectionSwitch.y) / 1.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), (_GLF_IDENTITY(1.0, (1.0) - log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-5.8 / -3852.6173))), float(1.0), bool(true)))))) / 1.0) * ((injectionSwitch.y) / 1.0)))))))), (true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(mat3x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))).y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(1.0, cos(0.0) * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 * (1.0) : _GLF_FUZZED(3.0)))))), ((injectionSwitch.y) / 1.0) - 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))).y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / _GLF_IDENTITY(1.0, (1.0) / 1.0), (injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), (false ? _GLF_FUZZED(mod(-281.373, -1085.9977)) : (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, log(1.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0), transpose(transpose(mat4x2(1.0, log(1.0), determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 0.0, exp(0.0), 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 1.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)) + (float(_GLF_IDENTITY(mat4x2(1.0, log(1.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 1.0), transpose(transpose(mat4x2(1.0, log(1.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))) * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) / _GLF_IDENTITY(1.0, 0.0 + (1.0))))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), false || (bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, true, true)))))), bvec3(bvec3(bvec3(false, true, true)))), false)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))) && true, ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), bvec3(bvec3(bvec3(false, true, true)))), false))))) && true) && true), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))), false))))) && true) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51.09) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))), true && (bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))))))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))), true && (bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))))))))), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))), true && (bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, true))), (! (bool(bvec4(true, false, true, true)))) || false)))) && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, true))), (! (bool(bvec4(true, false, true, true)))) || false)))) && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, true))), _GLF_IDENTITY((! (bool(bvec4(true, false, true, true)))), (_GLF_IDENTITY((! (bool(bvec4(true, false, true, true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec4(true, false, true, true))))), ! (! (! ((! (bool(bvec4(true, false, true, true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, true))), (! (bool(bvec4(true, false, true, true)))) || false)))) && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(pow(vec2(-43.01, -1.1), injectionSwitch)))).y)))), false || _GLF_IDENTITY((false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.y, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.y, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-9584.4896)), bool(false))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), (true && ((! ((injectionSwitch.x > injectionSwitch.y))))) && true), false))), false, false, true))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-52.87 - vec2(302.685, 3.5))))).y)) || ((false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7152.6328)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      return;
     return;
    }
  }
}
