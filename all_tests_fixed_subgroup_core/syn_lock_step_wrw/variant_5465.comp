#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(150.045), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), bvec2(true, false))).y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), clamp(true ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), true ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), vec2(_GLF_IDENTITY(mat4x2(true ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x2(true ? injectionSwitch : _GLF_FUZZED(max(vec2(7.0, -4.7), vec2(5.9, 466.988))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(-678.440, -7.9, -4895.1053, 1.2, -81.51, -55.29, -5496.2147, 2.5)))))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
                break;
              }
             else
              {
               return;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0), (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-44888, ~ (~ (-44888)))), (_GLF_FUZZED(-44888)) | (_GLF_IDENTITY(_GLF_FUZZED(-44888), min(_GLF_IDENTITY(_GLF_FUZZED(-44888), max(_GLF_FUZZED(-44888), _GLF_FUZZED(-44888))), _GLF_FUZZED(-44888)))))))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter > 0, true, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_injected_loop_counter > 0, true, false, true))), ! (! (bool(bool(bvec4(_injected_loop_counter > 0, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool(bool(bvec4(_injected_loop_counter > 0, true, false, true))), ! (! (bool(bool(bvec4(_injected_loop_counter > 0, true, false, true))))))))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) << 0)) | 0), (1), (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) * 1)) | (3))), _GLF_IDENTITY(int(3), (int(3)) | 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (1 & 1) * (0)), 0))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))));
   GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (! (((false)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-66.30))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size, workgroup_size))))) * workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | uvec2(0u, 0u), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | uvec2(0u, 0u)) / uvec2(1u, 1u))).x, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), max((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec2((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) * uvec2(1u, 1u)))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u))) / uvec2(1u, 1u))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)).x, 0u)))) - 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, min(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), min((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), max((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])) : _GLF_FUZZED(uvec2(30210u, 15905u)))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)))).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u)))).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (true ? _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (~ ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) | uvec2(0u, 0u))), (true ? ~ (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) | uvec2(0u, 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) - uvec2(0u, 0u)), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) | ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) >> uvec2(0u, 0u)) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u))) | uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), min(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))))) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(1u, 1u) * (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) ^ _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(90544u, 113805u)) : uvec2(0u, 0u)))).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))))))))), (max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) - (uvec2(0u, 0u) | uvec2(0u, 0u)))) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x) - 0u)))), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x) - 0u)))), 0u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)), (false ? _GLF_FUZZED((uvec2(192822u, 146813u) | virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)), uvec2(1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)))))))).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u), min((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)))).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(44717u, 6438u, 46841u).y))), 0u)), 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) - uvec2(0u, 0u))) * uvec2(1u, 1u))) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) - uvec2(0u, 0u)) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)).x, 0u))))))))))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u)), ~ (~ (uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u))))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u)), ~ (~ (uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u))))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), uvec2(uvec2(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u)), ~ (~ (uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u))))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])))), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u)), ~ (~ (uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u))))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u)), ~ (~ (uvec2(uvec4(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 1u, 1u))))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))))[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))))), 0u, 0u)), (false ? _GLF_FUZZED(uvec2(135834u, 32172u)) : uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u))))), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u))), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)))))))), 0u))))), min(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), min(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))))))) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u))))), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u))))))), 1u, 1u))) | uvec2(1u, 1u))), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) / (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((uvec2(1u, 1u)) | (uvec2(1u, 1u)), ((uvec2(1u, 1u)) | (uvec2(1u, 1u))) - uvec2(0u, 0u))), 0u))))), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u))), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)))))))), 0u))))), min(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), min(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))))))) | (uvec2(1u, 1u)), (false ? _GLF_FUZZED(max((uvec2(176749u, 15938u) << num_workgroup), subgroup_id)) : _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), min(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))))))) | (uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), min(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))))))) | (uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), min(uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))), uvec2(1u, _GLF_IDENTITY(1u, (50104u & 0u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))))))) | (uvec2(1u, 1u))))))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u)))))), 0u))))), _GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), max(uvec3(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), 0u), uvec3(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((uvec2(1u, 1u)) | (uvec2(1u, 1u)), (_GLF_IDENTITY((uvec2(1u, 1u)) | (uvec2(1u, 1u)), clamp((uvec2(1u, 1u)) | (uvec2(1u, 1u)), (uvec2(1u, 1u)) | (uvec2(1u, 1u)), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))) / uvec2(1u, 1u))), 0u))))))), 1u, 1u))) | uvec2(1u, 1u))), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))[1])), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]))) ^ (uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), (_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), (true ? uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))) | (_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1]), (uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])) | uvec2(0u, 0u)))))) ^ _GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), ~ (~ (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), _GLF_IDENTITY(uvec2(uvec2((uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), (uvec2(uvec2((uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))) / uvec2(1u, 1u))))))) - uvec2(0u, 0u))), 0u, 0u)))))) + uvec2(0u, 0u)).y);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(582.531), _GLF_FUZZED(-8.0)), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), false))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-21962 & 0)); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), injectionSwitch.x)) > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0))))))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(5), int(5))) & -48990)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))), ! (! (! (false))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)))))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & (-32334 * 50434), (0 & (-32334 * 50434)) >> 0))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 71504)); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch, cos(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      break;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(num_workgroup))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(next_virtual_gid, ((_GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uvec2(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), clamp(_GLF_IDENTITY(uvec2(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) - uvec2(0u, 0u)), uvec2(next_virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec2(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) >> uvec2(0u, 0u))))) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | 0), uint(uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 0u | (read_1)))), _GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) << 0u))))) + 1)), (~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))))))), read_1, read_1)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 0 + (int(1)))) / 1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (read_1 + 1)), (~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1, read_1)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), clamp((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, 0u + (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)))))))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 | (_GLF_IDENTITY(1, (1) | 0)))) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))) - 0))), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (true ? 1 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED((73398 >> -34984))))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (true ? 1 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED((73398 >> -34984))))) >> _GLF_IDENTITY(int(1), int(1)))), min((_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (true ? 1 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED((73398 >> -34984))))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (true ? 1 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED((73398 >> -34984))))) >> _GLF_IDENTITY(int(1), int(1)))))))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(0.0)))) > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))), (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) | 0u)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78716, ~ (~ (-78716)))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), int(ivec2((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0)))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), 1u)))), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | 0), uint(uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (read_1 + 1)), (~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1, read_1)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (read_1 + 1)), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) | (0u & 33177u)), _GLF_IDENTITY(read_1, min(read_1, read_1)))))) + 1)), ((~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) | (0u & 33177u)), _GLF_IDENTITY(read_1, min(read_1, read_1)))))) + 1))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), clamp((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, 0u + (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)))))))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 | (_GLF_IDENTITY(1, (1) | 0)))) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(-78716))) & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1)), min((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1)))), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), max(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), max(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))))))) - 0u)) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) << _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), int(ivec3(int(1), 0, 0)))) | (int(1))), int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), int(1)), _GLF_IDENTITY((true ? 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))))), int(1)) : _GLF_IDENTITY(_GLF_FUZZED((73398 >> -34984)), ~ (~ (_GLF_FUZZED((73398 >> -34984)))))), ~ (_GLF_IDENTITY(~ ((true ? 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))))), int(1)) : _GLF_IDENTITY(_GLF_FUZZED((73398 >> -34984)), ~ (~ (_GLF_FUZZED((73398 >> -34984))))))), (~ ((true ? 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))))), int(1)) : _GLF_IDENTITY(_GLF_FUZZED((73398 >> -34984)), ~ (~ (_GLF_FUZZED((73398 >> -34984)))))))) | (~ ((true ? 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))))), int(1)) : _GLF_IDENTITY(_GLF_FUZZED((73398 >> -34984)), ~ (~ (_GLF_FUZZED((73398 >> -34984))))))))))))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))), 1))) & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), (int(1)) | 0), _GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 0, 1))))))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : 8u)))))) | ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), int(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-78716), min(true ? 1 : _GLF_FUZZED(-78716), true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0)))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) - 0u)))))))), 1u))))) | (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | 0), uint(uvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (read_1 + 1)), (~ (~ (read_1 + 1))) - 0u), (~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1, read_1)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (read_1 + 1)), (~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.g) : _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), 0u | (_GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1, read_1)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, 0u + (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)))))))) - 0u), (true ? _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, 0u + (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)))))))) - 0u) : _GLF_FUZZED(uvec4(154241u, 104274u, 72940u, 28982u)[3])))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 | (_GLF_IDENTITY(1, (1) | 0)))) / (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (true ? 1 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED((73398 >> -34984))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(int(int(1)))), int(1))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))), max(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))), read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))))), read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61981) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))))) & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(6105))))))))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u)), max(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u)), _GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u)))))))) | ((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), clamp((_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), (false ? _GLF_FUZZED(20860) : (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), int(ivec2((_GLF_IDENTITY(1, (1) | 0)), 0))))) / _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | 0))), int(ivec2((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78716))) & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), 1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))), 0)))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), 1u)))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), max((4), (4)))))) - 0), 64, _GLF_IDENTITY(4, (4) * 1));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y))))))) && true)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), min((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, false, false)))) || false)), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, false, false)))) || false)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = (1 & int(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, length(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, length(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 0.0)), (true ? transpose(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, length(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 0.0)) : _GLF_FUZZED(mat3x2(865.433, -5.8, -2.2, 538.521, -59.80, -8.5)))))))), injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-33.37) : injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}
