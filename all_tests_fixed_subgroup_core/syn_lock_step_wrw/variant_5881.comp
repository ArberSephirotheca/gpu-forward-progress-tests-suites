#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_id;
 GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base.xyz = GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz = _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, (GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base) | (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, max(GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, clamp(GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base, GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base)))))).xyz;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.2)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.z = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true))))))))
    return;
   barrier();
  }
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(cos(sin(0.0)), mix(float(_GLF_FUZZED(-8.8)), float(cos(sin(0.0))), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, cos(sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, _GLF_IDENTITY(cos(sin(0.0)), 1.0 * (cos(sin(0.0)))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec2(-722.194, 54.67)))).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0, float(mat3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.7)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.7)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.7)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))))) || false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))))) || false)))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))))) || false)))))), false, false)))))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.w;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true, true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2092.6278)), bool(false)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3(false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), true && (false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false)))))) || false))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false)))))) || false))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false)))))) || false))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false)))))), (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), ! (! (false))))))) && true)))), true, true)))))))) || false)) || false) && true)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), ! (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), false || (((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))))))))), _GLF_IDENTITY(false || (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), false))))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))) || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))))), true)))), true)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), bool(bvec3(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))), true && (false || (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))), true, true)))) && true))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (true ? _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(float(float(injectionSwitch.x))), float(_GLF_FUZZED(465.154)), bool(false))) : _GLF_FUZZED(-9.6)))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-98.26)))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, true)), ! (! (bool(bvec4(! (false), true, false, true))))))), bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, true)), ! (! (bool(bvec4(! (false), true, false, true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), float(mat3((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, abs(0.0), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(mat2x3(mat4(mat2x3(1.0, 0.0, 1.0, 1.0, abs(0.0), abs(0.0)))), transpose(transpose(mat2x3(mat4(mat2x3(1.0, 0.0, 1.0, 1.0, abs(0.0), abs(0.0)))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), bool(true))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))))))))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-188.860)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9311.4769) : injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.87)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(-20.42)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-25.55) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-25.55) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false)) || false))))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! ((_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(3897.8458)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true, false, true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bool(bool(! (! ((_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-3108.5576, -62.02)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(64.21, -7.3)))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), _GLF_FUZZED(63.09)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(fract(injectionSwitch)) : injectionSwitch), ((false ? _GLF_FUZZED(fract(injectionSwitch)) : injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(sin(injectionSwitch)))).y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = GLF_merged2_0_3_64_3_1_14GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idworkgroup_base.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, _GLF_IDENTITY(false, ! (! (false)))), false))))), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), bool(bvec2(false, false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(5185.2065, 3.9))) : injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat3x4(1.1, 92.85, 7274.9561, 99.73, 4592.9035, -1.1, 680.191, 9.6, 146.369, 40.87, -0.8, 795.110)) : mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0))))), mix(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat3x4(1.1, 92.85, 7274.9561, 99.73, 4592.9035, -1.1, 680.191, 9.6, 146.369, 40.87, -0.8, 795.110)) : mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)))))), float(_GLF_FUZZED(9648.5286)), bool(false))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat3x4(1.1, 92.85, 7274.9561, 99.73, 4592.9035, -1.1, 680.191, 9.6, 146.369, 40.87, -0.8, 795.110)) : mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(log(1.0)), (false ? _GLF_FUZZED(determinant(mat2(-4.4, -2986.8807, 1314.7597, 378.047))) : abs(log(1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0))))), mix(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(0.0), cos(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(0.0), 1.0, 0.0, 0.0))))), 0.0))), 1.0, 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) * 1.0))), dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(-9885.5791)), bool(false)))), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat3x4(1.1, 92.85, 7274.9561, 99.73, 4592.9035, -1.1, 680.191, 9.6, 146.369, 40.87, -0.8, 795.110)) : mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, abs(log(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, cos(0.0)))))), float(_GLF_FUZZED(9648.5286)), bool(false)))) / exp(0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) : _GLF_FUZZED(3621.8153))) > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))) || _GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))) ^ uvec2(0u, 0u)).y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz)).z, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, clamp(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1))) << (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, (_GLF_IDENTITY(0u ^ 0u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u)) << 0u)), 0u)))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u, 0u))))), _GLF_IDENTITY((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), clamp((_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, max(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, max(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1))))), (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), _GLF_IDENTITY((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), max(_GLF_IDENTITY((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size) : (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1))))), (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1))))) | (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) >> uvec4(0u, 0u, 0u, 0u)))).xyz, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, _GLF_IDENTITY((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), clamp((GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1), (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1))) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz)).z) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY(-7176.6643, min(_GLF_IDENTITY(-7176.6643, mix(float(-7176.6643), float(_GLF_FUZZED(20.50)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(-7176.6643, (false ? _GLF_FUZZED(-835.641) : _GLF_IDENTITY(-7176.6643, (-7176.6643) - 0.0))), float(mat2(_GLF_IDENTITY(-7176.6643, (false ? _GLF_FUZZED(-835.641) : _GLF_IDENTITY(-7176.6643, (-7176.6643) - 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))) : injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz)).z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz)).z), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, clamp(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, uvec4(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1[0], GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1[1], GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1[2], GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1[3])), GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)), (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (true ? GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1 : _GLF_FUZZED((+ GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size)))))).xyz, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)) : _GLF_FUZZED(-399.238))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)))))) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y), float(mat2x3((false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))))))) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz, ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7176.6643) : injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(149045u, 189304u, 43109u)) : _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz)))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))).z))))))) * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w), (~ (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z, clamp(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z, GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z, GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.z)) * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w)) | 0u))) + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z + 1) % GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.x = next_virtual_gid;
 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.x = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.x;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x = _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1)).xyz.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(vec4(float(injectionSwitch.y), 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(float(injectionSwitch.y), 0.0, 1.0, 1.0), min(vec4(float(injectionSwitch.y), 0.0, 1.0, 1.0), vec4(float(injectionSwitch.y), 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7471.6018)), bool(false))), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.y = _GLF_IDENTITY(read_1, min(read_1, read_1));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_17next_virtual_gidread_1subgroup_idsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.w = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x;
 GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.y = GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat2x4(_GLF_IDENTITY(mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(-1.7, -6.5, 9.7, 908.992, -1.0, -7264.6307, 8.0, -8.0, -5.4, -9.9, 909.616, -1.3, -912.433, -31.06, -6.5, -38.10)) : mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(-1.7, -6.5, 9.7, 908.992, -1.0, -7264.6307, 8.0, -8.0, -5.4, -9.9, 909.616, -1.3, -912.433, -31.06, -6.5, -38.10)) : mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(-1.7, -6.5, 9.7, 908.992, -1.0, -7264.6307, 8.0, -8.0, -5.4, -9.9, 909.616, -1.3, -912.433, -31.06, -6.5, -38.10)) : mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), mat4(1.0) * (_GLF_IDENTITY(mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(-1.7, -6.5, 9.7, 908.992, -1.0, -7264.6307, 8.0, -8.0, -5.4, -9.9, 909.616, -1.3, -912.433, -31.06, -6.5, -38.10)) : mat4(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x], uint(GLF_merged2_0_3_64_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idread_1.xyz.y + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
