#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))))).x) - 0u, (_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ((_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) - 0u) ^ 0u)) | 0u)), _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)).x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), true, true, true)))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6963.7302, -985.231), (vec2(-6963.7302, -985.231)) * mat2(1.0))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(vec2(-6963.7302, -985.231)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6963.7302, -985.231)))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6963.7302, -985.231)))).y) * 1.0, ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6963.7302, -985.231)))).y) * 1.0) - _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) / 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), _GLF_IDENTITY(bool(bvec3(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), true, true)), bool(bool(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false))) && true))), true, true))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) / 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), _GLF_IDENTITY(bool(bvec3(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), true, true)), bool(bool(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false))) && true))), true, true))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) / 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), _GLF_IDENTITY(bool(bvec3(bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))) || false)))), true, true)), bool(bool(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + _GLF_IDENTITY((injectionSwitch.y), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x4(0.0 + (injectionSwitch.y), 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))))))))))))) || false))) && true))), true, true))))))))))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (injectionSwitch.y))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(0u, 0u) | (uvec2(workgroup_id, 0u))), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, 0u))))), 0u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((90904u & 0u), (false ? _GLF_FUZZED(11958u) : _GLF_IDENTITY((90904u & 0u), ((90904u & 0u)) << 0u))))), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, 0u))))), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), workgroup_id), (min(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))) ^ 0u)))), workgroup_id)) / 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), 0u), (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(19609u, 58308u), (uvec2(19609u, 58308u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : uvec2(workgroup_id, 0u) : _GLF_FUZZED(uvec2(142431u, 81216u)))))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(min(num_workgroup, workgroup_size)))), 1u)), uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), min(_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((187049u % subgroup_id))))), clamp(uvec2(workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), _GLF_IDENTITY(uint(uvec2(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), 1u)), (uint(uvec2(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), 1u))) << 0u)), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u))))), 0u)), 0u))))), uvec2(workgroup_id, 0u), uvec2(workgroup_id, 0u))), uvec2(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_id), (0u ^ (workgroup_id)) | (0u ^ (workgroup_id)))), workgroup_id)), 0u))), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, 0u))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))), uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) ^ 0u), 0u), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), 0u + (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))), min(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (3u))), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)))))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), min((0u), (0u))))))))))))), 0u, 1u)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((90904u & 0u), (false ? _GLF_FUZZED(11958u) : _GLF_IDENTITY((90904u & 0u), ((90904u & 0u)) << 0u))))), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, 0u))))), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), workgroup_id), (min(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))) ^ 0u)))), workgroup_id)) / 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), 0u), (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(19609u, 58308u), (uvec2(19609u, 58308u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : uvec2(workgroup_id, 0u) : _GLF_FUZZED(uvec2(142431u, 81216u)))))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(min(num_workgroup, workgroup_size)))), 1u)), uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), min(_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((187049u % subgroup_id))))), clamp(uvec2(workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), _GLF_IDENTITY(uint(uvec2(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), 1u)), (uint(uvec2(min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), 0u), 1u))) << 0u)), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u))))), 0u)), 0u))))), uvec2(workgroup_id, 0u), uvec2(workgroup_id, 0u))), uvec2(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_id), (0u ^ (workgroup_id)) | (0u ^ (workgroup_id)))), workgroup_id)), 0u))), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, 0u))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))), uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) ^ 0u), 0u), (false ? _GLF_FUZZED(uvec2(19609u, 58308u)) : uvec2(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), 0u + (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))), min(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (3u))), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)))))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), min((0u), (0u))))))))))))), 0u, 1u))))) * 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) | 0u)) ^ 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (false) || false))), bool(bvec3(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false))), bool(bool(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)))))), true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : injectionSwitch.x), max((false ? _GLF_FUZZED(_GLF_IDENTITY(tanh((-3.6 / 51.07)), mix(float(tanh((-3.6 / 51.07))), float(_GLF_FUZZED(4222.4665)), bool(false)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((802.647 + 568.875)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(573.530)), bvec2(true, false))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((802.647 + 568.875)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(573.530)), bvec2(true, false))).x : _GLF_FUZZED(638.992)))), (false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x)))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.1))), mix(float(false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.1)))), float(_GLF_FUZZED(-9.1)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : injectionSwitch.x))), mix(float(max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.1))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(tanh((-3.6 / 51.07))) : injectionSwitch.x)))), float(_GLF_FUZZED(2.6)), bool(false)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), bool(bvec2((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) && true))))))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false)), false))) && true)))))))))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), bool(bvec2((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))) && true)))))), bool(_GLF_IDENTITY(bvec3((! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))) && true)))))), false, false), bvec3(bvec3(bvec3((! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))) && true)))))), false, false))))))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false), bvec2(bvec3(bvec2(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false), false)))))))))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))), ! (! ((false)))), false)), (bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), ! (! ((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) || false)), false))) && true)))))))))) && true))))))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))), false || (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5612.1333) : injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)) / 1u), _GLF_IDENTITY(1u, (1u) * (1u | 1u)), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, abs(0.0), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x))), clamp(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-77.41)), bvec2(true, false))))).x))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(7952.9629)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(vec4(0.0, 1.0, 0.0, log(1.0)))), 0.0, 1.0)))))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)) / 1u), _GLF_IDENTITY(1u, (1u) * (1u | 1u)), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, abs(0.0), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x))), clamp(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-77.41)), bvec2(true, false))))).x))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(7952.9629)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(vec4(0.0, 1.0, 0.0, log(1.0)))), 0.0, 1.0)))))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)) / 1u), _GLF_IDENTITY(1u, (1u) * (1u | 1u)), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, abs(0.0), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x))), clamp(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-77.41)), bvec2(true, false))))).x))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(7952.9629)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(vec4(0.0, 1.0, 0.0, log(1.0)))), 0.0, 1.0)))))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)) / 1u), _GLF_IDENTITY(1u, (1u) * (1u | 1u)), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, abs(0.0), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x))), clamp(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-77.41)), bvec2(true, false))))).x))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(7952.9629)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(vec4(0.0, 1.0, 0.0, log(1.0)))), 0.0, 1.0)))))), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) % subgroup_size)) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))) && true, bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))) && true, true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false, false, true)), ! (! (bool(bvec4(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true), false, false, true))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || (bool(bvec2((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))), false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))) && _GLF_IDENTITY(true, ! (! (true))))))), false)), false || (bool(bvec2((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))), false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1] : _GLF_FUZZED(8.3)))), vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(9.7)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.62), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.62), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.62), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-72.75)), bool(false)))), bvec2(true, true))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.62), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-72.75)), bool(false)))), bvec2(true, true))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.62), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-72.75)), bool(false)))), bvec2(true, true))))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))), (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(subgroup_local_id))))))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) | 0), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
