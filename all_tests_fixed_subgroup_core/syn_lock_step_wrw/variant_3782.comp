#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1)))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      continue;
     barrier();
    }
  }
 uvec4 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))))), (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))) && true)))))), false)))), ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false))), true))))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false), false))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false), false), false))), true))))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false), false)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(851.796), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(false)))), float(_GLF_FUZZED(7161.8605)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x = subgroup_id;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x;
 _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x = GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w, _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w), ~ (~ (~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w))))))), (true ? (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w), ~ (~ (~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w))))))) : _GLF_FUZZED(usubBorrow(86072u, 62783u, subgroup_id)))) << (1u ^ 1u));
uint subgroup_size = 16;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_size;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z = GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y;
 do
  {
   GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x = subgroup_local_id;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y = GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x))), 0u)).x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))), min(0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))))))), (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id) : gl_NumWorkGroups)).x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && true), false)), true && (bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && true), false)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)))))))), bool(true))))) || (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, false))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)))))))), bool(true))))) || (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, false)))))), (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, length(0.0)))))))), bool(true))))) || (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, false))))))) && true))) || false))); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.y = _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (num_workgroup)), 0u | (~ (~ (num_workgroup)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (false) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (6) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | 0))), int(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), (6) - 0)), 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), 0 ^ (int(_GLF_IDENTITY(6, (6) | (6)))))))); _injected_loop_counter --)
  {
   GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.z = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z, _GLF_IDENTITY(0u | (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z), (0u | (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z)) - 0u));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z = workgroup_id;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w = GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))))))))), false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     else
      {
       _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, uvec4(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id[0], GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id[1], GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id[2], GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id[3]))))).w, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) ^ 0u), 1u * ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(radians(2.1)))), 1.0, log(1.0), 0.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(radians(2.1)))), 1.0, log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), 0.0, 0.0, 0.0)))))) < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, uvec2(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id[0], GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id[1])).y;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) >> 0))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), ! (! (_GLF_DEAD(false)))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)), ! (! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))))))))), _GLF_IDENTITY(false, (false) || false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, true))), false, false, false)))) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false), false)), false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), false))))), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false)))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.2, mix(float(_GLF_FUZZED(-4.0)), float(-0.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-5.0)), bool(false))), injectionSwitch[1]))))) * mat2(1.0))[0], _GLF_FUZZED(-1937.1605)), bvec2(true, false)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), false || (! ((false) && true)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(24.02) : injectionSwitch.x)))) > injectionSwitch.y)), false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(min(sqrt(0.0), sqrt(0.0)), max(min(sqrt(0.0), sqrt(0.0)), min(sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat4(9824.6836, -580.057, 7040.3334, -8.6, -231.674, 91.78, 96.28, -890.933, 974.642, -99.94, 3489.3698, 5.3, 5210.8764, -1249.3572, -58.75, -9.5))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))), vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(min(sqrt(0.0), sqrt(0.0)), max(min(sqrt(0.0), sqrt(0.0)), min(sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat4(9824.6836, -580.057, 7040.3334, -8.6, -231.674, 91.78, 96.28, -890.933, 974.642, -99.94, 3489.3698, 5.3, 5210.8764, -1249.3572, -58.75, -9.5))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))), vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), max(vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(min(sqrt(0.0), sqrt(0.0)), max(min(sqrt(0.0), sqrt(0.0)), min(sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat4(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat4(9824.6836, -580.057, 7040.3334, -8.6, -231.674, 91.78, 96.28, -890.933, 974.642, -99.94, 3489.3698, 5.3, 5210.8764, -1249.3572, -58.75, -9.5))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))), vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0))))).y), float(_GLF_FUZZED((true ? -9.4 : -2.8))), bool(false)))), float(_GLF_FUZZED(-5.3)), bool(false)))))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3((injectionSwitch) * mat2(1.0), 1.0)))).y)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.z * GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))) | _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.z * GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z), 0u ^ ((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.z * GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z))));
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y = workgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) : GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, true && (false)))), true, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, true && (false)))), true, false)))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), true && (bool(bvec3(false, true, true)))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(738.481), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) ^ 0u), (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, uint(uvec2(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, 1u))), GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x)) * _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y) : uint(3u))), uint(3u)))), _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, min(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, clamp(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y)))) + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)))).x) / 1u) * _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), max(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid)) * uvec4(1u, 1u, 1u, 1u)))), GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid)).xyz.x, (true ? GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, min(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id)).xyz.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid) * uvec4(1u, 1u, 1u, 1u)).xyz.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)).x * _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u)), 0u ^ (~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u)))))) * 1u), _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / 1u)) | (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u)))) * 1u, max((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / 1u)) | (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u)))) * 1u, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x) / 1u)) | (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x), (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x)) - 0u)))) * 1u))) : _GLF_IDENTITY(_GLF_FUZZED((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * num_workgroup)), (_GLF_FUZZED((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * num_workgroup))) | (_GLF_FUZZED((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * num_workgroup)))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(num_workgroup))))), GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 14134u) + _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x), (_GLF_IDENTITY((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x), clamp((GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x), (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x), (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x)))) << 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, clamp(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid)), GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, clamp(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, max(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid, GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid)))))).xyz.x, min(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x, ~ (~ (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x))))))) + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1)), (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y, ~ (~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y)))), (~ (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y)) + 0u)));
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))), injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83.87) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) - 0)))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0)))))) / 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bool(true))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false))))), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bool(true))))))) || false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(smoothstep(554.356, -439.851, log(vec2(3.3, 73.60)))))))).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(61.80, 1.0)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(61.80, 1.0)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))))), true && (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))))))))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))))), true, true)))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(abs(0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) / uvec4(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)).xyz, (false ? _GLF_FUZZED(uvec3(50160u, 175241u, 35790u)) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) / uvec4(1u, 1u, 1u, 1u)).xyz, (false ? _GLF_FUZZED(uvec3(50160u, 175241u, 35790u)) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) / uvec4(1u, 1u, 1u, 1u)).xyz, (false ? _GLF_FUZZED(uvec3(50160u, 175241u, 35790u)) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) / uvec4(1u, 1u, 1u, 1u)).xyz, (false ? _GLF_FUZZED(uvec3(50160u, 175241u, 35790u)) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) / uvec4(1u, 1u, 1u, 1u)).xyz, (false ? _GLF_FUZZED(uvec3(50160u, 175241u, 35790u)) : GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz))) - uvec3(0u, 0u, 0u)))).x, max(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x)) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u), clamp((GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u), (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u)))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)), min(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) >> 0u))), _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), 0u)), _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)), _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)))))).x), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) << 0u))), 1u, 1u))))), 0u)).x), uint(uvec4(~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)).x), 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y))))), ~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u)).x))))) + ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y) ^ 0u) + 1) % GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.w = next_virtual_gid;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), true, true))) || false))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), max(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))))), int(ivec4(int(_GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(0, 0 + (0)), 0, 1))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x = GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_idnext_virtual_gid.w;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (true ? 0 ^ (1) : _GLF_FUZZED(-99643)))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))))), 0 ^ (1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) / 1)))), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, int(int(1)))), 0 | (0 ^ (_GLF_IDENTITY(1, int(int(1)))))), 0 ^ (_GLF_IDENTITY(1, int(int(1))))))), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) - 0))))))) : _GLF_FUZZED(94751)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (_GLF_IDENTITY(64, 0 ^ (64))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (_GLF_IDENTITY(64, 0 ^ (64))) - 0))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) && true, _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y)) && true), true && ((((injectionSwitch.x > injectionSwitch.y)) && true))) || false))) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.9) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 1.0, 1.0, sqrt(1.0), 0.0))))) / vec2(1.0, 1.0)).x, injectionSwitch.x))) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (injectionSwitch.y) / 1.0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(true))))))), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), min(vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))))), 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), min(vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), vec2(_GLF_FUZZED(vec3(1.2, 187.373, 0.1).x), _GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))))), 0.0, 0.0)))))), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(359.109) : (injectionSwitch)[0])), _GLF_FUZZED(1.4)), vec2(_GLF_FUZZED(41.82), (injectionSwitch)[1]), bvec2(false, true))))[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y)), injectionSwitch.y)))), false, false))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false))), true, false, false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          return;
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), true && (bool(bvec4((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false))), false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), false)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(exp(0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0))) + 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(exp(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, sqrt(exp(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, sqrt(exp(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, sqrt(exp(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(vec2(-9789.5593, 4506.2929))))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z = read_1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z = read_1, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z = read_1)))) - 0u);
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + 1), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
