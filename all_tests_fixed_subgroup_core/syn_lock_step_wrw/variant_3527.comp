#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(6.8), (true ? injectionSwitch.x : _GLF_FUZZED(6.8)) / 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) && true)), (bool(_GLF_IDENTITY((false), ((false)) && true))) || false)))), true))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7362.2963) : injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7362.2963) : injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))) || false), false, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false), false, true)), ! (! (bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uint(subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_id)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), 0u | (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (~ (max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY((uint(subgroup_size)), max(_GLF_IDENTITY((uint(subgroup_size)), ((uint(subgroup_size))) >> 0u), (uint(subgroup_size)))) - 0u))))), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (subgroup_size), (subgroup_size))), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), min((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size)))) + 0u))))))))) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, (1) | 0)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) * cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0, abs(1.0), 1.0, abs(0.0), 1.0), (true ? mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec3(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x), 0.0)), dot(_GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec3(mat2(vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), log(1.0)))), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0, abs(1.0), 1.0, abs(0.0), 1.0) : _GLF_FUZZED(mat3(2174.0668, 2.2, 50.61, -579.157, -41.87, -36.45, 3068.3257, 9287.6349, -4.8)))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(41.60) : 0.0))), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), (bool(bvec4(! (false), false, true, false))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : 1.0)), 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))))))), false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-70.76, -5.0, 49.37)) : vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(600.437)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : 0.0))), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), vec3(mat4((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0))) + vec3(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat3(_GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), clamp(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)))))) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-499.484)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-499.484)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0)))) : _GLF_FUZZED(vec3(-938.671, -8167.6798, -6.4))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(41.60) : 0.0))), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), (bool(bvec4(! (false), false, true, false))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : 1.0)), 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))))))), false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-70.76, -5.0, 49.37)) : vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(600.437)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : 0.0))), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), vec3(mat4((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0))) + vec3(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat3(_GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), clamp(vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)), vec3(mat4(_GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))))), ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0))))))) * mat3(1.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 1.0, sin(sin(0.0)), 0.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)))))) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-499.484)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-499.484)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0)))) : _GLF_FUZZED(vec3(-938.671, -8167.6798, -6.4))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))))), true))) && true), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.2)), float(0.0), bool(true))), 0.0))))))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(73.33)), float(determinant(mat2(1.0, 0.0, 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(203.226) : dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-4.7), _GLF_FUZZED(vec2(-4870.7346, 0.9).r), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(8164.8321)), bvec3(true, true, false))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.2) : 0.0)), 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)))))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), true && (bool(bvec4(! (false), false, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-5.6), _GLF_FUZZED(-3026.4336), _GLF_FUZZED(90.73)), vec3(((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))[0], ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))[1], ((vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))[2]), bvec3(true, true, true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(203.226) : dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))), 1.0))), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)))))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), true && (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) || false))), true))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), min(0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(findLSB(subgroup_id)) : int(5))))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))), clamp(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))), int(int(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7)))))))))), ~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7))))))), (~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))) | (7)))))))) + 0)))))) | (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(log(vec2(1.0, 1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0)), 1.0, sqrt(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x), 0.0)), vec2(mat2x4(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(4483.1031)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(4483.1031)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(4483.1031)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), injectionSwitch)).x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uvec3(buf[virtual_gid], 1u, 0u))), (_GLF_IDENTITY(uint(uint(uvec3(buf[virtual_gid], 1u, 0u))), (uint(uint(uvec3(buf[virtual_gid], 1u, 0u)))) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u), ~ (~ (uint(uint(uvec3(buf[virtual_gid], 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))))))))))), uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 1u, 0u)), uint(uint(uint(uvec3(buf[virtual_gid], 1u, 0u)))))), 0u, 0u)))) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, abs(0.0)))))), injectionSwitch.x)))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(workgroup_id, subgroup_local_id)))))))) - (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))), uint(8u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))), uint(8u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))), uint(8u)))))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(3319.8892)), bool(false))), injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
}
