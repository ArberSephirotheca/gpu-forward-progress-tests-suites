#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uvec4 GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0)), mat2x3(_GLF_IDENTITY(mat2x3(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0)))))))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0)), mat2x3(_GLF_IDENTITY(mat2x3(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mat2x3(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))), abs(1.0))))))))) / exp(0.0))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec4 GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(1.1, clamp(1.1, 1.1, 1.1))))) > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))) > injectionSwitch.y)))), bool(bvec2(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1)), float(mat2x3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1)), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)))))) > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))) > injectionSwitch.y)))), bool(bvec2(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1)), float(mat2x3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1)), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)))))) > injectionSwitch.y)), true))), false, false, true))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-2.6))) / 1.0), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4225.2325)))))) && true))) ? injectionSwitch.x : _GLF_FUZZED(1.1)), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(1.1))) - 0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), float(vec2(float(_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), 0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(1.0)))))) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x : _GLF_FUZZED(1.1)), max((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(1.0)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(1.0)))), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (injectionSwitch) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x : _GLF_FUZZED(1.1)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0 * (injectionSwitch.y)), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat3(1.0)))))) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true))), 0.0)))) - vec2(0.0, 0.0)).x : _GLF_FUZZED(1.1))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))))), bool(bvec2(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(injectionSwitch)) : injectionSwitch)).x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(1.1))) > injectionSwitch.y)), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.xy = GLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw = GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(1.0), abs(1.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(1.0), abs(1.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(1.0), abs(1.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(1.0), abs(1.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) / 1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x = _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.1)), bool(false))))) | (subgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z = _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0, cos(0.0), abs(0.0)))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.x = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.x = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.x = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x, (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.x = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x) >> 0u)))), ((GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (uvec4(0u, 0u, 0u, 0u) & uvec4(80038u, 89884u, 127627u, 98646u)) | (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base)), min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)))).x, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u)))))).x)))) / 1u) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(vec2((injectionSwitch.x), 1.0)), max(float(vec2((injectionSwitch.x), 1.0)), float(vec2((injectionSwitch.x), 1.0))))) : _GLF_FUZZED(-8.5))) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy.y = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w, 0u | (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy.y = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(7.2, -9.6).r)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy.x = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, max(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(-9.8)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-41.15) : injectionSwitch.y)) : _GLF_FUZZED(86.72)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), true, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), true, false)), true, true))))), true))))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1, (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1) | (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1)), (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1, (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1) | (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1))) | (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1, (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1) | (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1)))).xy.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_6num_workgroupread_1))), (~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy)) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))).x, min(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy), (~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1)).xy)) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))).x, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy), (~ (GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.xy)) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ -2.9)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(75.09)), bool(false))))), injectionSwitch.x)))))))))).x)))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false), false || ((false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(650.636), _GLF_FUZZED(471.333)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, max(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(max(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.x)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base)).z, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))).z)))) * 1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z)))) * 1u, 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z)))) * 1u)))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))).z)))) * 1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z)))) * 1u, 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z, uint(uint(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z)))) * 1u)))), 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w) - 0u), min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1) : GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) | _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), clamp((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), 0u ^ ((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))), (_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), 0u ^ ((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base[0], GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base[3])).w)) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, min(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w, GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).y) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)))))) + ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y), ((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)) / 1u) / 1u))));
 GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.z = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.z, (GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.z) >> 0u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), uint(1), _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) >> 0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5.5), (_GLF_FUZZED(5.5)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(1.5)), bool(false)))))), float(0.0), bool(true)))), 1.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1246.2308), _GLF_FUZZED(-6.2)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? virtual_gid : _GLF_FUZZED(virtual_gid)))], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4))) | 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4)), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)))), _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), 0 + ((4))))) * (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 0, 1))), 1))))), 1 * (1)) | 0)), 64, _GLF_IDENTITY(0, max(0, 0)));
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.w = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_14num_workgroupread_1subgroup_local_idworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.y = GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[GLF_merged3_0_2_43_2_1_16_3_1_6GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gidread_1.z], uint(GLF_merged2_0_2_51_2_2_43GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_6num_workgroupread_1.zw.y + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
