#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat3x4 _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 bvec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 vec3 _f1;
 bvec2 _f2;
 bool _f3;
 vec2 _f4;
} ;

struct _GLF_struct_11 {
 bool _f0;
 vec4 _f1;
 mat2x4 _f2;
 ivec4 _f3;
 bvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_14 {
 uint workgroup_base;
 _GLF_struct_11 _f0;
 uvec3 _f1;
 _GLF_struct_12 _f2;
 ivec2 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_8 {
 bool _f0;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 mat3x4 _f3;
 _GLF_struct_8 _f4;
 bvec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 bvec2 _f1;
 ivec4 _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 float _f1;
 mat4 _f2;
 mat2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 mat2 _f1;
 vec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 vec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 _GLF_struct_1 _f2;
 uvec4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 uint workgroup_id;
 uint _f1;
 mat2 _f2;
 _GLF_struct_9 _f3;
 ivec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) && true, bool(bvec4((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) && true, true, true, false))), ((bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false, true))) && true) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-21297) : int(3))))), clamp((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-21297) : int(3))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-21297) : int(3))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-21297) : int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0, (0) << _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)); _injected_loop_counter --)
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, tan(0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, tan(0.0))))))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true, true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(_GLF_struct_0(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))), vec2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) << 0))), (int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) << 0)))) >> 0)))), bvec2(true), _GLF_struct_1(ivec2(1), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))) - mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), max(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))), float(_GLF_FUZZED(-8.4)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(37.32))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0)), 0.0))))))) - 0.0))), 0.0), float(mat4x3(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), mix(float(_GLF_FUZZED(-633.970)), float(min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.0)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8706.6700))), 1.0, 0.0, 1.0)))))))), 0.0)))), vec4(1.0), ivec2(1)), uvec4(1u), _GLF_struct_2(vec3(1.0), 1.0, mat4(1.0), mat2(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_struct_3(mat2(1.0), bvec2(true), ivec4(1), mat3x4(1.0), 1.0)), gl_WorkGroupID.x, 1u, mat2(1.0), _GLF_struct_9(_GLF_struct_5(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(-18.21, -9197.3815)) : 1.0))), mat3x2(1.0)), _GLF_struct_6(vec4(1.0)), _GLF_struct_7(bvec2(true), ivec3(1), ivec2(1)), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_8(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, true)))), bvec2(true), 1u), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))))) >> 0), 0 + (0 | (1)))) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0), (_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(abs(-28034)))) + (0 | (1)))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) + 0))) ^ 0), _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), _GLF_IDENTITY(0, (0) | 0) + (0 | (1)))) >> 0, max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), max(_GLF_IDENTITY(0 | (1), ~ (_GLF_IDENTITY(~ (0 | (1)), (~ (0 | (1))) / 1))), 0 | (1))), (_GLF_IDENTITY(0 | _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec4((1), 0, 1, 1)))))), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | _GLF_IDENTITY((1), 0 + ((1))), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))), clamp(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))), int(ivec2(_GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))), ~ (~ (min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0)))))), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))), ~ (~ (min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 0 ^ (0))))))))) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (_GLF_IDENTITY(1, (1) >> (0 | 0)))))) >> 0, (true ? (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0 : _GLF_FUZZED(27540)))), 0 + (0 | _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), 1 * ((1)))))))) >> 0), _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), 0 | (1), 0 | (1)))) >> 0), 0 + (0 | (1)))) >> 0))))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(ivec2(1), _GLF_struct_14(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_10.workgroup_id, min(workgroup_size * _GLF_struct_replacement_10.workgroup_id, workgroup_size * _GLF_struct_replacement_10.workgroup_id)), _GLF_struct_11(true, vec4(1.0), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), ivec4(1))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), ivec4(1))), min(_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), min(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), (ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0))))) - ivec4(0, 0, 0, 0))))) - ivec4(0, 0, 0, 0)), ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), ivec4(1))), max(_GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), ivec4(1))), _GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))), ivec4(1)))))))) / ivec4(1, 1, 1, 1)), bvec2(true), vec3(1.0)), uvec3(1u), _GLF_struct_12(mat3x4(1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), ((1.0)) / 1.0))) / 1.0, min(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), ((1.0)) / 1.0))) / 1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), ((1.0)) / 1.0))) / 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bvec2(true), true, vec2(1.0)), ivec2(1), _GLF_struct_13(mat3x4(1.0), mat4x3(1.0), mat3(1.0), mat3x2(1.0), bvec3(_GLF_IDENTITY(true, (true) && true)), bvec3(true), 1u)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_15._f1.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + (subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_15._f1.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_struct_replacement_15._f1.workgroup_base + subgroup_id * subgroup_size)))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)) ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY((_GLF_struct_replacement_15._f1.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))) | 0u))), min((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) >> 0u)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | 0u), 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))))))))), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (true ? 0u ^ (subgroup_id) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), min(0u ^ (subgroup_id), 0u ^ (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u))))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) : _GLF_FUZZED(uvec2(76866u, 88421u).y))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))))) * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size)) | 0u) >> 0u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), uint(uint(((subgroup_id))))) >> 0u))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u)), 1u))) ^ (subgroup_id), ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u))) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)) >> 0u)))), 1u))) ^ (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u) << 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(_GLF_IDENTITY(uvec2((_GLF_struct_replacement_15._f1.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)), 0u ^ (subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) << 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) << 0u)), 1u, 1u)), 0u ^ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) << 0u)), 1u, 1u))))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), 0u | ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), min((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) >> (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, uint(uint(0u))) ^ (subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 1u)))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | 0u), 0u ^ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) | ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))))))))), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))) ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u)), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))))))))) : _GLF_FUZZED(uvec2(76866u, 88421u).y))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) >> 0u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(subgroup_id, 0u, 0u, 0u)), ((uvec4(subgroup_id, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))))), 1u, 0u, (192306u & 0u)))), 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u))))))) ^ 0u)) | (0u)), 1u))) ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), min((subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))) * subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u) << 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), 0u), (false ? _GLF_FUZZED(uvec2(173934u, 25992u)) : uvec2((_GLF_struct_replacement_15._f1.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(167743u) : subgroup_id)))) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))), min((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), max(~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), ~ ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) * 1u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((false ? subgroup_size : virtual_gid)))) ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> ((1u ^ 1u) ^ 0u)))) / 1u))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | 0u), 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), uint(uvec4((subgroup_id), (107152u & 0u), 1u, 1u))), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(virtual_gid))), (subgroup_id)))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u)), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u)), clamp((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(uvec2(76866u, 88421u).y), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec2(76866u, 88421u).y), (_GLF_FUZZED(uvec2(76866u, 88421u).y)) / 1u), _GLF_FUZZED(uvec2(76866u, 88421u).y), _GLF_IDENTITY(_GLF_FUZZED(uvec2(76866u, 88421u).y), ~ (~ (_GLF_FUZZED(uvec2(76866u, 88421u).y)))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (0u | 0u), 1u))))))) * subgroup_size) >> 0u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) | 0u), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u))), clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 1u))) ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u) << 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), 0u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.workgroup_base, min(_GLF_struct_replacement_15._f1.workgroup_base, _GLF_struct_replacement_15._f1.workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))) - 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup)))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = (0 & 96013); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), true))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && true)), true))))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))) && true)), _GLF_IDENTITY(true, true && (true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true)), true, true)))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))))), false, true)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))) && _GLF_IDENTITY(true, ! (! (true))))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))) && _GLF_IDENTITY(true, ! (! (true))))), true), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)) || false)))), true)), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)) || false)))), true)), true))), true)))))), true, true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) << 0)], (injectionSwitch[1]) - 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true))), false, false))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-2041 & 0)); _injected_loop_counter --)
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
}
