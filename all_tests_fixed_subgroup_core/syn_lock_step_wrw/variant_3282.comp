#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.1)), bool(false))), injectionSwitch.x), min(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.1)), bool(false))), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.1)), bool(false))), injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(49.56, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1283.0688) : 49.56))) : injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(377.912, max(377.912, 377.912)))), float(injectionSwitch.y), bool(true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(972.026)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-43.28)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (true) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, _GLF_IDENTITY(-4.5, min(-4.5, -4.5)), _GLF_IDENTITY(-4.8, (-4.8) * 1.0), -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-91.00)), bool(false))), 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(811.507)))) - 0.0), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))) - 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))))))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, _GLF_IDENTITY(-51.45, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(sqrt(1.0)), 1.0, exp(0.0))), mix(float(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(3.2))), 1.0, 1.0, log(sqrt(1.0)), 1.0, exp(0.0)))), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8059.0836) : 0.0)), abs(1.0)))))))))))) / 1.0), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.5))), 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))))))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)) / 1.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(_GLF_IDENTITY(float(clamp(0.0, 0.0, 0.0)), (float(clamp(0.0, 0.0, 0.0))) - tan(0.0)), float(_GLF_FUZZED(-49.99)), bool(false)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), float(mat3(abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(mat2x3(_GLF_IDENTITY(-36.00, max(_GLF_IDENTITY(-36.00, max(-36.00, -36.00)), -36.00)), 8.4, -51.45, _GLF_IDENTITY(-4.5, float(mat3(-4.5, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)))))))))))))))))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.0)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(7.6)), float(float(vec3(0.0, 0.0, 1.0))), bool(true))))), bool(true))), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, _GLF_IDENTITY(-4.8, (false ? _GLF_FUZZED(1.2) : -4.8)), -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0) * (0.0)))))), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))), 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, _GLF_IDENTITY(_GLF_IDENTITY(-4.5, clamp(-4.5, -4.5, -4.5)), min(-4.5, -4.5)), -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-91.00)), bool(false))), mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-91.00)), bool(false)))), float(_GLF_FUZZED(43.46)), bool(false))), 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0))))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1178.9311)), bool(false))), 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))) - 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))))))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, _GLF_IDENTITY(-51.45, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 1.0, log(sqrt(1.0)), 1.0, exp(0.0))), _GLF_IDENTITY(mix(float(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(sqrt(1.0)), 1.0, exp(0.0)))), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(sqrt(1.0)), 1.0, exp(0.0)))), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(float(mat4x3(_GLF_IDENTITY(-51.45, max(-51.45, -51.45)), abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(sqrt(1.0)), 1.0, exp(0.0)))), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8059.0836) : 0.0)), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))))) / 1.0), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-3.4 * -3146.8796))), bool(false)))) * 1.0), 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(_GLF_IDENTITY(-36.00, (false ? _GLF_FUZZED(vec4(-740.589, -64.27, -7773.5608, -56.35).r) : -36.00)), 8.4, -51.45, _GLF_IDENTITY(-4.5, float(mat2(-4.5, 0.0, 1.0, 0.0))), -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, abs(1.0))))))))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.2) : 0.0)), (0.0) + sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(-36.00, 8.4, -51.45, -4.5, -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 1.0, 0.0, abs(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(clamp(0.0, 0.0, 0.0)), float(_GLF_FUZZED(-49.99)), bool(false)))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), float(_GLF_FUZZED(-49.99)), bool(false))))) * 1.0), 0.0, 0.0, 1.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x3(_GLF_IDENTITY(-36.00, max(_GLF_IDENTITY(-36.00, max(-36.00, _GLF_IDENTITY(-36.00, (-36.00) - 0.0))), -36.00)), 8.4, -51.45, _GLF_IDENTITY(-4.5, float(mat3(-4.5, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), -4.8, -8.4)) : mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, abs(1.0)))))))))))))))))).x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(289.459, 6066.3055)) : injectionSwitch))) - vec2(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0), 1.0, 1.0, 1.0, 0.0))).y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(abs(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(0.0), abs(1.0), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), (true ? dot(vec3(_GLF_IDENTITY(abs(0.0), min(abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))))), abs(1.0), 0.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(degrees(4388.9968)))), 1.0, 0.0)) : _GLF_FUZZED(8.7)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))), (! (! (false))) || false)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(470.994) : injectionSwitch.x)), sqrt(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY(0, 1 * (0))) >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(37673) : _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0)), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY(0, 1 * (0))) >> _GLF_IDENTITY(int(2), int(2))))), min((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY(0, 1 * (0))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY(0, 1 * (0))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))))) >> _GLF_IDENTITY(int(2), int(2))) - (1 ^ 1))))), 0)))], gl_WorkGroupSize[2]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 ^ (1), (true ? 0 ^ (1) : _GLF_FUZZED(-65661)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(86214)))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 0), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 ^ (1), (true ? 0 ^ (1) : _GLF_FUZZED(-65661)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(86214)))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 0)), ivec3(0, 0, 0) | (ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 ^ (1), (true ? 0 ^ (1) : _GLF_FUZZED(-65661)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(86214)))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 0))))))))], gl_WorkGroupSize[2]))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x, gl_WorkGroupID.x)) | 0u), 0u | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x, gl_WorkGroupID.x)) | 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), uint(_GLF_IDENTITY(uvec2((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), ((subgroup_size)) / 1u)), 1u), (uvec2((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), 1u)) | uvec2(0u, 0u)))), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY(clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size), (subgroup_size)))), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), clamp(clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), (true ? _GLF_IDENTITY(clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), clamp(clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size))))) : _GLF_FUZZED(workgroup_size))), (clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))) | (clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))))))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << 0u), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 1u, 1u)))))), ~ (~ (subgroup_size)))), ~ (~ (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))))))) | 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ (0u & 6670u)), (false ? _GLF_FUZZED(clamp(147229u, workgroup_base, workgroup_base)) : _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ (0u & 6670u))))), ~ (~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), subgroup_size, subgroup_size))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 133338u) | ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), subgroup_size, subgroup_size))))))))), ~ (~ (subgroup_size)))), _GLF_IDENTITY(~ (~ (subgroup_size)), 0u + (~ (_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (subgroup_size)))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), max((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))))), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (1u ^ 1u) ^ (~ (~ (subgroup_size))))))), ~ (~ (subgroup_size)))))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), ~ (~ (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (~ (subgroup_size))))), (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), max(~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), uint(uvec3(~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 1u, 0u)))))), ~ (~ (subgroup_size))))) : _GLF_FUZZED(134784u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_size))), (~ (~ (~ (subgroup_size)))) - _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) | ((1u ^ 1u)))))), ~ (~ (subgroup_size)))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)), _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))), ~ (~ (subgroup_size)))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))))))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, true)), false, true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(bvec3(false, false, true)), false, true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bvec4(bool(bvec3(false, false, true)), false, true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))), (bool(bool(bool(bvec4(bool(bvec3(false, false, true)), false, true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))))) || false), false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true)))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(33.16) : injectionSwitch[1])))).y), true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(33.16) : injectionSwitch[1])))).y), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(33.16) : injectionSwitch[1])))).y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(33.16) : injectionSwitch[1])))).y), true, false)))))))), true, true)))) && true))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED((-1.3 / 70.83))), bool(false))) > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true)))) || false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-784.514)), bool(false))) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u))))))) >> 0u)))))), (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(57289u, 48991u, 42770u, 150707u)) : uvec4(uint(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), 1u, 1u, 1u))))))) >> 0u))))))) >> 0u)], _GLF_IDENTITY(uint(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_id))) : uint(1))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(38.56)), bool(false))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(38.56)), bool(false))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
