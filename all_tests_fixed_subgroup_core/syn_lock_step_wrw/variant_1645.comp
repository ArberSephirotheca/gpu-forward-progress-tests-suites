#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false))))
      {
       return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 ^ 0) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / (0 ^ 1)) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (gl_WorkGroupSize.x))) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), 1u))), (gl_WorkGroupSize.x)))))) - 0u)))) - 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(156131u, 111511u, 21054u)))), ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(115944u))))), (true ? (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))) : _GLF_FUZZED(min(num_workgroup, uvec2(31102u, 1483u)[1]))))))), (1u | 0u) * (max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (gl_WorkGroupSize.x))) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(198583u) : gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), 1u))), (gl_WorkGroupSize.x)))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), 1u))), (gl_WorkGroupSize.x)))))) - 0u)))))) - 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(2.3, 846.719, 276.879, 614.317))))) / vec2(1.0, 1.0))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(156131u, 111511u, 21054u)))), ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(115944u))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(156131u, 111511u, 21054u)))), ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(115944u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(156131u, 111511u, 21054u)))), ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(115944u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(156131u, 111511u, 21054u)))), ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(115944u)))))) ^ 0u))), (true ? (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))) : _GLF_FUZZED(min(num_workgroup, uvec2(31102u, 1483u)[1]))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)), ((gl_WorkGroupSize.x)) - 0u)))) - 0u : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(5.7), min(_GLF_IDENTITY(_GLF_FUZZED(5.7), (true ? _GLF_FUZZED(5.7) : _GLF_FUZZED(749.049))), _GLF_FUZZED(5.7))) : injectionSwitch.x)))), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(5.7), min(_GLF_IDENTITY(_GLF_FUZZED(5.7), (true ? _GLF_FUZZED(5.7) : _GLF_FUZZED(749.049))), _GLF_FUZZED(5.7))) : injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(5.7), min(_GLF_IDENTITY(_GLF_FUZZED(5.7), (true ? _GLF_FUZZED(5.7) : _GLF_FUZZED(749.049))), _GLF_FUZZED(5.7))) : injectionSwitch.x)))))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(0u, 0u, 0u))))).x) | (gl_WorkGroupSize.x)))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))))))))))), clamp(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))))))))))), (max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))))))))))) | 0u), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))))))))))), ~ (~ (max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))))))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))))))))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ (gl_WorkGroupSize.x)))))), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(1u * (gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY(1u * (gl_WorkGroupSize.x), min(1u * (gl_WorkGroupSize.x), 1u * (gl_WorkGroupSize.x)))))))) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(29430u, 104478u)[0]) : _GLF_IDENTITY(0u, (0u) | (0u)))), 1u)))) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) >> 0u))))))), (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x))))), min(_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x))))), (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))) / 1u), ~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x))))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - _GLF_IDENTITY(0u, (0u) / 1u)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u), ((gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u)) / 1u), (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) << 0u) - 0u)))) - 0u))), 0u | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x))) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) << 0u) - 0u)))), ((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) << 0u) - 0u))))) >> 0u) - 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), clamp((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))))))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))).x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u), (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)))) - 0u)) * (1u | 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uint((gl_WorkGroupSize.x)))), _GLF_IDENTITY(((gl_WorkGroupSize.x)) - 0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_WorkGroupSize.x)) - 0u, max(((gl_WorkGroupSize.x)) - 0u, ((gl_WorkGroupSize.x)) - 0u)) : _GLF_FUZZED(subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_WorkGroupSize.x)) - 0u, max(((gl_WorkGroupSize.x)) - 0u, ((gl_WorkGroupSize.x)) - 0u)) : _GLF_FUZZED(subgroup_id)) - (80144u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))).x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), 0u + ((gl_WorkGroupSize.x)))) - 0u)))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uint((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x)))), ((gl_WorkGroupSize.x)) - 0u)))) - _GLF_IDENTITY(0u, max(0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (~ (~ (gl_WorkGroupSize))))) / uvec3(1u, 1u, 1u))).x) | (gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(max((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uint((gl_WorkGroupSize.x)))), ((gl_WorkGroupSize.x)) - 0u)), 0u | (max((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uint((gl_WorkGroupSize.x)))), (_GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), (gl_WorkGroupSize.x)))) - 0u)))))) - 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(38844u) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(137152u)))))), (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(38844u) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(137152u))))))) >> 0u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) | (gl_WorkGroupSize.x)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)) - _GLF_IDENTITY(0u, 0u ^ (0u)))), clamp(max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)) - _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)) - _GLF_IDENTITY(0u, 0u ^ (0u)))), (max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)) - _GLF_IDENTITY(0u, 0u ^ (0u))))) - (0u | 0u)), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)) - _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))))))).x) | (gl_WorkGroupSize.x)))))))))) ^ 0u))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_injected_loop_counter, 0, 1, 0)), max(int(ivec4(_injected_loop_counter, 0, 1, 0)), int(ivec4(_injected_loop_counter, 0, 1, 0))))) != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) - 0u))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8208.6780)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 ^ 1), min((0 ^ 1), (0 ^ 1)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), int(ivec2(0 | (64), 0)))))), 0);
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid)))) << 0u) / 1u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1), clamp(uint(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1), uint(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1), uint(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1))), 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
  }
 else
  {
  }
}
