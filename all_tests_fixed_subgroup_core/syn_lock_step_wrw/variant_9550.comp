#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-205.735), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), min(_GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), mix(float(_GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), clamp(max((injectionSwitch)[0], (injectionSwitch)[0]), max((injectionSwitch)[0], (injectionSwitch)[0]), max((injectionSwitch)[0], (injectionSwitch)[0])))), float(_GLF_FUZZED(-975.347)), bool(false))), max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED((true ? 1.2 : -1.6))), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), clamp(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-1.3) : float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), float(mat2x3(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, tan(0.0)))), clamp(float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), float(vec4(false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), 0.0, 0.0, 1.0)))[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.90) : 1.0)), 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.7, 6.0)) : injectionSwitch)))))), 0.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-87.40, 850.530, -2.5, 1879.3853, -5.3, 867.452))))))[1]))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-242.361)), bool(false))))), 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(125.868, -8.4)))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(roundEven(injectionSwitch)))), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-62.43), _GLF_IDENTITY((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1], max((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1], (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1]))), vec2((vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-632.017)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(-8.6)), bvec2(true, false))))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(407.724))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(injectionSwitch))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), 0.0, 0.0, 1.0)))[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-19.90) : 1.0)), 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.7, 6.0)) : injectionSwitch)))))), 0.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-87.40, 850.530, -2.5, 1879.3853, -5.3, 867.452))))))[1]))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-242.361)), bool(false))))), 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(125.868, -8.4)))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(roundEven(injectionSwitch)))), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-62.43), _GLF_IDENTITY((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1], max((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1], (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[1]))), vec2((vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-632.017)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(-8.6)), bvec2(true, false))))), 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)), (mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(407.724))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), log(1.0), 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(injectionSwitch))))).x), float(_GLF_FUZZED(-85.10)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, false, true)), true, false)), true && (bool(bvec3(bool(bvec4(false, true, false, true)), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y)))), false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(true && ((! (false))), bool(bvec2(true && ((! (false))), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0)), mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0)), mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, cos(0.0)), mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupID.x), max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, 1 * (2))))])).x), (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(_GLF_IDENTITY(mat4x3(max(1.0, 1.0), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) * mat2(1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))), 1.0, 1.0, 0.0), (mat4x2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(216.550)) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2748.3018)), bool(false))))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.7)), float(0.0), bool(true))))))))), 0.0, 0.0))), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(max(1.0, 1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((mat4(vec2(0.0, 0.0), 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), clamp(float(vec4(1.0, 1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose((mat4(vec2(0.0, 0.0), 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (transpose((mat4(vec2(0.0, 0.0), 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, 1.0, sin(sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), 0.0 + (float(float(0.0))))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5683.8815)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 2121.6487 : -6.5))), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.5) : 0.0)), 0.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(0.5)))) - 0.0), min(injectionSwitch.x, injectionSwitch.x)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(440.435)), bool(false))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), (bool(bvec4(! (false), false, true, true))) || false))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false)))) && true)) && true)) || false), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)))), false, _GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))), false, false))), bool(bool(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), false, false))), bool(bool(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), false, false))), bool(_GLF_IDENTITY(bool(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))), bool(bvec3(bool(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))), true, false))))))))))))), ! _GLF_IDENTITY((! ((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(bool(((false))))), (! ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false))))), false || ((! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))), false))))), false, false)))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(38014u, 23150u)), (_GLF_FUZZED(uvec2(38014u, 23150u))) >> uvec2(0u, 0u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u))))))) + 1) ^ 0u)) % subgroup_size))), ~ (~ (uint(uint(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(bitfieldReverse(num_workgroup)) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), min(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) | ((subgroup_local_id) | (subgroup_local_id)))), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (false ? _GLF_FUZZED(uvec2(38014u, 23150u)) : uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u))))))) + 1) ^ 0u)) % subgroup_size))), ~ (~ (uint(uint(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldReverse(num_workgroup)) : _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(65922) : 1))))) % subgroup_size))))) | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (bool(false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (bool(false))))), ! (! (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ (~ (64))), 64)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0)), max(int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0)), clamp(int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0), (ivec2(_GLF_IDENTITY(64, max(64, 64)), 0)) ^ ivec2(0, 0))), int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, (64) / 1)), (int(_GLF_IDENTITY(64, (64) / 1))) | (int(_GLF_IDENTITY(64, (64) / 1)))))))) | ((64))), 0 | (_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, (64) / 1)), (int(_GLF_IDENTITY(64, (64) / 1))) | (int(_GLF_IDENTITY(64, (64) / 1)))))))) | ((64))))) | (64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) || false))), true, true, true)), true && (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))))))))))), true, true, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat4x2(mat4x3(mat4x2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0)))), clamp(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y))))))))))) || false), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-995.760)))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y))))))))))) || false), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-66.54)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)) : _GLF_FUZZED(-995.760)))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y))))))))))) || false), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-995.760)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y))))))))))) || false), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-995.760))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))) && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ! (! ((false)))) || false) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 1)), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (int(ivec4(1, 1, 1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0)))) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))))), 1, 1))), 1))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), 0 ^ ((~ (4))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true))))), bool(bool(! (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-6084.4375 * -7.8)) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (false) || false))))))))) || false))
    barrier();
   barrier();
  }
}
