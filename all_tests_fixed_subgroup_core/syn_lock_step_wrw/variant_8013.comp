#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, 1.0, 0.0)) * mat2(1.0), ((mat2(injectionSwitch.x, 0.0, 1.0, 0.0)) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || false, false))), true, true, true))), false, false, true))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), (! (false)) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || false, false))), true, true, true))), false, false, true))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), (! (false)) || false)))))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))), false))), true, true, true))), false, false, true))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), true && ((false)))) || false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (false)) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || false, false))), true, true, true))), false, false, true)))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || false, false))), true, true, true))), false, false, true)))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(7.1)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), (! (false)) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), _GLF_IDENTITY((bool((_GLF_IDENTITY((false), true && ((false)))) || false)), bool(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY((false), true && ((false)))) || false)), true), bvec2(bvec3(bvec2((bool((_GLF_IDENTITY((false), true && ((false)))) || false)), true), false))))) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || false, false))), true, true, true))), false, false, true))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true))))) || false), (bool((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), _GLF_IDENTITY(bool(bvec3(true && ((false)), true, true)), bool(bvec3(bool(bvec3(true && ((false)), true, true)), false, false)))))) || false)) && true))))))), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false)))))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))))), _GLF_IDENTITY((! (false)) || false, bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(bvec2((! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))), ! (! (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))))), false))), true, true, true))), false, false, true))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY((false), true && ((false)))) || false)) && true))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec4(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, false, true))), ((_GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), true && ((false)))) || false), (bool((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), true && ((false)))) || false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (false)) || false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false))))))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && _GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) && true), (_GLF_IDENTITY(((false)), (((false))) && true)) || false))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((_GLF_IDENTITY(false, (false) || false))))))) || false), (! (false)) || false))))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true))), true && ((false)))))) || false), (! (false)) || false), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true))), true && ((false)))))) || false), (! (false)) || false)) && true))))))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) || false)))), true && ((false)))))) || false), (! (false)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), (! (_GLF_IDENTITY((false), true && ((false))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), true && ((false)))))) || false), (! (false)) || false)), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))) && true)))))) && true)), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), true && (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false))), (! (false)) || false))))))))))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false))))), bool(bvec4((false), false, true, true))), false || (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))), true && ((false)))))) || false), (! (false)) || false))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))))))))) && true) && true)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((false), false, true), true)), true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((false), false, true), true)), true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((false), false, true), true)), true)))))))))))), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false))), false, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true) && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))), false, true, false)))), false, true, true))), true && ((false)))))))) || false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(false, false || (false))))))) || false))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false, false, _GLF_IDENTITY(false, (false) || false), false)))), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! (false), true && (! (false))))))))) || false))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), true && ((false))))), bool(bvec3(! ((_GLF_IDENTITY((false), true && ((false))))), true, false)))))) || false), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true && ((false)))))) || false), (! (false)) || false))))))))) && true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(54998) : 0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (25215 & 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))).x) ^ 0u))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0)), (clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0)), (clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), 0.0))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), 0.0))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-192.225)), bvec2(false, false))), injectionSwitch)))))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(5173)) : 1.0))), bool(true))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(614.106))))) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x)) > injectionSwitch.y)))), true, _GLF_IDENTITY(false, bool(bool(false))), false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), 0.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (injectionSwitch), max(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (injectionSwitch), (true ? sqrt(vec2(1.0, 1.0)) * (injectionSwitch) : _GLF_FUZZED(vec2(8.1, 92.86)))), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (injectionSwitch), min(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (injectionSwitch), (sqrt(vec2(1.0, 1.0)) * (injectionSwitch)) / vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))))).x)), 0.0))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x)) > injectionSwitch.y))), false, false, false)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x)) > injectionSwitch.y)))), true, false, false))))))))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec4(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 1u, 1u, (1u & 1u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(212.110, 587.794)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(212.110, 587.794)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec2(212.110, 587.794)), (false ? _GLF_FUZZED(vec2(-13.06, -551.136)) : _GLF_FUZZED(vec2(212.110, 587.794)))), 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_FUZZED(vec2(212.110, 587.794)), (false ? _GLF_FUZZED(vec2(-13.06, -551.136)) : _GLF_FUZZED(vec2(212.110, 587.794)))), 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_FUZZED(vec2(212.110, 587.794)))) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) / 1u) + 1), ~ (~ ((_GLF_IDENTITY(read_1, (read_1) / 1u) + 1)))) | (read_1 + 1)) : _GLF_FUZZED(144750u))), min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(172133u) : _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), 0u | (read_1 + 1))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
