#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 bvec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat3x2 _f3;
 vec4 _f4;
 ivec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat2 _f1;
 vec4 _f2;
 ivec4 _f3;
 mat3x4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bvec3 _f2;
 _GLF_struct_8 _f3;
 uint workgroup_id;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_12 {
 int _f0;
 _GLF_struct_11 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3 _f1;
 bvec3 _f2;
 bvec2 _f3;
 bool _f4;
 mat2x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_1 {
 uint _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 uint subgroup_id;
 uint _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupID, 1u, _GLF_struct_1(1u, _GLF_struct_0(mat2x3(1.0), mat3(1.0), bvec3(true), bvec2(true), true, mat2x3(1.0), mat3x2(1.0))), _GLF_struct_4(_GLF_struct_2(uvec2(1u), true, uvec2(1u)), _GLF_struct_3(mat3x2(1.0), bvec4(true), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))), uvec4(1u), mat3(1.0)), bvec4(true), 1));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (_GLF_DEAD(false)))) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (_GLF_DEAD(false)))) || false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)))))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), vec2(vec4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))) / vec2(1.0, 1.0)), 1.0, 0.0)))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), clamp(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), mix(vec2(_GLF_FUZZED((- -7476.6248)), _GLF_FUZZED(-954.560)), vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)))[1]), bvec2(true, true)))))), injectionSwitch)).y)))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)))))), ! (! (false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), 1.0, 1.0, cos(0.0))))), 1.0, sin(0.0), sqrt(0.0), 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8207.6056) : 0.0)), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (_GLF_IDENTITY(8.7, mix(float(_GLF_IDENTITY(8.7, (8.7) / 1.0)), float(_GLF_FUZZED(1.5)), bool(false)))) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1214.5429)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, max(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)) : _GLF_FUZZED(mat4(-181.477, 963.731, 8.6, -407.949, -9.1, 99.88, 9.7, 7.3, -6686.5498, -915.386, 926.912, 6.6, -824.728, 455.983, -83.82, 4825.1503))))))))).w, vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), mix(float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(9073.3887)), bool(false))))).w)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 0.0))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false, false, false))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_IDENTITY(_GLF_FUZZED(-1.2), (_GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), float(mat3(_GLF_FUZZED(-1.2), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_FUZZED(-1.2)))) / 1.0)), bvec2(false, false)), vec2(vec4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), 1.0, 0.0)))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y))))), bool(bvec3(! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y))))), true, false))))))), ! (! (false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), 1.0, 1.0, cos(0.0))))), 1.0, sin(0.0), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0), determinant(mat4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[_GLF_IDENTITY(0, max(0, 0))], ((vec2(1.0, 0.0))[_GLF_IDENTITY(0, max(0, 0))]) / 1.0), (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(mat4(-354.157, 6270.1205, -944.819, 2.7, -8.6, 60.68, -1639.9123, 2.5, 221.810, -1.8, 4.3, -5.1, 2.0, -6793.6479, 900.678, 5.0)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, _GLF_IDENTITY((8.7), abs(0.0) + ((8.7))) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat4(6.5, -602.867, 3531.9131, 9.3, -9.0, 831.029, 725.678, -83.79, -7.0, -941.624, -1.6, -0.6, 9442.7225, 9.1, 60.84, -587.329)) : transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))).w, max(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(8.7, 1.0 * (8.7)), (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))).w)))), bvec2(false, false))), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), vec2(vec4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))) / vec2(1.0, 1.0)), 1.0, 0.0)))), injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.2), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2)))), float(_GLF_FUZZED(5.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2)))), bvec2(false, false)), vec2(vec4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))) / vec2(1.0, 1.0)), 1.0, 0.0)))), injectionSwitch)).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)))), bvec2(false, false))), injectionSwitch)).y)))), false || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_FUZZED(-1.2)), bvec2(false, false))), injectionSwitch)).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9119.9576), _GLF_IDENTITY(_GLF_FUZZED(-1.2), mix(float(_GLF_FUZZED((+ 2.1))), float(_GLF_FUZZED(-1.2)), bool(true)))), bvec2(false, false))), injectionSwitch)).y)))))), ! (! (false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2315.0639, 21.97)) : injectionSwitch)), injectionSwitch)))).y) + 0.0)) / 1.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), 1.0, 1.0, cos(0.0))))), 1.0, sin(0.0), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, max(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w)))), bvec2(false, false)), (true ? _GLF_IDENTITY(mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, max(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w)))), bvec2(false, false)), mat2(1.0) * (mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, max(vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w, vec4(-4.0, -94.70, 449.741, _GLF_IDENTITY(8.7, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(8.7, float(vec3(_GLF_IDENTITY(8.7, (8.7) / 1.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).w)))), bvec2(false, false)))) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))))))), true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))), _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-993.063), min(_GLF_FUZZED(-993.063), _GLF_FUZZED(-993.063))) : injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true))), _GLF_IDENTITY(false, (false) && true))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), true, true), _GLF_IDENTITY(false, false || (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true))), _GLF_IDENTITY(false, (false) && true))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), true, true), _GLF_IDENTITY(false, false || (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true))), _GLF_IDENTITY(false, (false) && true))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), true, true), _GLF_IDENTITY(false, false || (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), true)))))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false))), false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true)), (bool(bvec3((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true, true))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, true && (true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))), false)))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(2.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.1)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true))))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), 1.0)), (mat3(1.0) * (mat2x3(injectionSwitch.y, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), 1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) && true)) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0]) + 0.0), injectionSwitch[1])).x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), 0.0 + (float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))), float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), false || (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))), bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(1, _GLF_struct_11(_GLF_struct_6(mat4(1.0)), _GLF_struct_7(1.0, mat2(1.0), vec4(1.0), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), ivec4(1))), mat3x4(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))), true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), true)))))))), _GLF_struct_8(bvec2(true), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) << uvec3(0u, 0u, 0u)), mat2x4(1.0), mat3x2(1.0), vec4(1.0), ivec2(1), mat3x2(1.0)), gl_WorkGroupID.x, _GLF_struct_9(uvec3(1u)), _GLF_struct_10(bvec4(true), vec2(1.0))), mat4x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-341.935)), bool(false)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, exp(determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0))).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, log(1.0), sin(sin(0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((4.6 + 4.5))), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12._f1.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), sin(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - tan(vec2(0.0, 0.0)))))), sin(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(float(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - tan(vec2(0.0, 0.0)))), vec2(mat2x3(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - tan(vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0))))), sin(0.0), 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(693.838)), float(float(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - tan(vec2(0.0, 0.0)))))), sin(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y))), bool(true))))))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-7755.3272, 46.47)))) * (injectionSwitch))) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_5.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 1u * (_GLF_IDENTITY(5u, (5u) + 0u)))), uint(5u))), 0u | ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 1u * (_GLF_IDENTITY(5u, (5u) + 0u)))), uint(5u))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, min(1u, 1u)))) * (_GLF_IDENTITY(5u, (5u) + 0u)))), uint(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, (5u) ^ 0u)))))), 0u | ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 1u * (_GLF_IDENTITY(5u, (5u) + 0u)))), uint(5u))))))) ^ (subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(6.4, clamp(6.4, _GLF_IDENTITY(6.4, max(6.4, 6.4)), _GLF_IDENTITY(6.4, min(6.4, 6.4)))), 999.086).tsss, vec4(-450.456, 2.2, 1.0, 6.4))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(6.4, clamp(6.4, _GLF_IDENTITY(6.4, max(6.4, 6.4)), _GLF_IDENTITY(6.4, min(6.4, 6.4)))), 999.086).tsss, vec4(-450.456, 2.2, 1.0, 6.4))))) > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))))), min((false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0 * (_GLF_ONE(1.0, injectionSwitch.y)), min(1.0 * (_GLF_ONE(1.0, injectionSwitch.y)), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-5090.0328)))))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))))), max((false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))), min(mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))))))), (false ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) + 0.0), injectionSwitch.y))))))))))).y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(vec2(4.6, 4.7)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), max(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))).y))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8.7), float(mat2x3(_GLF_FUZZED(8.7), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-807.164)), float(abs(1.0)), bool(true))), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4.6, min(4.6, 4.6)), 4.7)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(4854.7443)) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8.7), float(mat2x3(_GLF_FUZZED(8.7), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-807.164)), float(abs(1.0)), bool(true))), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4.6, min(4.6, 4.6)), 4.7)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(4854.7443)) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y)) || false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-86.85)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(84.06, -5.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(84.06, -5.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2517.6781)), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, 1.0, abs(1.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false)), (bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false))) && true)))))) || false, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false))))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false))))))) || false, true)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false))))))) || false, true)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false, false))))))) || false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (false ? _GLF_FUZZED(-4614.2620) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (false ? _GLF_FUZZED(-4614.2620) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (false ? _GLF_FUZZED(-4614.2620) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))) && true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (! (true && (false)))))))))), false || (bool(! (_GLF_IDENTITY(false, true && (false))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), read_1, read_1)) + 1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) << 0), _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-59818)))) / 1, _GLF_IDENTITY((((4)) / 1) | (((4)) / 1), ((((4)) / 1) | (((4)) / 1)) * 1))))) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-15136) : 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-89342) : 0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-89342) : 0, max(false ? _GLF_FUZZED(-89342) : 0, false ? _GLF_FUZZED(-89342) : 0))) >> 0))) ^ (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(~ (4), (~ (4)) | 0)) | (_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), ((4)) ^ 0)) | 0)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((4))), (4))), _GLF_IDENTITY((~ (4)) | 0, clamp((~ (4)) | 0, _GLF_IDENTITY((~ (4)) | 0, min((~ (4)) | 0, (~ (4)) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) / 1) | 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * ((~ (4)) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (~ (4)) | 0)) | (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), ((_GLF_IDENTITY(~ (4), (~ (4)) | 0)) | (_GLF_IDENTITY(~ (4), (~ (4)) | 0))) | ((_GLF_IDENTITY(~ (4), (~ (4)) | 0)) | (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))))) ^ 0)))), (4) | 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-66438) : int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(((_GLF_IDENTITY(int(4), int(4)))), ~ (~ (((_GLF_IDENTITY(int(4), int(4))))))) ^ _GLF_IDENTITY(0, min(0, 0))) + 0)), 1 * (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-66438) : int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(((_GLF_IDENTITY(int(4), int(4)))), ~ (~ (((_GLF_IDENTITY(int(4), int(4))))))) ^ _GLF_IDENTITY(0, min(0, 0))) + 0))))))));
 if(_GLF_DEAD(false))
  barrier();
}
