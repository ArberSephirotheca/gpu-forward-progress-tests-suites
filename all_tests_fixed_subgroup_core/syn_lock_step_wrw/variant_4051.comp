#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint _f0;
 mat2x3 _f1;
 uint _f2;
 mat4x2 _f3;
 uint workgroup_size;
} ;

struct _GLF_struct_3 {
 float _f0;
 float _f1;
 bvec3 _f2;
 uvec4 _f3;
 uvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 bool _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat2 _f1;
 bvec2 _f2;
 float _f3;
 uint _f4;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 ivec3 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2x3(1.0), _GLF_struct_5(mat3x2(1.0), _GLF_struct_0(uvec3(1u), mat2(1.0), bvec2(true), 1.0, 1u), _GLF_struct_1(mat4x2(1.0), true), _GLF_struct_2(uvec3(1u), 1), ivec3(1), _GLF_struct_3(1.0, 1.0, bvec3(true), uvec4(1u), uvec4(1u), vec2(1.0)), _GLF_struct_4(1u, mat2x3(1.0), 1u, mat4x2(1.0), gl_WorkGroupSize.x)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_6._f1._f6.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}
