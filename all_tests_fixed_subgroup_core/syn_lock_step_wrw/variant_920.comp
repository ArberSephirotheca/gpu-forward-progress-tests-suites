#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(unpackSnorm4x8(50973u))))))), true, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(unpackSnorm4x8(50973u))))))), true, false)))), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), true && (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), true && (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-74.06))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-96.48) : injectionSwitch.y))))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0)))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), false)), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) ^ (_GLF_IDENTITY(1u, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, max(1u, 1u)))) ^ 1u)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), true))), false))))))))), ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.6, 2.7)) : injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) || false), true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-426.736), _GLF_IDENTITY(_GLF_FUZZED(2.4), mix(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(-9.3)), bool(false)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-432.214)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(8.0)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true)), false, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(65218, (65218) ^ 0), clamp(65218, 65218, _GLF_IDENTITY(65218, (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-80835) : 65218))))))))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))))))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2366.4013) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(272.262, -4.5)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false, false))), false)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false), false, false, false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[_GLF_IDENTITY(1, 0 ^ (1))])))).y))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))) && true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4222.8763) : _GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, -888.614)))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.31)), (vec2((injectionSwitch)[0], _GLF_FUZZED(36.31))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-8.6), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), float(mat2(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), 1.0, 1.0, 0.0)))) * 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0))]), bvec2(false, true)), (mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))), 1.0)), 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0), (_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0), clamp(_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0))), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> 0))))]), bvec2(false, true))) + vec2(0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), mix(vec2((((injectionSwitch)) * mat2(1.0))[0], (((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-17.78), _GLF_FUZZED((85.25))), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (1) | 0)]), bvec2(false, true)))))).x)) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))), mix(vec2(_GLF_FUZZED(825.060), _GLF_FUZZED(-30.85)), vec2((vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[0], (vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[1]), bvec2(true, true))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(53.23)), float(0.0), bool(true)))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) - vec2(0.0, 0.0))))), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-1092.8137, -180.040, 3600.6725, -779.739)) : mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, float(vec3(-334.631, 1.0, 0.0)))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), (vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), float(_GLF_FUZZED(-27.53)), bool(false)))) > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), _GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), transpose(transpose(_GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), (false ? _GLF_FUZZED(mat2(93.59, 20.91, 1.8, -4.0)) : (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41)))))))))), float(mat4(float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED((- 7293.1502))), vec2(_GLF_FUZZED(-8.0), ((injectionSwitch))[1]), bvec2(false, true))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, _GLF_IDENTITY(6.6, mix(float(_GLF_FUZZED(-1.4)), float(6.6), bool(true))), -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), clamp(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)))), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(_GLF_IDENTITY(6.7, max(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-4.0)), float(6.7), bool(true))))), 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))), mix(vec2(_GLF_FUZZED(825.060), _GLF_FUZZED(-30.85)), vec2((vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[0], (vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[1]), bvec2(true, true))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(53.23)), float(0.0), bool(true)))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) - vec2(0.0, 0.0))))), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-1092.8137, -180.040, 3600.6725, -779.739)) : mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, float(vec3(-334.631, 1.0, 0.0)))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), (vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), float(_GLF_FUZZED(-27.53)), bool(false)))) > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), _GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), transpose(transpose(_GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), (false ? _GLF_FUZZED(mat2(93.59, 20.91, 1.8, -4.0)) : (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41)))))))))), float(mat4(float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED((- 7293.1502))), vec2(_GLF_FUZZED(-8.0), ((injectionSwitch))[1]), bvec2(false, true))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, _GLF_IDENTITY(6.6, mix(float(_GLF_FUZZED(-1.4)), float(6.6), bool(true))), -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), clamp(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)))), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(_GLF_IDENTITY(6.7, max(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-4.0)), float(6.7), bool(true))))), 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))), mix(vec2(_GLF_FUZZED(825.060), _GLF_FUZZED(-30.85)), vec2((vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[0], (vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch)))))))[1]), bvec2(true, true))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, 6.6, -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * vec2(1.0, 1.0)))) : (injectionSwitch))))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(53.23)), float(0.0), bool(true)))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) - vec2(0.0, 0.0))))), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55))))) - abs(vec2(0.0, 0.0))))), (injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5001.8837, 666.926)) : (injectionSwitch)))) * mat2(1.0)) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-1092.8137, -180.040, 3600.6725, -779.739)) : mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, float(vec3(-334.631, 1.0, 0.0)))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-9.2, clamp(-9.2, _GLF_IDENTITY(-9.2, clamp(-9.2, _GLF_IDENTITY(-9.2, (-9.2) - 0.0), -9.2)), -9.2)))), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(-334.631), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2)), (vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-9.2))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), float(_GLF_FUZZED(-27.53)), bool(false)))) > injectionSwitch.y)), true))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), _GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), transpose(transpose(_GLF_IDENTITY((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))), (false ? _GLF_FUZZED(mat2(93.59, 20.91, 1.8, -4.0)) : (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41)))))))))), float(mat4(float(_GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / round(length(normalize(1.0)))), injectionSwitch.y), 0.0, 0.0, 0.0), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(9.4, 33.88, 6.2, -84.41))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED((- 7293.1502))), vec2(_GLF_FUZZED(-8.0), ((injectionSwitch))[1]), bvec2(false, true))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) * ((injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(_GLF_IDENTITY(-888.614, max(-888.614, _GLF_IDENTITY(-888.614, (_GLF_IDENTITY(-888.614, float(mat4x3(-888.614, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), vec2(_GLF_FUZZED(-334.631), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.4, _GLF_IDENTITY(6.6, mix(float(_GLF_FUZZED(-1.4)), float(6.6), bool(true))), -3238.0656, -7.5)) : mat2(1.0)))))))[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(false, true)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(6.7, 32.55)), clamp(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(6.7, 32.55)))), min(_GLF_FUZZED(vec2(6.7, 32.55)), _GLF_FUZZED(vec2(_GLF_IDENTITY(6.7, max(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-4.0)), float(6.7), bool(true))))), 32.55))))) - abs(vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-888.614)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-334.631, mix(float(_GLF_FUZZED(5.7)), float(-334.631), bool(true)))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y)))))) || false))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(true, false || (true)), true)))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (~ (0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), true), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), false))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1403.7276, 870.218)))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), min(uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u)))))) ^ 0u) | (next_virtual_gid)), next_virtual_gid))))], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(findMSB(ivec3(-45931, 89149, 14346)).y))))) - 0, 0 | ((_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), clamp((4), (4), (4)))))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(findMSB(ivec3(-45931, 89149, 14346)).y))))) - 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-33493) : (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(findMSB(ivec3(-45931, 89149, 14346)).y))))) - 0)), 0 | ((_GLF_IDENTITY(4, ~ (~ (4)))) - 0)), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), _GLF_IDENTITY((~ (4)), ((~ (4))) - 0), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(_GLF_IDENTITY(findMSB(ivec3(-45931, 89149, 14346)).y, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(findMSB(ivec3(-45931, 89149, 14346)).y, clamp(findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y)), 1, 1, 1)), max(int(ivec4(_GLF_IDENTITY(findMSB(ivec3(-45931, 89149, 14346)).y, clamp(findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y)), 1, 1, 1)), int(ivec4(_GLF_IDENTITY(findMSB(ivec3(-45931, 89149, 14346)).y, clamp(findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y, findMSB(ivec3(-45931, 89149, 14346)).y)), 1, 1, 1)))))))))) - 0, 0 | ((_GLF_IDENTITY(4, ~ (~ (4)))) - 0))))) | 0)));
 if(_GLF_DEAD(false))
  barrier();
}
