#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true)) || false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.4, 1898.8634)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))), injectionSwitch[1])))).y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, true && (true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))) || false) || (bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0) < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0) < injectionSwitch.y))))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0) < injectionSwitch.y))))))), true, true)), false, true))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))), false, true)))) || false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED((_GLF_IDENTITY(80774, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(80774, (false ? _GLF_FUZZED(_injected_loop_counter) : 80774)) : _GLF_FUZZED(atomicAdd(_injected_loop_counter, 45677)))) / -70195)) : 2))))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37004)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(4), int(4))), int(ivec3(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(4), int(4))), max((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(4), int(4))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ (1 ^ 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-3545.4523))), injectionSwitch.y, injectionSwitch.y)))) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y : _GLF_FUZZED(-3545.4523))), injectionSwitch.y, injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y : _GLF_FUZZED(-3545.4523))), injectionSwitch.y, injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, ! (! (true))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.037)), bool(false))), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.037)), bool(false))), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.037)), bool(false))), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.037)), bool(false))), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.037)), bool(false))), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (81993 & _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), clamp((0 >> _GLF_IDENTITY(int(6), int(6))), (0 >> _GLF_IDENTITY(int(6), int(6))), (0 >> _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) || false)) || false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) || false)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) || false)) || false, ((_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true)))))))))))) || false)) || false) && true))))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))) || false)))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-7.3) : 0.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-7.3) : 0.0), min((false ? _GLF_FUZZED(-7.3) : 0.0), (false ? _GLF_FUZZED(-7.3) : 0.0))), (false ? _GLF_FUZZED(-7.3) : 0.0))))))))) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x : _GLF_FUZZED(radians(0.1))))))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(radians(0.1)))))))) * (1u & 1u))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size) + 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-841.455))), injectionSwitch.x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-841.455))), injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-841.455))), injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * (float(mat2x4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-841.455))), injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-841.455), float(vec3(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-841.455), float(vec2(true ? injectionSwitch.x : _GLF_FUZZED(-841.455), abs(1.0)))), 0.0, 0.0))))), injectionSwitch.x)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (workgroup_base))) * 1u) + subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) + ivec3(0, 0, 0))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.39) : injectionSwitch.y))))));
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           do
            {
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), (true ? 1 : _GLF_FUZZED(2704)) | (true ? _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(1, int(int(1))))) : _GLF_FUZZED(2704))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)) : _GLF_FUZZED(-9191)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)))), (true ? 1 : _GLF_FUZZED(2704))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), int(6)))), max(1, 1)), (true ? _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(2704)))))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), 0 ^ (true ? 1 : _GLF_FUZZED(2704)))))) / 1, (0 ^ 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), 0 ^ (true ? 1 : _GLF_FUZZED(2704)))))) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, true && (true))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) || false)) ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) | 0) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), ((true ? 1 : _GLF_FUZZED(2704))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), int(ivec3((true ? 1 : _GLF_FUZZED(2704)), 1, 0))), (true ? 1 : _GLF_FUZZED(2704)))))))) / 1))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846)))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846))))) << 0) : _GLF_FUZZED(-95749)))))))) + 0))) - 0) : _GLF_FUZZED(79485), 0 ^ (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), (true ? 1 : _GLF_FUZZED(2704)) | (true ? _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(1, int(int(1))))) : _GLF_FUZZED(2704))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)) : _GLF_FUZZED(-9191)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), int(6)))), max(1, 1)))), (true ? 1 : _GLF_FUZZED(2704))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), int(6)))), max(1, 1)), (true ? _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(2704)))))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), 0 ^ (true ? 1 : _GLF_FUZZED(2704)))))) / 1, (0 ^ 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), 0 ^ (true ? 1 : _GLF_FUZZED(2704)))))) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, true && (true))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) || false)) ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) | 0) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), ((true ? 1 : _GLF_FUZZED(2704))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(2704)), int(ivec3((true ? 1 : _GLF_FUZZED(2704)), 1, 0))), (true ? 1 : _GLF_FUZZED(2704)))))))) / 1))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846)))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), max(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))) - 0), max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (_GLF_IDENTITY(2704, (true ? 2704 : _GLF_FUZZED(58489)))) << 0)) << 0))))) / 1, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), int(ivec3(int((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))), 1, 1))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704))))) ^ 0) / 1))), 0 ^ (max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), 1)), max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(2704), 0 | (_GLF_FUZZED(2704)))))) / 1))))))) : _GLF_FUZZED((_GLF_IDENTITY(- 28846, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (- 28846))))) << 0) : _GLF_FUZZED(-95749)))))))) + 0))) - 0) : _GLF_FUZZED(79485))), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) * 1), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0))))), (false ? _GLF_FUZZED(ivec3(12755, -19125, -81646)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)))))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)))))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 0))))))) / 1)))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), (true ? 1 : _GLF_FUZZED(2704)) ^ 0)) | (true ? 1 : _GLF_FUZZED(2704)), ((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(2704), (true ? 1 : _GLF_FUZZED(2704)) ^ 0)) | (true ? 1 : _GLF_FUZZED(2704))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(8414))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1), (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1)) | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + 0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(8414))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1), (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1)) | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(8414))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1), (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1)) | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(8414))))), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1), (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1)) | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? 1 : _GLF_FUZZED(2704)))) / 1))))) : _GLF_FUZZED((- 28846)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + 0))))) - 0) : _GLF_FUZZED(79485)) | 0)))), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(48154) : int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.93), _GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))) == bvec2(true, true)), bool(bvec2((_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))) == bvec2(true, true)), true))) ? -3.2 : 3.4))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), log(vec2(1.0, 1.0)) + (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), log(vec2(1.0, 1.0)) + (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), log(vec2(1.0, 1.0)) + (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))));
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> (0 | 0)))) | (0 ^ 0)) | (0 << _GLF_IDENTITY(int(0), int(0)))), min(((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> (0 | 0)))) | (0 ^ 0)) | (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> (0 | 0)))) | (0 ^ 0)) | (0 << _GLF_IDENTITY(int(0), int(0)))), (((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> (0 | 0)))) | (0 ^ 0)) | (0 << _GLF_IDENTITY(int(0), int(0))))) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))));
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / (1 & 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) / 1))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(int(0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (1 ^ 0)), clamp(ivec4(int(0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (1 ^ 0)), ivec4(int(0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (1 ^ 0)), ivec4(int(0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (1 ^ 0)))))), (int(0)) + 0)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), true, true))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(int(4), (int(4)) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | 0)))) >> _GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(int(4), (int(4)) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | 0)))) >> _GLF_IDENTITY(int(4), int(4)), 1 * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(int(4), (int(4)) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | 0)))) >> _GLF_IDENTITY(int(4), int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0) : _GLF_FUZZED((_injected_loop_counter / _injected_loop_counter)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = (0 & -30920); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, exp(0.0), 1.0, length(0.0), 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))) && true))) || false))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), ! (! (_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), false || (_injected_loop_counter != (1 ^ 0))))))); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true))))))), true, false, true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, false || (true)))))), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)) && true))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((false)) && true)))), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true))))))), true, false, true))))))))) && true) || false)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, round(length(normalize(1.0))))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0)), round(length(normalize(1.0)))))))))) || false));
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x)))))) < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, int(int(6)))))))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))) && true)))))
                          {
                           for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), _GLF_IDENTITY(int(2), (int(2)) << 0))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
              }
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))));
      }
    }
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(1, 1), 0 ^ (min(1, 1))) : _GLF_FUZZED(39463)))), 1, _GLF_IDENTITY(1, (1) >> 0))))))) | (int(ivec4(64, 1, 1, 1))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), _GLF_IDENTITY(int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))), (int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1))))) | (int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))))) | (int(ivec4(64, 1, 1, 1))), (_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(90814))), _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(64, 1, 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(64, 1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec4(64, 1, 1, 1)), min(~ (ivec4(64, 1, 1, 1)), ~ (ivec4(64, 1, 1, 1))))))))))), (false ? _GLF_FUZZED(-97658) : (int(_GLF_IDENTITY(ivec4(64, 1, 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(64, 1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec4(64, 1, 1, 1)), min(~ (ivec4(64, 1, 1, 1)), ~ (ivec4(64, 1, 1, 1))))))))))))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-32415) : 1)))))))))) | (int(ivec4(64, 1, 1, 1))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY(1, int(int(1))), 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1)))))))))), int(int(~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), min((_GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1))), (_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(61433) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1)), int(int(int(ivec4(64, _GLF_IDENTITY(1, min(1, 1)), 1, 1)))))) | (int(ivec4(64, 1, 1, 1)))))))))))))))))), 4);
}
