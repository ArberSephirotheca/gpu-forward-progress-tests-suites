#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -943.203)))).x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))) && true)))) || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1335.7824))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1335.7824))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((injectionSwitch.x > injectionSwitch.y)))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (vec2(vec4(injectionSwitch, 1.0, 1.0))) * mat2(1.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false))), false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(2.3, -943.203), (vec2(2.3, -943.203)) * vec2(1.0, 1.0))))).x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false)))))) && true)))) || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-1335.7824))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))[_GLF_IDENTITY(0, 0 | (0))], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), vec4(_GLF_IDENTITY(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 1.0, cos(0.0), 0.0, 0.0, round(length(normalize(cos(0.0)))), length(tan(vec2(0.0, 0.0))), 0.0), mat3x4(mat4(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 1.0, cos(0.0), 0.0, 0.0, round(length(normalize(cos(0.0)))), length(tan(vec2(0.0, 0.0))), 0.0))))))))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1335.7824))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1335.7824))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(-1335.7824), max(_GLF_IDENTITY(_GLF_FUZZED(-1335.7824), (false ? _GLF_FUZZED(-25.24) : _GLF_FUZZED(-1335.7824))), _GLF_FUZZED(-1335.7824))))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), clamp(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(injectionSwitch, 1.0, 1.0)))))))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : 1.0)), 1.0)))))))[0], clamp((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7581.8360)), bool(false))), 1.0), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), vec4(injectionSwitch, 1.0, 1.0)))))[0]))) - 0.0), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(8.5, 2.4, -5.3, 9156.7490)) : vec4(injectionSwitch, 1.0, 1.0))), (vec4(injectionSwitch, 1.0, 1.0)) * mat4(1.0)), vec4(injectionSwitch, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(428.760), _GLF_FUZZED(-1709.1277)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (vec2(vec4(injectionSwitch, 1.0, 1.0))) * mat2(1.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))) && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))) && (bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), log(1.0), 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), log(1.0), 1.0))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false))), false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0)) | (1)))) | (int(1)), ((int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 1, 1)))) | (int(1))) << 0))), ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((int(1)) | (int(1)), ((int(1)) | (int(1))) | (_GLF_IDENTITY((int(1)) | (int(1)), clamp(_GLF_IDENTITY((int(1)) | (int(1)), max((int(1)) | (int(1)), (int(1)) | (int(1)))), (int(1)) | (int(1)), (int(1)) | (int(1)))))), ((int(1)) | (int(1))) << 0)))) ^ 0))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), 1)))) | (int(1))), (true ? _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) | _GLF_IDENTITY((int(1)), clamp(_GLF_IDENTITY((int(1)), ((int(1))) | 0), (int(1)), (int(1))))) : _GLF_FUZZED(-71394)))))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), 0))) + 0)) >> (0 ^ 0)) + (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))))) | 0)) << 0))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, false, true))))))))) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))
            return;
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)))) || false))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(1, (1) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0), _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0)), (float(mat4(_GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), clamp(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0))[0], (vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0))[1]), vec2(_GLF_FUZZED(-50.21), _GLF_FUZZED(2162.7614)), bvec2(false, false))))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-543.538) : 1.0)), 0.0)))))), mix(float(_GLF_FUZZED(5.7)), float(float(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-543.538) : 1.0)), 0.0))), bool(true)))), _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)), 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) / 1.0)))), _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.7, 2.5)) : injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_FUZZED(injectionSwitch))) - sin(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3311.0964)), max(float(_GLF_FUZZED(3311.0964)), float(_GLF_FUZZED(3311.0964)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(53.40)))), bool(true)), max(mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_FUZZED(injectionSwitch))) - sin(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3311.0964)), max(float(_GLF_FUZZED(3311.0964)), float(_GLF_FUZZED(3311.0964)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(53.40)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_FUZZED(injectionSwitch))) - sin(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3311.0964)), max(float(_GLF_FUZZED(3311.0964)), float(_GLF_FUZZED(3311.0964)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(53.40)))), bool(true)), float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_FUZZED(injectionSwitch))) - sin(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3311.0964)), max(float(_GLF_FUZZED(3311.0964)), float(_GLF_FUZZED(3311.0964)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(53.40)))), bool(true)), (mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_FUZZED(injectionSwitch))) - sin(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3311.0964)), max(float(_GLF_FUZZED(3311.0964)), float(_GLF_FUZZED(3311.0964)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(53.40)))), bool(true))) / 1.0), 0.0, 1.0))))))))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat2(vec2(vec3(injectionSwitch, 0.0)), 0.0, exp(0.0))))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.0))), injectionSwitch.y))) && true), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false))), true)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, 0.0)))))) < injectionSwitch.y))))))), false, false))))));
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))
                return;
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
    }
  }
 for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), true && (! (_injected_loop_counter < int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))), bool(bvec3(! (_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * exp(0.0)))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)))) || false)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false), _GLF_IDENTITY(true, (true) || false), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))), true)))))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) && true)) && true))), false), true, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), false), true, true)), false, true)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), true, true)))))))) && true), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))))))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))))))) && true)), false || (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))))))) && true)))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), false, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))))))) && true)), true, true)), (bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true)))), false)))))))))) && true)) || false)), true, true))) && true)))))) || false)), false)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.59)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1446.2888, 46.40)) : injectionSwitch)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1446.2888, 46.40)) : injectionSwitch)).y)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)); _injected_loop_counter --)
      {
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true ? workgroup_size : _GLF_FUZZED(workgroup_size), 1u * _GLF_IDENTITY((_GLF_IDENTITY(true ? workgroup_size : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(uint(uvec2(true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size)))), 0u)), (uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size)) + 0u), 0u))) | (uint(uvec2(true ? workgroup_size : _GLF_FUZZED(workgroup_size), 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? workgroup_size : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(uint(uvec2(true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size)))), 0u)), (uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size)) + 0u), 0u))) | (uint(uvec2(true ? workgroup_size : _GLF_FUZZED(workgroup_size), 0u)))))), 1u * ((_GLF_IDENTITY(true ? workgroup_size : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(uint(uvec2(true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size)))), 0u)), (uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size)) + 0u), 0u))) | (uint(uvec2(true ? workgroup_size : _GLF_FUZZED(workgroup_size), 0u))))))))) + 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((true), true, false, false)), true && (bool(bvec4((true), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(workgroup_id))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) / 1u)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))) + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))), (_injected_loop_counter --) / (1 & 1)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))) % subgroup_size);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (_GLF_WRAPPED_LOOP(false))));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) ^ 0), int(ivec3(3, 1, _GLF_IDENTITY(0, (0) / 1))))), clamp(int(_GLF_IDENTITY(3, int(ivec3(3, 1, 0)))), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(3, 1, 0)), min(int(ivec3(3, 1, 0)), int(ivec3(3, 1, 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec3(3, 1, 0))), min(_GLF_IDENTITY(3, int(ivec3(3, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec3(3, 1, 0))), ~ (~ (_GLF_IDENTITY(3, int(ivec3(3, 1, 0))))))))))), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) ^ 0)) & 1))), 4, _GLF_IDENTITY(64, int(ivec2(64, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(4, min(4, 4)));
  }
 if(_GLF_DEAD(false))
  return;
}
