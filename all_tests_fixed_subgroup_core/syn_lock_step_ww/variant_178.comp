#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 vec3 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 float _f1;
 mat3 _f2;
 mat3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 ivec2 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 uvec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 uint _f1;
 mat4x2 _f2;
 mat4 _f3;
 mat2 _f4;
 mat4x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 mat2 _f3;
 ivec2 _f4;
 vec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3x2 _f1;
 bool _f2;
 mat3 _f3;
 bvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2x4 _f2;
 mat2x4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 _GLF_struct_2 _f1;
 ivec2 _f2;
 _GLF_struct_5 _f3;
 mat3x2 _f4;
 ivec4 _f5;
 _GLF_struct_8 _f6;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), length(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 1.0, abs(sqrt(0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(length(0.0), 1.0, 0.0), vec3(cos(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(45.26)), bool(false))))), _GLF_IDENTITY(dot(vec3(length(0.0), 1.0, 0.0), vec3(cos(0.0), 0.0, 1.0)), clamp(dot(vec3(length(0.0), 1.0, 0.0), vec3(cos(0.0), 0.0, 1.0)), dot(vec3(length(0.0), 1.0, 0.0), vec3(cos(0.0), 0.0, 1.0)), dot(vec3(length(0.0), 1.0, 0.0), vec3(cos(0.0), 0.0, 1.0))))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(abs(vec2(0.0, 0.0)))).y), 1.0, 1.0, 1.0))), 0.0, 0.0)), 1.0, log(1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))), vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_ONE(1.0, injectionSwitch.y))), float(mat2x3(float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(165.021)), float(1.0), bool(true))), 0.0, 0.0)), 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).y))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-791.502) : 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0)))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, log(1.0))))) / cos(0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true, ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-0.1, 816.237).s), _GLF_FUZZED(-6358.3379)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)) && (false)), bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), true, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.9))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat2x4(1.0), _GLF_struct_2(_GLF_struct_0(mat3x4(1.0), mat3x2(1.0), true, mat3(1.0), bvec4(true), ivec4(1)), _GLF_struct_1(1u, mat2x4(1.0), mat3x2(1.0), mat2(1.0), ivec2(1), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec4(7.4, 292.409, -5276.7801, 4.3), mix(vec4((vec4(7.4, 292.409, -5276.7801, 4.3))[0], (vec4(7.4, 292.409, -5276.7801, 4.3))[1], (vec4(7.4, 292.409, -5276.7801, 4.3))[2], (vec4(7.4, 292.409, -5276.7801, 4.3))[3]), vec4(_GLF_FUZZED((true ? (-54.49 / -296.855) : -4.9)), _GLF_FUZZED(-67.11), _GLF_IDENTITY(_GLF_FUZZED(-731.512), (_GLF_FUZZED(-731.512)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(-9.3), max(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_IDENTITY(_GLF_FUZZED(-9.3), (_GLF_FUZZED(-9.3)) - 0.0), _GLF_FUZZED(-9.3))), _GLF_FUZZED(-9.3)))), bvec4(false, false, false, false))))))) - vec4(0.0, 0.0, 0.0, 0.0)), mat3x4(1.0)), mat2x4(1.0), mat2x4(1.0), mat2x4(1.0)), ivec2(1), _GLF_struct_5(_GLF_struct_3(mat4(1.0), 1u, mat4x2(1.0), mat4(1.0), mat2(1.0), mat4x3(1.0), bvec4(true)), _GLF_struct_4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(true, ! (! (true)))))), uvec3(1u), true)), mat3x2(1.0), ivec4(1), _GLF_struct_8(_GLF_struct_6(bvec4(true), 1.0, mat3(1.0), mat3(1.0), ivec3(1)), ivec2(1), _GLF_struct_7(vec3(1.0), uvec2(1u), mat3x2(1.0), bvec4(_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), mix(float(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), float(_GLF_FUZZED(-5118.3769)), bool(false))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.1) : 0.0)), 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6742.4251))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), min(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), min(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))), min(float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), min(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), min(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(8.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(log(1.0), log(1.0), 1.0), (false ? _GLF_FUZZED(vec3(2772.5885, 255.417, 430.656)) : vec3(log(1.0), log(1.0), 1.0))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), clamp(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-17.52) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(log(1.0), log(1.0), 1.0), min(_GLF_IDENTITY(vec3(log(1.0), log(1.0), 1.0), (true ? vec3(log(1.0), log(1.0), 1.0) : _GLF_FUZZED(vec3(7.2, -7281.4237, -4347.7459)))), vec3(log(1.0), log(1.0), 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), abs(1.0), 0.0, 1.0, 1.0, 1.0)))), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, sin(0.0), tan(0.0), 0.0, 0.0, 1.0)), float(mat2(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, sin(0.0), tan(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), clamp(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-7.3)), bool(false))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(bool(true), false || (bool(true)))))))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6220.5648)), bool(false)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(_GLF_IDENTITY(vec3(log(1.0), log(1.0), 1.0), (false ? _GLF_FUZZED(vec3(-62.48, 878.367, 9.1)) : vec3(log(1.0), log(1.0), 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-8.3))), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true)))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), min(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), min(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true)))))))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), min(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec3(log(1.0), log(1.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(true))))))))))))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size);
 atomicStore(buf[_GLF_struct_replacement_9.virtual_gid], uint(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_IDENTITY(_GLF_FUZZED(48127), (_GLF_IDENTITY(_GLF_FUZZED(48127), max(_GLF_FUZZED(48127), _GLF_FUZZED(48127)))) | 0)))), 1 * (~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_IDENTITY(_GLF_FUZZED(48127), (_GLF_IDENTITY(_GLF_FUZZED(48127), max(_GLF_IDENTITY(_GLF_FUZZED(48127), (_GLF_FUZZED(48127)) | (_GLF_FUZZED(48127))), _GLF_FUZZED(48127)))) | 0))))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(1.0, 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(-2.3))), float(_GLF_IDENTITY(_GLF_FUZZED(-672.322), max(_GLF_FUZZED(-672.322), _GLF_FUZZED(-672.322)))), bool(false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))))), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-13470) : 0))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
}
