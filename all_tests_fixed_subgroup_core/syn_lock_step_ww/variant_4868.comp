#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))) && _GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))))) || false))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), true))), true, _GLF_IDENTITY(true, ! (! (true)))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, (true) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))))), true, false)), true))), true, true))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8967.2182)), vec2(_GLF_FUZZED(-3.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, float(mat3x4(injectionSwitch.y, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), sqrt(1.0), 1.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3302.5404), _GLF_FUZZED(vec2(971.512, 9267.4891).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(9655.5278)), vec2(_GLF_FUZZED(576.340), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(log(1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))), false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))) < injectionSwitch.y))) && true), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(vec2(8.8, _GLF_IDENTITY(8743.2590, max(_GLF_IDENTITY(8743.2590, min(8743.2590, 8743.2590)), _GLF_IDENTITY(8743.2590, min(8743.2590, 8743.2590)))))) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, false))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, true, true)), true)), ! (! (bool(bvec2(bool(bvec4(false, false, true, true)), true))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, true))))))))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))) || false)))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), false), bvec2(bvec4(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), false), true, false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x)), (false ? _GLF_FUZZED(asinh(-2.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x))) + 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x, clamp(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) ? _GLF_FUZZED(sinh(5968.3789)) : injectionSwitch.x)))))) : _GLF_FUZZED(-4.9)))), float(_GLF_FUZZED(134.084)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bvec3(! (bool(false)), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY((! (bool(false))) && true, ! (_GLF_IDENTITY(! ((! (bool(false))) && true), (! ((_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), false)))) && true)) && true)))), true, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (bool(false)), true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (bool(false)), true, true), bvec3(bvec4(bvec3(! (bool(false)), true, true), _GLF_IDENTITY(false, bool(bool(false)))))), false)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, true), bvec3(bvec4(bvec3(! (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), true, true), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (bool(false)), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (bool(false)), true, true), false)), true))))), true))))))))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0 * ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))), float(_GLF_FUZZED(134.084)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0 * ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))), float(_GLF_FUZZED(134.084)), bool(false))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0 * ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))), float(_GLF_FUZZED(134.084)), bool(false))) > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))), false || (false)) ? _GLF_FUZZED(sinh(5968.3789)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))), float(_GLF_FUZZED(134.084)), bool(false))) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch)) + vec2(0.0, 0.0))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch)) + vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7655.4808, 7.4, 8528.4276, 2498.3622)) : mat2(1.0))) * (injectionSwitch)) + vec2(0.0, 0.0))).y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))))))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))))))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(6), int(6))))], (_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> _GLF_IDENTITY(0u, 0u ^ (0u)))) | (_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ (gl_WorkGroupID[0]))))))), _GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(gl_WorkGroupID[0], gl_WorkGroupID[0])))), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], _GLF_IDENTITY(uint(uint(gl_WorkGroupID[2])), (uint(uint(gl_WorkGroupID[2]))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(114216u, 117612u, 72857u)) : gl_WorkGroupID)), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(uvec4(gl_WorkGroupID, 1u))))), gl_WorkGroupID))[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(161768u, _GLF_IDENTITY((161768u), ((161768u)) ^ 0u) | 0u), 9537u, 61367u)) : gl_WorkGroupID), clamp((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(161768u, (161768u) | 0u), 9537u, _GLF_IDENTITY(61367u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u)))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(61367u, clamp(61367u, 61367u, 61367u)), 0u, 0u, 0u))))))))) : gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(161768u, (161768u) | 0u), 9537u, 61367u)) : gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(161768u, (161768u) | 0u), 9537u, 61367u)) : gl_WorkGroupID), ((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(161768u, (161768u) | 0u), 9537u, 61367u)) : gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)))))[2])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, max(0, 0))])), gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))))[1], _GLF_IDENTITY(gl_WorkGroupID[2], (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) << 0u)) - 0u) : gl_WorkGroupID[2], ~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) << 0u)) - 0u) : gl_WorkGroupID[2])))))))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID[0])), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), (gl_WorkGroupID[0]) >> 0u), (gl_WorkGroupID[0]) - 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY((gl_WorkGroupID[0]) - 0u, max((gl_WorkGroupID[0]) - 0u, (gl_WorkGroupID[0]) - 0u))), 0u, 1u), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, min(0, 0))], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), (gl_WorkGroupID[0]) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_id)))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], min(_GLF_IDENTITY(gl_WorkGroupID[0], min(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[0])), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), (max(gl_WorkGroupID[0], gl_WorkGroupID[0])) | (_GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), min(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(gl_WorkGroupID[0], gl_WorkGroupID[0])))))), gl_WorkGroupID[1], gl_WorkGroupID[2]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(uvec2(199615u, 68891u), subgroup_id)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), (max(gl_WorkGroupID[0], gl_WorkGroupID[0])) | (_GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), min(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(gl_WorkGroupID[0], gl_WorkGroupID[0])))))), gl_WorkGroupID[1], gl_WorkGroupID[2]))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))), _GLF_IDENTITY(gl_WorkGroupID[0], uint(uvec2(gl_WorkGroupID[0], 0u))))), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(65557)))])))))))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], min(_GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[1])), min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_IDENTITY(_GLF_FUZZED((uvec3(104859u, 6204u, 114669u) & (workgroup_size + subgroup_size))), (_GLF_IDENTITY(_GLF_FUZZED((uvec3(104859u, 6204u, 114669u) & (workgroup_size + subgroup_size))), (_GLF_FUZZED((uvec3(104859u, 6204u, 114669u) & (workgroup_size + subgroup_size)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) : gl_WorkGroupID))[0], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], min(gl_WorkGroupID[2], gl_WorkGroupID[2]))))))))), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) * 1))])), gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2]))))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID[0])), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), (gl_WorkGroupID[0]) >> 0u), (gl_WorkGroupID[0]) - 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), 0))]) - 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (_GLF_IDENTITY(gl_WorkGroupID[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupID[0]), max(~ (gl_WorkGroupID[0]), ~ (gl_WorkGroupID[0])))))) | (gl_WorkGroupID[0])), (_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ (gl_WorkGroupID[0])))) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, min(0, 0))], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), (gl_WorkGroupID[0]) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_id)))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))[2]))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID[0], (_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0]))) ^ 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], 1u * (gl_WorkGroupID[0])), _GLF_IDENTITY(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), clamp(max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(gl_WorkGroupID[0], gl_WorkGroupID[0]), max(gl_WorkGroupID[0], gl_WorkGroupID[0])))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)))[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(23395) : 0))], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-6.1)), float(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)))))))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED((uvec3(104859u, 6204u, _GLF_IDENTITY(114669u, 0u ^ (114669u))) & (workgroup_size + subgroup_size))) : gl_WorkGroupID))[0], (true ? _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED((uvec3(104859u, 6204u, _GLF_IDENTITY(114669u, 0u ^ (114669u))) & (workgroup_size + subgroup_size))) : gl_WorkGroupID))[0] : _GLF_FUZZED((uvec2(154105u, 111936u) & 150791u).y))), gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], _GLF_IDENTITY(min(gl_WorkGroupID[2], gl_WorkGroupID[2]), uint(_GLF_IDENTITY(uint(min(gl_WorkGroupID[2], gl_WorkGroupID[2])), (uint(min(gl_WorkGroupID[2], gl_WorkGroupID[2]))) / 1u))))))))))), 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2]), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2])) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))]) | (_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], 0u | (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))])), 1u, 0u))))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2]))))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) | (0u))))), (gl_WorkGroupID[0]) - 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY((gl_WorkGroupID[0]), (_GLF_IDENTITY((gl_WorkGroupID[0]), clamp((gl_WorkGroupID[0]), (gl_WorkGroupID[0]), (gl_WorkGroupID[0])))) << 0u) - 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_id)))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) ^ uvec3(0u, 0u, 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2]), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2])) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))]) | (_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], 0u | (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))])), 1u, 0u))))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2]))))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) | (0u))))), (gl_WorkGroupID[0]) - 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY((gl_WorkGroupID[0]), (_GLF_IDENTITY((gl_WorkGroupID[0]), clamp((gl_WorkGroupID[0]), (gl_WorkGroupID[0]), (gl_WorkGroupID[0])))) << 0u) - 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_id)))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) ^ uvec3(0u, 0u, 0u)) | (((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2]), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 0)))])), gl_WorkGroupID[1], gl_WorkGroupID[2])) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))]) | (_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))], 0u | (gl_WorkGroupID[_GLF_IDENTITY(0, clamp(0, 0, 0))])), 1u, 0u))))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID[2]))))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) | (0u))))), (gl_WorkGroupID[0]) - 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY((gl_WorkGroupID[0]), (_GLF_IDENTITY((gl_WorkGroupID[0]), clamp((gl_WorkGroupID[0]), (gl_WorkGroupID[0]), (gl_WorkGroupID[0])))) << 0u) - 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_id)))), max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))[0])))), ((_GLF_IDENTITY(gl_WorkGroupID[0], uint(uint(gl_WorkGroupID[0]))))) + (113621u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[0], max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))[0], gl_WorkGroupID[0])), (_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0]))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupID[1], gl_WorkGroupID[2]))))) - _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(_GLF_IDENTITY(8u, clamp(8u, _GLF_IDENTITY(8u, (false ? _GLF_FUZZED(workgroup_size) : 8u)), 8u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(uvec3(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | (uvec3(8u)))))), uvec3(8u))))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bool(! (! (bool(bool(false)))))))), (bool(bool(false))) || _GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), vec2(vec4(((injectionSwitch)) * mat2(1.0), log(1.0), 1.0)))) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), float(_GLF_FUZZED(-23.16)), bool(false))))))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && true)))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && true)))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0))) + vec2(0.0, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0))))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0))) + vec2(0.0, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0))))))))))))), (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x3(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-59.06)), float(1.0), bool(true))))) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0))))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x3(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-59.06)), float(1.0), bool(true))))) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), 1.0, 1.0, 1.0, 1.0))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0))))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)))), (_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0))))) - 0.0))))))))))))) && true))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, false || (false)))), (false || (! (_GLF_IDENTITY(false, false || (false))))) || false))) && true)))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (! ((! (_GLF_IDENTITY(false, false || (false))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (! ((! (_GLF_IDENTITY(false, false || (false))))))), false, false)))))), (false || (! (_GLF_IDENTITY(false, false || (false))))) || false))) && true)))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(((false)) && true, (((_GLF_IDENTITY(false, (false) && true))) && true) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (false) && _GLF_IDENTITY(true, ! (! (true))))), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), ((false)) && true))), _GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, ! (! (((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, ! (! (((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, ! (! (((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true))), (_GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, ! (! (((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && _GLF_IDENTITY(true, (true) || false))))) && true)))) || false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))))))) && true, ! (! (((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), true, false))))))) && true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true, ! (! (((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)))) && true)))))))) && true)))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && _GLF_IDENTITY(true, (true) && true))))) && true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), true)))))) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))))))))), bool(bvec4(bool(bool(((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))))))))), false, true, false)))))) && true)))))))))), bool(bvec4((! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), ((false)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)), ((false)) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(((false)), true && (((false)))) && true)))) && true), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)), ((false)) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), _GLF_IDENTITY(((false)), true && (((false)))) && true)))) && true)) && true))))))), false, true, true)))))), ((false)) || false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(((false)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))) && true, (((_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true)))) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(((false)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))) && true, (((_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true)))) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(((false)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))) && true, (((_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true)))) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))), ((false)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false)) && true)))) && true)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))), ((false)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false)) && true)))) && true))))), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))), ((false)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false)) && true)))) && true))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))), ((false)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false)) && true)))) && true)))))) || false))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))) && true)))) && true))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (false) && true)), true), true)))))))), ((false)) && true)))) && true))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_IDENTITY(false, false || (false)))))))))), true, false))))))))))))), ((false)) || false))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.2) : injectionSwitch.x)) > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))) * subgroup_size)) + subgroup_local_id, (false ? _GLF_FUZZED(39669u) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) / 1u)) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(max(~ (subgroup_id), ~ (subgroup_id)), min(max(~ (subgroup_id), ~ (subgroup_id)), _GLF_IDENTITY(max(~ (subgroup_id), ~ (subgroup_id)), 0u ^ (max(~ (subgroup_id), ~ (subgroup_id))))))))) * subgroup_size + subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uvec2(max(workgroup_base, workgroup_base), 1u)))) + _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u), (false ? _GLF_FUZZED((subgroup_size - subgroup_size)) : _GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), _GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * subgroup_size + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) << 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) << 0u)))), max(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) << 0u)))), ~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) << 0u)))))))) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u))))) * subgroup_size + subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(num_workgroup)), clamp((true ? subgroup_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_id : _GLF_FUZZED(num_workgroup)), (true ? subgroup_id : _GLF_FUZZED(num_workgroup))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(27.85)), bool(false))) > injectionSwitch.y)))) && true, bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(27.85)), bool(false))) > injectionSwitch.y)))) && true), bool(bvec3(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(27.85)), bool(false))) > injectionSwitch.y)))) && true), false, true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec3(bool(bvec4(false, true, true, false)), false, false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) || false)))))), bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-7.1, 785.649, 2269.3274, 7.6).p)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 & 1)), int(ivec4(1, 1, 1, 1))))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 & 1)), int(ivec4(1, 1, 1, 1)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (0) * 1)) / 1), 1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, 0 + (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 + (2))), ((_GLF_IDENTITY(2, 0 + (2)))) / 1), (_GLF_IDENTITY(2, 0 + (2)))))))), _GLF_IDENTITY(4, (4) / 1), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
}
