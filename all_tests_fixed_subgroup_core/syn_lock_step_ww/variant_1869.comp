#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) - 0.0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))), bool(bvec4(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))), true, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true, true, false)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true, true, false))) && true))) && true)) && true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false)), false, true, true)), bool(bvec3(bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, true, true)), true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, log(1.0), 0.0))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4893.0855)), float(0.0), bool(true))), 1.0, 0.0, tan(0.0))), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4893.0855)), float(0.0), bool(true))), 1.0, 0.0, tan(0.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4893.0855)), float(0.0), bool(true))), 1.0, 0.0, tan(0.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4893.0855)), _GLF_IDENTITY(float(0.0), max(float(0.0), _GLF_IDENTITY(float(0.0), float(vec3(float(0.0), 1.0, 0.0))))), bool(true))), 1.0, 0.0, tan(0.0)))))))), 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9)))), float(_GLF_FUZZED(-2.9)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), tan(0.0))), min(dot(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, tan(0.0))), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(174.694)))), vec4(0.0, 1.0, 0.0, tan(0.0)))))), 1.0, length(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(985.471, 0.1, -1.9, -503.546, -5.6, -54.45, 88.92, 4036.6991))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2(mat3(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, tan(0.0)), (vec4(0.0, 1.0, 0.0, tan(0.0))) * mat4(1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(sqrt(0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, tan(0.0)), (vec4(0.0, 1.0, 0.0, tan(0.0))) * mat4(1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(93.47)), vec2(_GLF_FUZZED(33.20), _GLF_IDENTITY((normalize(vec2(1.0, 1.0)))[1], clamp((normalize(vec2(1.0, 1.0)))[1], (normalize(vec2(1.0, 1.0)))[1], (normalize(vec2(1.0, 1.0)))[1]))), bvec2(false, true))), normalize(vec2(1.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, sin(sqrt(0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-989.331)), bool(false)))), vec4(0.0, 1.0, 0.0, tan(0.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), (_GLF_IDENTITY(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), float(mat3(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(floor(-7804.7133)) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0))))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8914.7533)), bool(false)))) / 1.0)), mix(float((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8914.7533)), bool(false)))) / 1.0))), float(_GLF_FUZZED(-2.7)), bool(false)))), 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-5218.7707)))) / 1.0)))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(949.632) : 0.0)), 0.0)), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))) + 0.0)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)))), 0.0 + (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))) + 0.0)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)))))), (false ? _GLF_FUZZED(-374.897) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))) + 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0))), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))) + 0.0)))) - 0.0)) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, abs(1.0), sqrt(0.0)))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0)))))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(86.00)), bool(false))), 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(35.78, 4.4, _GLF_IDENTITY(736.911, mix(float(_GLF_IDENTITY(736.911, min(736.911, 736.911))), float(_GLF_FUZZED(78.83)), bool(false))), -819.216), max(vec4(35.78, 4.4, 736.911, -819.216), vec4(35.78, 4.4, 736.911, -819.216)))) : vec4(1.0, 0.0, 1.0, 1.0))))), vec4(0.0, 1.0, 0.0, tan(0.0))), min(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-46.88)), bool(false))), tan(0.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, tan(0.0)))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(985.471, 0.1, -1.9, -503.546, -5.6, -54.45, 88.92, 4036.6991)))))) / vec2(1.0, 1.0))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))) || false))), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false)))))), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), false))), bool(bvec4(! (bool(bvec2(_GLF_DEAD(false), false))), false, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size, _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size)), 0u ^ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size)), 0u | (~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size)))))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z = subgroup_local_id, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z = subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-26.78) : injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(53.72)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(96.70)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(96.70)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(96.70)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0)), dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat2(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0)), dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), float(mat2(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0)), dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), float(mat2(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), dot(vec2(1.0, round(length(normalize(1.0)))), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))))))))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), min(_GLF_FUZZED(vec2(2.9, 81.98)), _GLF_FUZZED(vec2(2.9, 81.98)))) : _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), false))))))))), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), min(_GLF_FUZZED(vec2(2.9, 81.98)), _GLF_FUZZED(vec2(2.9, 81.98)))) : _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), false))))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), min(_GLF_FUZZED(vec2(2.9, 81.98)), _GLF_FUZZED(vec2(2.9, 81.98)))) : _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), false))))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 81.98)), min(_GLF_FUZZED(vec2(2.9, 81.98)), _GLF_FUZZED(vec2(2.9, 81.98)))) : _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true)))), false), false))))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352)), min((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), (_GLF_FUZZED(-9962.3352)) / cos(0.0))))), float(_GLF_FUZZED(-7.7)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), min(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)))), float(_GLF_FUZZED(-9962.3352)), bool(true))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352)), min((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), (_GLF_FUZZED(-9962.3352)) / cos(0.0))))), float(_GLF_FUZZED(-7.7)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), min(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)))), float(_GLF_FUZZED(-9962.3352)), bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352)), min((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), (_GLF_FUZZED(-9962.3352)) / cos(0.0))))), float(_GLF_FUZZED(-7.7)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), min(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)))), float(_GLF_FUZZED(-9962.3352)), bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352)), min((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_FUZZED(-9962.3352), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), (_GLF_FUZZED(-9962.3352)) / cos(0.0))))), float(_GLF_FUZZED(-7.7)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9962.3352), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), min(float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)), float(_GLF_FUZZED(vec3(-4.6, 451.758, -750.300).x)))), float(_GLF_FUZZED(-9962.3352)), bool(true))))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) & uvec3(84655u, 3878u, 20797u)), min((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) & uvec3(84655u, 3878u, 20797u)), _GLF_IDENTITY((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) & uvec3(84655u, 3878u, 20797u)), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) & uvec3(84655u, 3878u, 20797u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(86866u, 65487u, 156868u)) : (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(86866u, 65487u, 156868u)) : (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(86866u, 65487u, 156868u)) : (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(86866u, 65487u, 156868u)) : (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0), (mat3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-45.20) : 1.0))), 1.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0), (mat3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4391.9446 + 2.0)), _GLF_FUZZED(-3313.3062)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], (injectionSwitch)[0]), cos(0.0) * (clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], (injectionSwitch)[0]), cos(0.0) * (clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], (injectionSwitch)[0]), cos(0.0) * (clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], (injectionSwitch)[0]), cos(0.0) * (clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.w = workgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.w = workgroup_id) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.72), _GLF_FUZZED(932.918)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false)))))) || false))), true))), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), clamp(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) : (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))) ^ uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), clamp(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) : (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))) ^ uvec2(0u, 0u))))) << uvec2(0u, 0u)).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2624.3205), 0.0 + (_GLF_FUZZED(-2624.3205))), _GLF_FUZZED(-27.31)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(mat4x2(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(mat4x2(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) * 1.0), abs(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(true ? round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))) : _GLF_FUZZED(-7121.3944), (_GLF_IDENTITY(true, ! (! (true))) ? true ? round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))) : _GLF_FUZZED(-7121.3944) : _GLF_FUZZED(-512.050)))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), max(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)), max(float(mat2x3(0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)), float(mat2x3(0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)))))), 0.0, 0.0)), float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(654.729)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true)))), max(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), float(_GLF_FUZZED(-2.2)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5646.9326)), vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / abs(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, uvec2(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, 0u))).x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z;
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x, (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (uvec2(14356u, 31219u) & uvec2(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) | uvec2(0u, 0u)))).x)) + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x = next_virtual_gid, (true ? GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x = next_virtual_gid : _GLF_FUZZED(num_workgroup)))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) - 0u)), (~ (_GLF_IDENTITY(0u, (0u) - 0u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x], uint(_GLF_IDENTITY(2, int(ivec3(2, (1 | 1), 1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(910.074, 1.5, -65.88, 92.12).b)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))))))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(910.074, 1.5, -65.88, 92.12).b)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ((bool(false))) && true) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
