#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-7766.9322), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-7766.9322), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-7766.9322), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))), (false ? _GLF_FUZZED(vec2(5.9, 547.524)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-7766.9322), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(-4082.6873, 0.0, 688.324, -732.362)) : mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(976.227)), vec2((vec2(_GLF_IDENTITY(mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(-4082.6873, 0.0, 688.324, -732.362)) : mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0)))))[0], (vec2(_GLF_IDENTITY(mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(-4082.6873, 0.0, 688.324, -732.362)) : mat2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))), injectionSwitch[1]))))), 1.0, 0.0)))))[1]), bvec2(true, true)))))) + vec2(0.0, 0.0))).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))), false, false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4966.1894)), bool(false))) > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true)), true)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)) || false), true)), true))))))) && true)))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3591.1644), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.0, 1.7)))).y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))) && true), false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))) && true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))) && true), false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))) && true), false)))))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ((bool(false))) || false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7132.8541), _GLF_FUZZED(429.650)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0) : _GLF_FUZZED(mod(-10.38, -8859.3471))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 0u)))))))) - uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), 0u))).x) * 1u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.7)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), bool(bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-5762.3578 - -5967.3186))), vec2(_GLF_FUZZED((-3945.6047 + 0.3)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), false))) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) >> 0u), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id))) + 0u);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false))) && true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true))))))), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false))), false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) && true))
            barrier();
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)) : _GLF_FUZZED(vec2(-130.714, 6701.5763)))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false)), true, false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_size))))), ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))) ^ 0u))) | 0u), min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) - 0u)), subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), ((1u)) / 1u)))))), (false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u)))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u))))) >> 0u)))))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) / 1u)), subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_size) / 1u)), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u)) | (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))))), clamp((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))), min((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))))), min((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))), 0u ^ ((_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))))) >> 0u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u)), (37228u & 0u) + ((subgroup_size) / _GLF_IDENTITY(1u, 0u | (1u))))) >> 0u))))), (false ? _GLF_FUZZED((workgroup_size --)) : ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ~ (~ ((1u) | (1u)))))))))))))))), 0u ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(137541u) : subgroup_size))) << _GLF_IDENTITY(0u, max(0u, 0u)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u)))), 1u * ((_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u)))))))), subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (subgroup_size) / 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u)))), min(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u)))), ~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u)))), min(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u)))), ~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_size), 0u, 1u)), (uint(uvec3((subgroup_size), 0u, 1u))) / 1u)) / _GLF_IDENTITY(1u, (1u) | (1u))))))) ^ 0u))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(sign(injectionSwitch)) : vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1812.3563) : 0.0)), 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9650.0968)), float(injectionSwitch.y), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9650.0968)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), true, false, true))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, true))))), bool(bvec4(! (false), true, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - sin(abs(0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(898.256), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-788.182, -0.2).r)), bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true), false, true, false)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), false, true, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), false, true, false))), bool(bool((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), false, true, false))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) | (uint(1)))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (_GLF_IDENTITY(~ ((uint(1)) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), clamp((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | ((0u) << 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (0u) * 1u))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_IDENTITY((0u) << 0u, ~ (~ ((0u) << 0u)))) / 1u))))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))), uint(uint(_GLF_IDENTITY(~ ((uint(1)) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) - 0u)), ~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ _GLF_IDENTITY(((uint(1)) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))) | 0u)), (_GLF_IDENTITY(((uint(1)) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))) | 0u)), (((uint(1)) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))) | 0u))) | (((uint(1)) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 1u * (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size)))))) << 0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(3u)), (true ? (uint(3u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))), uint(_GLF_IDENTITY(3u, 0u + (3u)))))) | 0u))))) ^ 0u), ~ (~ (~ ((uint(1)) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)), (true ? (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), clamp((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) << 0u))))) / 1u)), (true ? _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | ((0u) << 0u))))), (max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) << 0u), 1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, _GLF_IDENTITY(uint(uvec4((0u) << 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4((0u) << 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4((0u) << 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(uvec4((0u) << 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec4((0u) << 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (_GLF_IDENTITY(0u, (0u) << 0u)))) / 1u) : _GLF_FUZZED((subgroup_id << workgroup_size))))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u))))), (~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u))))), uint(uvec4(~ (_GLF_IDENTITY(~ (uint(3u)), min(_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))), ~ (uint(3u))))), 1u, 0u, 1u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u), 0u + (3u))))))))))))))))), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(-6492), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))), clamp(_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))), _GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))), (_GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492))))) + 0))), _GLF_IDENTITY(int(_GLF_FUZZED(-6492)), 0 | (int(_GLF_FUZZED(-6492)))))))) - 0)))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) | (_GLF_IDENTITY(uint(next_virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(next_virtual_gid)))))))))], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))) | 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))) | 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))) | 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))))) - 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))) | 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64))) | (64))))) - 0))), 4);
}
