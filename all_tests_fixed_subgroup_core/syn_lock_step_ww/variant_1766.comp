#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.0))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 1, 0))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (42538 & 0) ^ (0)) | 0), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((42538 & 0), ((42538 & 0)) ^ (1 ^ 1)) ^ (0)) | 0), 1, 0)), min(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0, (42538 & _GLF_IDENTITY(0, int(ivec3(0, 0, (1 & 1))))) ^ (0)) | 0), 1, 0), (false ? _GLF_FUZZED(ivec3(45021, 66142, 3312)) : ivec3((_GLF_IDENTITY(0, (42538 & _GLF_IDENTITY(0, int(ivec3(0, 0, (1 & 1))))) ^ (0)) | 0), 1, 0)))), int(ivec3((_GLF_IDENTITY(0, (_GLF_IDENTITY(42538, (true ? 42538 : _GLF_FUZZED(98272))) & 0) ^ (0)) | 0), 1, 0)))))); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec3(_GLF_IDENTITY(0, (0) / 1), 1, 1))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), _GLF_IDENTITY(int(8), (int(8)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) + 0)), int(5)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(5), int(5))), (clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ~ (~ ((_GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))) | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(false || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false || (_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(vec2(-4.6, 15.78), vec2(-4031.0318, 2.0), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), bool(bvec2(false || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true))))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 & -91318) ^ 1) & 1)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
                                barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                              }
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y) - 0.0)))))))))) && true))) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) || (_GLF_IDENTITY(false, (false) && true)))) || false)))
                              {
                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                              }
                             do
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false)))))))))))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               for(int _injected_loop_counter = _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))), (((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2)))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, true, false))))
                                  {
                                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (false ? _GLF_FUZZED((mat4x2(-5.9, -4.2, -34.04, -6.7, 0.1, 8.8, -2.8, -9.9)[0])) : _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), ((injectionSwitch) / cos(vec2(0.0, 0.0))) + log(vec2(1.0, 1.0)))))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(897.804) : 1.0)), 1.0)), 1.0)), (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))) && true))))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, min(1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                              barrier();
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       barrier();
                                      }
                                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             do
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               do
                                {
                                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) : _GLF_FUZZED(-57.82))) > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                                    {
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(_GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                    }
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0)), max(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0))))).y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0)))))), (float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0)), transpose(transpose(mat3x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0))))))) / 1.0))))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupID.x)), 0u ^ ((~ (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) && true), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false)))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-77.01), _GLF_FUZZED(-5.7)), bvec2(false, false))))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(99.95)), vec2(_GLF_FUZZED(28.05), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], sin(0.0), 0.0, 1.0, 1.0, 0.0)))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(99.95)), vec2(_GLF_FUZZED(28.05), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], sin(0.0), 0.0, 1.0, 1.0, 0.0)))), bvec2(false, true)))) * mat2(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(sin(tan(0.0)), min(sin(tan(0.0)), sin(tan(0.0)))), 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (3993u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) * 1u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))), max(~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))), ~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (workgroup_size))) >> (0u | 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> _GLF_IDENTITY((0u | 0u), ~ (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)) | 0u)))))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u)))))))), (true ? (workgroup_size) >> (0u | 0u) : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> (0u | 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u))))))))) ^ 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))) + (injectionSwitch.x)), mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, _GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), 0.4).t)), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)))))), (false ? _GLF_FUZZED(-59.66) : _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, _GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), 0.4).t)), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)))))), (_GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, _GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)))), 0.4).t)), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), min(float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t)), float(_GLF_FUZZED(vec3(4232.2709, 8.9, 0.4).t))))))) / 1.0))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec2(631.078, -153.344), injectionSwitch)))) < injectionSwitch.y))))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), min(~ (8), ~ (8)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), min(~ (8), ~ (8)))))), (int(_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), min(~ (8), ~ (8))))))) + 0)) / (1 & ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(903.633), _GLF_FUZZED(366.778)), bvec2(false, false))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(877.212))), 1.0, cos(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8466.2506) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-76.96, -7.8))))).y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true))) || false)))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(0.0)))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false)), (bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))))), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.8))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)) || false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false)))))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, (_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false) || false)))) && true)))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-11413))), vec2(_GLF_FUZZED(-44.91), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), max(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), bool(true))) < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9134.9171)), vec2(_GLF_FUZZED(-4.3), _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), _GLF_IDENTITY(float(0.0), mix(float(float(0.0)), float(_GLF_FUZZED(2.7)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9134.9171)), vec2(_GLF_FUZZED(-4.3), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), 1))], float(mat4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9134.9171)), vec2(_GLF_FUZZED(-4.3), _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(995.499)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0)))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true)))))).x > injectionSwitch.y)), false, false, false)))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, false))))))) && true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true, true, false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))), (! (_GLF_DEAD(false))) || false))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(1815.4701, -8.1).g)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true)))))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true))))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))) && true))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), mat3(mat4x3(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), mat3(mat4x3(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), mat3(mat4x3(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))), mix(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), mat3(mat4x3(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))))))), float(_GLF_FUZZED(-87.11)), bool(false)))))) < injectionSwitch.y))))
    {
     atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-561))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-561)))) << 0)) | 0, min((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-561)))) | 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-561)), ((true ? 1 : _GLF_FUZZED(-561))) / 1))) | 0)))), _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), (false ? _GLF_FUZZED(46696) : _GLF_IDENTITY((4), ((4)) | 0))))), 64, 4);
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, true))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), bool(bvec2(false, true)))) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) && true); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3890.8020)), float(0.0), bool(true)))) + abs(0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))).x > injectionSwitch.y))))
              barrier();
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-12647)))) >> 0)) << 0)); _injected_loop_counter ++)
                {
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp2(252.680)) : injectionSwitch.x)) > injectionSwitch.y)) || (false))))
              barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true)))) || false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false)))
                  barrier();
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-2.4)), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-9.9, -2.9)))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) * mat2(1.0))), _GLF_IDENTITY(mat2(1.0) * (clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-2.4)), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-9.9, -2.9)))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) * mat2(1.0)))), (true ? mat2(1.0) * (clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-2.4)), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-9.9, -2.9)))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch)))), vec2(mat4x3(clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-2.4)), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[1]), bvec2(true, true)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-9.9, -2.9)))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))))))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-9.9, -2.9)))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))) * mat2(1.0)))))))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x3((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(-849.432), _GLF_FUZZED(-77.90)), vec2((max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(_GLF_IDENTITY(5.7, 1.0 * (5.7)))), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) < injectionSwitch.y))))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, abs(0.0))), vec2(mat4x2(vec2(vec3(injectionSwitch, abs(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)), _GLF_IDENTITY(0, 0 | (0))))], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-1.6)), bool(false)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-1.6)), bool(false)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0))), 0.0, 0.0, 1.0, 1.0)), sqrt(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, tan(0.0), 0.0, _GLF_IDENTITY(length(abs(0.0)), clamp(length(abs(0.0)), length(abs(0.0)), length(abs(0.0)))), 1.0))) < injectionSwitch.y))))), (false ? _GLF_FUZZED(vec2(-413.498, -653.201)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, abs(0.0))), vec2(mat4x2(vec2(vec3(injectionSwitch, abs(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)), _GLF_IDENTITY(0, 0 | (0))))], _GLF_FUZZED(5.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, abs(sqrt(0.0)), 1.0))), injectionSwitch)))[1]), vec2(mat2(vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, abs(sqrt(0.0)), 1.0))), injectionSwitch)))[1]), 1.0, 0.0))), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), (float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))))))))) / 1.0), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-1.6)), bool(false)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0))), 0.0, 0.0, 1.0, 1.0)), sqrt(determinant(mat3(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, tan(0.0), 0.0, _GLF_IDENTITY(length(abs(0.0)), clamp(length(abs(0.0)), length(abs(0.0)), length(abs(0.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) < injectionSwitch.y))))))))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(251.493), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(7.9, max(_GLF_IDENTITY(7.9, min(7.9, 7.9)), 7.9))), _GLF_FUZZED(-1.5)), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))))))), (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch))))))))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch))) + vec2(0.0, 0.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-888.207)), max(float(_GLF_FUZZED(-888.207)), float(_GLF_FUZZED(-888.207)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED((+ 195.797)), _GLF_FUZZED(-64.90)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], cos(0.0) * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), mix(vec2(((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], cos(0.0) * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))[0], _GLF_FUZZED((false ? 874.673 : -4.6))), vec2(_GLF_FUZZED(716.858), ((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], cos(0.0) * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))[1]), bvec2(false, true))))))))), ((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch))) + vec2(0.0, 0.0))[1], max(_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(84.45)), bool(false)))), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, float(mat3x2(-6.6, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0))), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))), (true ? _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)))), injectionSwitch)), clamp((max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)))), injectionSwitch)), (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), (mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)))), injectionSwitch)))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))))), ((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch))) + vec2(0.0, 0.0))[1], _GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(2.4)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (false ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(((injectionSwitch))[1], (false ? _GLF_FUZZED(-8.4) : ((injectionSwitch))[1]))))), bvec2(true, true)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), max((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)), min((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[1], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[1]))), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch)))))))), ((max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4084.2461), _GLF_FUZZED(-6.6)), bvec2(false, false))), injectionSwitch))) + vec2(0.0, 0.0))[1]))), bool(true)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-529.270, float(mat4x3(-529.270, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))), bool(true)))))), 1.0, exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1008.7755)))), tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), tan(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(9.3)), bool(false)))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-97.73) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-110.253)), float(0.0), bool(true))))))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(4.9) : 0.0), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)) || false) ? _GLF_FUZZED(4.9) : 0.0)) + 0.0)), 1.0, log(1.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), _GLF_FUZZED(8302.2253)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) * vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-686.819, -5.7).x)), float(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(47.25)), min(_GLF_IDENTITY(float(_GLF_FUZZED(47.25)), (float(_GLF_FUZZED(47.25))) / 1.0), float(_GLF_FUZZED(47.25)))), float(1.0), bool(true)))), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(591.582), (_GLF_FUZZED(591.582)) / _GLF_IDENTITY(1.0, 0.0 + (1.0))))), 1.0)).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), int(1))), min(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), 0 + ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), (true ? (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(int((1 << _GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_GLF_IDENTITY(-27990, (-27990) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) << 0)))) >> _GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 1, 1, 1), (ivec4((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 1, 1, 1)) | (ivec4((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 1, 1, 1))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) << 0)))) >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(int(subgroup_id)) : _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), min((1 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), 0 | ((1 << _GLF_IDENTITY(int(1), int(1))))), 0, 0, 0))))) >> _GLF_IDENTITY(int(1), int(1))) >> 0)) | 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) - 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(1))))))), ! (! (_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), 0 + ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), (true ? (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(int((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) << 0))))) >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_GLF_IDENTITY(-27990, (-27990) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-30726)))), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-30726), ~ (_GLF_IDENTITY(~ (true ? 1 : _GLF_FUZZED(-30726)), clamp(~ (true ? 1 : _GLF_FUZZED(-30726)), ~ (true ? 1 : _GLF_FUZZED(-30726)), ~ (true ? 1 : _GLF_FUZZED(-30726)))))))))) / 1))), int(1))) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), clamp(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 << _GLF_IDENTITY(int(1), int(1)), 1 << _GLF_IDENTITY(int(1), int(1))))) << 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 >> _GLF_IDENTITY(int(5), int(5))) | (int(1))), int(1)), clamp((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) >> (32126 & 0)))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, (1) << 0)))), _GLF_IDENTITY((int(1)) - 0, 0 ^ (_GLF_IDENTITY((int(1)) - 0, max((int(1)) - 0, _GLF_IDENTITY((int(1)) - 0, int(ivec4((int(1)) - 0, 0, 0, 0))))))))), (false ? _GLF_FUZZED(int(subgroup_id)) : _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) >> 0, (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) >> 0) | (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) >> 0)))) | 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) - _GLF_IDENTITY(0, min(0, 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1))), int(1))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true)) && true))
              barrier();
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(true && (_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(84283) : 1), (false ? _GLF_FUZZED(-76562) : (false ? _GLF_FUZZED(84283) : 1)))), _GLF_IDENTITY(1, (1) >> 0)))), ! (_GLF_IDENTITY(! (true && (_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(84283) : 1), (false ? _GLF_FUZZED(-76562) : (false ? _GLF_FUZZED(84283) : 1)))), _GLF_IDENTITY(1, (1) >> 0))))), ! (! (! (true && (_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(84283) : 1), (false ? _GLF_FUZZED(-76562) : (false ? _GLF_FUZZED(84283) : 1)))), _GLF_IDENTITY(1, (1) >> 0)))))))))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != _GLF_IDENTITY((0 ^ 1), ~ (~ ((0 ^ 1))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (1 & 1) * (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(95392), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))), min(vec2(mat2(injectionSwitch, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat2(injectionSwitch, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(95392), clamp(_GLF_IDENTITY(_GLF_FUZZED(95392), max(_GLF_IDENTITY(_GLF_FUZZED(95392), (_GLF_FUZZED(95392)) << 0), _GLF_IDENTITY(_GLF_FUZZED(95392), (_GLF_FUZZED(95392)) ^ 0))), _GLF_FUZZED(95392), _GLF_IDENTITY(_GLF_FUZZED(95392), max(_GLF_FUZZED(95392), _GLF_FUZZED(95392))))) : _GLF_FUZZED(min(_injected_loop_counter, _injected_loop_counter)))) : 4), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(95392), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(95392), clamp(_GLF_FUZZED(95392), _GLF_FUZZED(95392), _GLF_FUZZED(95392))) : _GLF_FUZZED(min(_injected_loop_counter, _injected_loop_counter)))) : 4) : _GLF_FUZZED(ivec3(81661, -65875, -93041)[1])))))), _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, min(_GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, int(_GLF_IDENTITY(ivec4((4) - 0, 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8)))), ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY((ivec4((4) - 0, 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ ((ivec4((4) - 0, 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8)))))))))))) >> 0), _GLF_IDENTITY((4), ~ (~ ((4)))) - 0))) << 0)), 64, 4);
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
