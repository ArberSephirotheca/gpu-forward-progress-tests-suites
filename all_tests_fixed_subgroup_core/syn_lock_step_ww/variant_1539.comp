#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))) || false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), true, false), false)))))) || false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false))))), bool(bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true, false, false)), bool(bvec4(bool(bvec4(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true, false, false)), true, true, false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))), true, false), false)))))) || false)) && true))) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))), false, true)))), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0), (mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)) * mat2(1.0)))), max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0), (mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)) * mat2(1.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0), (mat2x3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)) * mat2(1.0)))))), 1.0), vec2(0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(26.47))))))).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y))) && true)))))))))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (false ? _GLF_FUZZED(-4.2) : 0.0 + (0.0))))) - 0.0), 0.0, 0.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : 0.0)), max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), max(vec2(mat3(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.9, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(0.0, 0.0))) + (-3.9))) : 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.0) : 0.0)), 0.0))), 0.0)), min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY(-3.9, mix(float(-3.9), float(_GLF_FUZZED((34.20 - -821.492))), bool(false)))) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(float(float(clamp(0.0, 0.0, 0.0))), (float(float(clamp(0.0, 0.0, 0.0)))) / exp(0.0)))))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-11.33, 4.6, -0.8, 663.085, 973.788, 8971.3934, -358.341, 887.061, -328.106)))))))), 0.0))), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), 1.0, 0.0, 0.0))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, abs(1.0), 0.0, cos(0.0), 1.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.2)), float(1.0), bool(true)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, abs(1.0), 0.0, cos(0.0), 1.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), min(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0))), float(vec4(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), (max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)) / 1.0), 0.0, 1.0, 1.0))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), min(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0))), float(vec4(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), (max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)) / 1.0), 0.0, 1.0, 1.0)))))) - 0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-3.9) : 0.0), ((false ? _GLF_FUZZED(-3.9) : 0.0)) * sqrt(1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -56.92))), bool(false)))), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9.9))), 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-1.1)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-1.1)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-1.1)), bool(false))))), 0.0)), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), 1.0), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0))), bool(true))), 1.0))))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0, clamp(((_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0, _GLF_IDENTITY(((_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0, (false ? _GLF_FUZZED(-54.99) : ((_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0)), ((_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0))) * 1.0))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(90.74) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.9, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -3.9 : _GLF_FUZZED(-7.1)))) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0), max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(36.00) : 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 0.0)))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(123.191) : _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(mat3(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min(_GLF_IDENTITY(max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), 1.0))))), (float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), 1.0)))))) + 0.0))), mix(float(_GLF_FUZZED(31.32)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true))), max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-4709.8684)), bool(false))))))) + 0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-4709.8684)), bool(false))))))) + 0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-4709.8684)), bool(false))))))) + 0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-4709.8684)), bool(false))))))) + 0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0))) - log(1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(2719.1256)), bvec2(false, false))))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, length(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-72.63)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(float(true))), float(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-72.63, (-72.63) / cos(log(1.0))))), float(0.0), bool(true))), bool(true)))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) * exp(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, false))), (! (bool(bvec4(false, true, true, false)))) && true))), (bool(bvec4(false, true, true, false))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))).y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))).y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9733.3757) : 0.0)), 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? 1.2 : 3.2))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)) && true) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-76.75, 40.13)) : vec2(mat2(injectionSwitch, 1.0, 0.0))))), (false ? _GLF_FUZZED(mat2(-0.0, 987.813, 0.8, 411.336)[1]) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-76.75, 40.13)) : vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(9.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-76.75, 40.13)) : vec2(mat2(injectionSwitch, 1.0, 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-76.75, 40.13)) : vec2(mat2(injectionSwitch, 1.0, 0.0))))))[1]), bvec2(true, true))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true))))), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0)))], gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0)))], gl_NumWorkGroups[2]))))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0)))], gl_NumWorkGroups[2])))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[2], uint(uvec3(gl_NumWorkGroups[2], 1u, 1u))))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(uvec4(gl_NumWorkGroups, 0u)))))[2]))))))) | (gl_NumWorkGroups), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0)))], gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(194466u, 189096u, 31626u)) : gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0))), (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 0, 0)))) | 0)], gl_NumWorkGroups[2]))))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(ivec4(1, 1, 1, 0))), 0, 0)))], gl_NumWorkGroups[2])))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[2], uint(uvec3(gl_NumWorkGroups[2], 1u, 1u))))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (_GLF_IDENTITY(gl_NumWorkGroups[1], uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups[1], max(gl_NumWorkGroups[1], gl_NumWorkGroups[1])), 0u, 1u, 1u)))) | (_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) | (gl_NumWorkGroups[1])))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(uvec4(gl_NumWorkGroups, 0u)))))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), 0 + (int(ivec4(2, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))]))))))) | (gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(90.67), 0.0 + (_GLF_FUZZED(90.67)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(218.408)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-30.67))), injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true), false, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-59.46), _GLF_FUZZED(4.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(-200.727, 1.8)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(80.48))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log2(-34.63)) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false)))))))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true)) || _GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, sin(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-33.19))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) || false))) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size) | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), _GLF_IDENTITY(clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), (true ? _GLF_IDENTITY(clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), (clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(87967u, 29523u, 147875u)))))))) : subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))))), (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(_GLF_IDENTITY(55381u, (55381u) >> 0u), 0u, 1u), uvec3(55381u, 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(_GLF_IDENTITY(55381u, (55381u) >> 0u), 0u, 1u), uvec3(55381u, 0u, 1u))))), (_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(_GLF_IDENTITY(55381u, (55381u) >> 0u), 0u, 1u), uvec3(55381u, 0u, 1u)))))) / 1u)) | (_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(_GLF_IDENTITY(55381u, (55381u) >> 0u), 0u, 1u), uvec3(55381u, 0u, 1u)))))))) : subgroup_size))))) * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, 0u + (1u)))) & 1u)) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 1u), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), (_GLF_FUZZED(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 1u), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))))))) - 0u) : subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u)))))) : subgroup_size))))) * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, 0u + (1u)))) & _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) | (clamp(1u, 1u, 1u)))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(55381u, uint(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), clamp(_GLF_IDENTITY(uvec3(55381u, 0u, 1u), max(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u))), uvec3(55381u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), uvec3(55381u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))) : subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u | (55381u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(55381u, ~ (~ (_GLF_IDENTITY(55381u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(55381u, 0u ^ (55381u))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (_GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (_GLF_IDENTITY(55381u, 0u ^ (55381u))) | (_GLF_IDENTITY(55381u, 0u ^ (55381u)))) : _GLF_FUZZED(subgroup_id)))) << 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (_GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(55381u, 0u ^ (55381u)), (_GLF_IDENTITY(55381u, 0u ^ (55381u))) | (_GLF_IDENTITY(55381u, 0u ^ (55381u)))) : _GLF_FUZZED(subgroup_id)))) << 0u), 1u)))), 0u)))))))), 0u, 1u), clamp(uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u), uvec3(55381u, 0u, 1u)))))) : subgroup_size))))) * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | (0u)) + (1u)))) & 1u)) + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, (1u | 0u)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), max((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), min(_GLF_IDENTITY(0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u)))), 0u + (0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) << 0u, (true ? _GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) / 1u) : _GLF_FUZZED(num_workgroup))), ((subgroup_local_id) << 0u) | _GLF_IDENTITY(((subgroup_local_id) << 0u), max(((subgroup_local_id) << 0u), _GLF_IDENTITY(((subgroup_local_id) << 0u), (((subgroup_local_id) << 0u)) | (((subgroup_local_id) << 0u))))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) * 1u))))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), min(_GLF_IDENTITY(0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), 0u + (0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) | _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id) << 0u), max(((subgroup_local_id) << 0u), _GLF_IDENTITY(((subgroup_local_id) << 0u), max(((subgroup_local_id) << 0u), ((subgroup_local_id) << 0u))))), max(((subgroup_local_id) << 0u), _GLF_IDENTITY(((subgroup_local_id) << 0u), (((subgroup_local_id) << 0u)) | (((subgroup_local_id) << 0u))))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) * 1u, max((1u) * 1u, (1u) * 1u))))))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size)) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 1u, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec4(virtual_gid, 0u, 1u, 0u)))))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)) && true)))), false || (! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && true) || _GLF_IDENTITY(false, bool(bvec2(false, true))), bool(_GLF_IDENTITY(bool((! (true)) || false), (_GLF_IDENTITY(bool((! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), ! (_GLF_IDENTITY(! (bool(bvec2((true), true))), true && (! (bool(bvec2((true), _GLF_IDENTITY(true, true && (true))))))))))) || false), true && (bool((! (true)) || false)))) || false))))), bool(bool((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, bool(_GLF_IDENTITY(bool((! (true)) || false), (_GLF_IDENTITY(bool((! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), ! (_GLF_IDENTITY(! (bool(bvec2((true), true))), true && (_GLF_IDENTITY(! (bool(bvec2((true), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2((true), true)))), (! (! (bool(bvec2((true), true))))) && true))))))))) || false), true && (bool(_GLF_IDENTITY((! (true)) || false, bool(bool((! (true)) || false))))))) || false))))))))), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false), (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) && true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) && true)), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_IDENTITY(false, false || (false)))))) && true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)), false, true)))))))))) && true)), true, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
}
