#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987))), min(vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)))))))), vec2(_GLF_FUZZED(9.4), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))], _GLF_FUZZED(-6998.5987)), vec2(0.0, 0.0) + (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-6998.5987)))))), vec2(_GLF_FUZZED(9.4), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), false))), true, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-6998.5987)))))), vec2(_GLF_FUZZED(9.4), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, true && (false)))), true, false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4(max(injectionSwitch, injectionSwitch), sqrt(1.0), 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY((-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(min((-84.99 / _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(min((-84.99 / _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(-4542.6621), _GLF_FUZZED(-8342.9124)), vec2((min((-84.99 / _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], (min((-84.99 / _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), bvec2(true, true))), min((-84.99 / _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY((-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((-84.99 / _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(float(127477u)), _GLF_FUZZED(178.655)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[0], clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), injectionSwitch[1])))))[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[1]), bvec2(true, true)))), (-84.99 / _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))), true))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))), false, _GLF_IDENTITY(false, true && (false)), true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) && true)))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false || (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), (! (! (false))) || false))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)))))), bool(bvec4((! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, (false) || false), false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true)))))) && true), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), (bool(bvec4((false), true, false, false))) && true)), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && ((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))), true && ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))), true))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))), false, _GLF_IDENTITY(false, true && (false)), true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) && true)))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false || (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), (! (! (false))) || false))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)))))), bool(bvec4((! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, (false) || false), false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true)))))) && true), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), (bool(bvec4((false), true, false, false))) && true)), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && ((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))), true && ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))), false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))), true))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))), false, _GLF_IDENTITY(false, true && (false)), true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) && true)))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false || (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), (! (! (false))) || false))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)))))), bool(bvec4((! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, (false) || false), false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true)))))) && true), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), (bool(bvec4((false), true, false, false))) && true)), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && ((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))), true && ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))), true))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))), false, _GLF_IDENTITY(false, true && (false)), true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) && true)))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false || (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), (! (! (false))) || false))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true)))))))))) && true)))))), bool(bvec4((! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (! (! (! (false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, (false) || false), false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))))))), _GLF_IDENTITY(false, (false) && true)))))) && true), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), (bool(bvec4((false), true, false, false))) && true)), ! (! (! (false)))))))), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && ((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))), true && ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))), bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))) && true))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))) && true))), (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))) && true)))) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))), false || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), min(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u))))))))), 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u))))))), clamp(uint(uvec3((gl_WorkGroupSize.x), _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), 1u)), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(182020u, 31865u, 148393u)) : _GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(uvec4(uvec3((gl_WorkGroupSize.x), 1u, 1u), 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u)))), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u))), (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), 1u, 1u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u))))))), clamp(uint(uvec3((gl_WorkGroupSize.x), _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), 1u)), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(182020u, 31865u, 148393u)) : _GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(uvec4(uvec3((gl_WorkGroupSize.x), 1u, 1u), 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u)))), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u))), (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), 1u, 1u))))))) : _GLF_FUZZED(subgroup_size))), ((_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) / 1u) : _GLF_FUZZED((~ num_workgroup))))), 1u, 1u)))))) | ((_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), ~ (~ (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))))), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))), 1u, 1u))))))) | (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))) + 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)), (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))) + 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(0u, 0u)), 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), max(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))))) | _GLF_IDENTITY((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize))))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize))))), ((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 0u, 0u) ^ (((gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)), 1u)))) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(0u, 0u)), 0u, 0u)) + uvec3(0u, 0u, 0u))).x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) * 1u)))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), _GLF_IDENTITY((0u ^ (gl_WorkGroupSize.x)) ^ 0u, ((0u ^ (gl_WorkGroupSize.x)) ^ 0u) + 0u))), ~ (~ ((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (gl_WorkGroupSize.x))), _GLF_IDENTITY((0u ^ (gl_WorkGroupSize.x)) ^ 0u, max((0u ^ (gl_WorkGroupSize.x)) ^ 0u, (0u ^ (gl_WorkGroupSize.x)) ^ 0u))))))))), gl_WorkGroupSize.x))))) + 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), min(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u))))))))), 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u))))))), clamp(uint(uvec3((gl_WorkGroupSize.x), _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), 1u)), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(182020u, 31865u, 148393u)) : _GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(uvec4(uvec3((gl_WorkGroupSize.x), 1u, 1u), 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u)))), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u))), (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), 1u, 1u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (uvec3((gl_WorkGroupSize.x), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), 1u))))))), clamp(uint(uvec3((gl_WorkGroupSize.x), _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), 1u)), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(182020u, 31865u, 148393u)) : _GLF_IDENTITY(uvec3((gl_WorkGroupSize.x), 1u, 1u), uvec3(uvec4(uvec3((gl_WorkGroupSize.x), 1u, 1u), 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u)))), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u))), (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(uint(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x), 1u, 1u))))))) : _GLF_FUZZED(subgroup_size))), ((_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) / 1u) : _GLF_FUZZED((~ num_workgroup))))), 1u, 1u)))))) | ((_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), ~ (~ (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u))))), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)), uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))))), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))), 1u, 1u))))))) | (uint(uvec3((gl_WorkGroupSize.x), 1u, 1u)))))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))) + 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)), (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))) + 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(0u, 0u)), 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), (((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), max(((gl_WorkGroupSize)), ((gl_WorkGroupSize))))))) | _GLF_IDENTITY((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize))))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize))))), ((_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 0u, 0u) ^ (((gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)), 1u)))) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(0u, 0u)), 0u, 0u)) + uvec3(0u, 0u, 0u))).x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) * 1u)))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), _GLF_IDENTITY((0u ^ (gl_WorkGroupSize.x)) ^ 0u, ((0u ^ (gl_WorkGroupSize.x)) ^ 0u) + 0u))), ~ (~ ((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (gl_WorkGroupSize.x))), _GLF_IDENTITY((0u ^ (gl_WorkGroupSize.x)) ^ 0u, max((0u ^ (gl_WorkGroupSize.x)) ^ 0u, (0u ^ (gl_WorkGroupSize.x)) ^ 0u))))))))), gl_WorkGroupSize.x))))) + 0u), 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, sqrt(0.0), 1.0, 1.0, sqrt(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || (bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_DEAD(false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2719.5055), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, false))).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_DEAD(false))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), false), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (gl_WorkGroupID.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_local_id + 1))))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, false)), false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1]))))) - vec2(0.0, 0.0)).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
