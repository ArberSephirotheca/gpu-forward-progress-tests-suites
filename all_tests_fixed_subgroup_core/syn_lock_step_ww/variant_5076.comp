#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch[1]))))))) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 0.0)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch)).y)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-45.78), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(805.721)), bvec2(true, false))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch)).y, true)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch)).y, true)))))))))))), true)), (bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-451.805, 1.9)))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))) * vec2(1.0, 1.0))), injectionSwitch)).y)))))), true))) && true))))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), float(mat3x2(float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0))))))))))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)), false, true)))))), false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))).x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-6.1)), bool(false)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), (vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(3.1)), bvec2(false, false))), min(injectionSwitch, injectionSwitch)))).y)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(8.2)), bool(false)))))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), true, false, false)))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))) - sqrt(vec2(0.0, 0.0)))), injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) - sqrt(vec2(0.0, 0.0)))), injectionSwitch)).y)))) || false), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false)), false || (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false)))))) || false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)), ! (! (bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true))), false)))), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (bool(bvec3(true, false, false))))))))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true), bvec3(bvec3(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true))))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true)))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true))), false, false)))), false, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true), bvec3(bvec3(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true))))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true)))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true))), false, false)))), false, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true), bvec3(bvec3(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))).y))), false, true))))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true)))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true))), false, false)))), false, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)))) || false), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)))), true)))))))))), (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true)))), false))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, false, false))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0)) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))) && ((injectionSwitch.x > injectionSwitch.y)))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-52.08)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(721.207)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y, (false ? _GLF_FUZZED(-27.82) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y)))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(174.017)), float(1.0), bool(true)))) < injectionSwitch.y)))))), true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(0.0))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))), 0.0))) * 1.0, ((float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))), 0.0))) * 1.0) / cos(0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)) : _GLF_FUZZED(3869.7454))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0)))))), 1.0, 1.0, 0.0))) / cos(log(1.0))), (float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6773.4557) : 1.0)), 1.0)))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-3.6) : _GLF_IDENTITY(min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 0.0 + (min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))))))), 0.0))) * 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)) : _GLF_FUZZED(3869.7454))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, 0.0)), (float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(108.494))))))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))), 0.0))) * 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)) : _GLF_FUZZED(3869.7454))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, abs(1.0)), (true ? mat3(1.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat3(93.42, -7.4, 3.4, -9.2, -742.312, 3.6, -61.69, -9.6, 87.98)))))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, 0.0)), (float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))) - 0.0)))) + 0.0)), 0.0))) * 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)) : _GLF_FUZZED(3869.7454))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, 0.0)), (float(mat2(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat4x2(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), cos(0.0), 1.0, tan(0.0), 1.0, 0.0))), min(float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) * 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)) : _GLF_FUZZED(3869.7454))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(tan(0.0), 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(tan(0.0), 1.0), mix(vec2((vec2(tan(0.0), 1.0))[0], (vec2(tan(0.0), 1.0))[1]), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(-6.8)), bvec2(false, false))))))), log(1.0), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), bool(bvec2(false || _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), bool(bvec4(! (true && (_GLF_DEAD(false))), false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))))) && true)))), true))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(false, true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(false, true))))))) && true)) && true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(-3048.2196)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(7.4) : (injectionSwitch)[1]))), bvec2(true, true))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, ! (! (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, false), true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3509.6416)), vec2(_GLF_FUZZED(-573.549), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(bvec2(bool(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))), bool(bool(! _GLF_IDENTITY((false), true && ((false)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), bool(bool(! _GLF_IDENTITY((false), true && ((false))))))))))), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), bool(bool(bool((! (_GLF_IDENTITY(false, false || (false))))))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((! (_GLF_IDENTITY(false, false || (false)))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0)) * mat3(1.0)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY((false), ! (! ((false)))) && true) || _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))), true && (bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))), ((_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))), true && (bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false, bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(bool(_GLF_IDENTITY(false, false || (false))), false)))))), true && (bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)), clamp(float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)), float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)), float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)))))) + 0.0) < injectionSwitch.y)))))) || false)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, false || (true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), true && (bool((false) && true)))))), true, true)))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), true, true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), true, true)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), true, true)))))))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))))))))), false))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, _GLF_IDENTITY(true, ! (! (true)))))) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY((false), true && ((false)))) || false), _GLF_IDENTITY(false, bool(bool(false))), true))) && true), true, true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))), false))))) || false))) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))) && true), true, true))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false), false, true))) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false)) || false), false, true))) && true), true, true))), true)))))))))))), true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), true, false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), true, false))), true)))))), true))))))) && true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(log(1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(-4.8))), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.90)), vec2(_GLF_FUZZED((-5.2 - -338.496)), (injectionSwitch)[1]), bvec2(false, true))).y), float(injectionSwitch.y)))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(injectionSwitch.y), float(injectionSwitch.y)))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y))))))), mix(float(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y))))))), 1.0 * (clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y)))))))))), float(_GLF_FUZZED(9.3)), bool(false)))) : _GLF_FUZZED(32.94)))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(log(1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(-4.8))), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.90)), vec2(_GLF_FUZZED((-5.2 - -338.496)), (injectionSwitch)[1]), bvec2(false, true))).y), float(injectionSwitch.y)))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(injectionSwitch.y), float(injectionSwitch.y)))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y))))))), mix(float(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y))))))), 1.0 * (clamp(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-218.246)), bvec2(false, false))).y), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(injectionSwitch.y)))))))))), float(_GLF_FUZZED(9.3)), bool(false)))) : _GLF_FUZZED(32.94)))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), true)), false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! _GLF_IDENTITY((! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ! (! ((! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-30.78), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(9.1)), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)) + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) - 0u, min((workgroup_base) - 0u, _GLF_IDENTITY((workgroup_base) - 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((workgroup_base) - 0u, uint(uvec4((workgroup_base) - 0u, 0u, 1u, 0u))), 1u)), (uint(uvec2(_GLF_IDENTITY((workgroup_base) - 0u, uint(uvec4((workgroup_base) - 0u, 0u, 1u, 0u))), 1u))) | (uint(uvec2(_GLF_IDENTITY((workgroup_base) - 0u, uint(uvec4((workgroup_base) - 0u, 0u, 1u, 0u))), 1u))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_base) - 0u, ~ (_GLF_IDENTITY(~ ((workgroup_base) - 0u), (_GLF_IDENTITY(~ ((workgroup_base) - 0u), min(~ ((workgroup_base) - 0u), ~ ((workgroup_base) - 0u)))) ^ 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? uvec3((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) - _GLF_IDENTITY(0u, max(0u, 0u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2306.6058)), float(1.0), bool(true))), 1.0)), injectionSwitch.y))) : _GLF_FUZZED(uvec3(44728u, 30245u, 49471u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))))) * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))))), (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))))))) || false))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(atomicExchange(subgroup_local_id, num_workgroup)))) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2271.3722)), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0)), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec2(-13.57, 0.3).r))), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-627.274, (-627.274) + abs(0.0)), 83.93, 83.52, 8.1)) : vec4(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)), max(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0))))), 1.0, 1.0))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))), vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0))))), (float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(-939.898, 639.266)) : 0.0)), 1.0)))))) - 0.0), float(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(538.297)), bool(_GLF_IDENTITY(false, false || (false))))), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2271.3722)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec2(-13.57, 0.3).r))), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED((- -71.40))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0, 1.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6336.0358)), float(1.0), bool(true))), 0.0, 0.0)), max(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0))))), 1.0, 1.0))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))), vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0))))), (float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.8)), float(1.0), bool(true)))), clamp(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) - 0.0), float(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))))), float(_GLF_FUZZED(538.297)), bool(_GLF_IDENTITY(false, false || (false))))), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))) : _GLF_FUZZED(17.30)))))), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2271.3722)), float(0.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))))))))), (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2271.3722)), float(0.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))))), false)))), true))), true)))))))))))))), 1.0)), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec2(_GLF_IDENTITY(-13.57, float(mat2x4(-13.57, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.3).r))), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat3x4(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), 0.0, 0.0)))))), exp(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), mat3x4(mat4(mat3x4(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), exp(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))))), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, _GLF_IDENTITY(8.1, (_GLF_IDENTITY(8.1, (_GLF_IDENTITY(8.1, float(mat3x4(8.1, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0)) * 1.0))) : vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)), max(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0))))), 1.0, 1.0))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(252.036)), float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) + 0.0))))))), vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(-3.0)), float((injectionSwitch.y) - 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, 1.0))))), (float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) - 0.0), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), clamp(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-627.274, 83.93, 83.52, 8.1)) : vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))))))), float(_GLF_FUZZED(538.297)), bool(_GLF_IDENTITY(false, false || (false))))), float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) / 1)), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(333.977)), bool(false))), min(false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(333.977)), bool(false))), false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(333.977)), bool(false))))))), 1.0))), 1.0, log(1.0), 1.0, 0.0, 0.0, exp(0.0))), mix(float(_GLF_FUZZED((0.9 + -39.90))), float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, exp(0.0))), float(mat2x3(float(mat4x3(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0))))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, log(1.0), 1.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(true)))), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat4(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-51.12) : 1.0)) : _GLF_FUZZED(32.12)))), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0), (mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8124.7247))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-17.08, (_GLF_IDENTITY(-17.08, max(-17.08, _GLF_IDENTITY(-17.08, min(-17.08, -17.08))))) - sqrt(sin(0.0))), 433.117).g)), bool(false))), 1.0)), float(mat4(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0)) - mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3(mat4(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true, true, false)), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-7833.8377) : log(1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-647.736)), bool(false))), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-7.1)), float(float(1.0)), bool(true))), mix(float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-7.1)), float(float(1.0)), bool(true)))), float(_GLF_FUZZED(vec2(9060.5963, 82.70).r)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, sqrt(log(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(0.2), float(vec2(_GLF_FUZZED(0.2), 0.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))))))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))) && true)), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))), true, false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))), true, false)))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))), true, false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), max((_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
