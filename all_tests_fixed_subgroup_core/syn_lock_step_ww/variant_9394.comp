#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(70.24))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-14.35), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-87.33 * 805.433))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-8751.4896))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / cos(_GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8751.4896), max(_GLF_IDENTITY(_GLF_FUZZED(-8751.4896), min(_GLF_FUZZED(-8751.4896), _GLF_FUZZED(-8751.4896))), _GLF_FUZZED(-8751.4896))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-381.055)), bool(false))), injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(376.822)), vec2(_GLF_FUZZED(221.555), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u + _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) >> 0u), _GLF_IDENTITY(uint(uvec3(0u + _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) >> 0u), 0u, _GLF_IDENTITY((1u ^ 0u), ~ (~ ((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 1u * (_GLF_IDENTITY((0u), ((0u)) | 0u))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))))), (true ? _GLF_IDENTITY(uint(uvec3(0u + _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) >> 0u), 0u, _GLF_IDENTITY((1u ^ 0u), ~ (~ ((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 1u * (_GLF_IDENTITY((0u), ((0u)) | 0u))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))))), (uint(uvec3(0u + _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) >> 0u), 0u, _GLF_IDENTITY((1u ^ 0u), ~ (~ ((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 1u * (_GLF_IDENTITY((0u), ((0u)) | 0u))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))))))) + 0u) : _GLF_FUZZED(subgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 1.0, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), bool(false)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (false ? _GLF_FUZZED(-5.5) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) / sqrt(1.0)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))) / 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))) * 1.0))))) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), float(_GLF_FUZZED(50.70)), bool(false)))) || false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (false ? _GLF_FUZZED(-5.5) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) / sqrt(1.0)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))) / 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), _GLF_IDENTITY(bool(false), (bool(false)) || false))) * 1.0))))) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), float(_GLF_FUZZED(50.70)), bool(false)))) || false)))), true)))) || false)), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.70)), bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false)))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9326.3364, 466.500, -65.99).p)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.4) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), _GLF_IDENTITY(uint(uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))), workgroup_id, workgroup_id)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(workgroup_size * workgroup_id, 1u)), (uint(uvec2(workgroup_size * workgroup_id, 1u))) - 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), _GLF_IDENTITY(true, false || (true)), true, true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true, true))), true, true, true))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1317.8455) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0))))), 1.0, 0.0)), clamp(float(vec3(injectionSwitch.x, 1.0, 0.0)), float(vec3(injectionSwitch.x, 1.0, 0.0)), float(vec3(injectionSwitch.x, 1.0, 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), 0u | (0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), 0u | ((_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u))))) * subgroup_size), 0u | (0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))) ^ 0u)) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), _GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))))), ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), 0u | (0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) - 0u))) * subgroup_size)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (true ? uvec2(workgroup_base, 1u) : _GLF_FUZZED(uvec2(50167u, 10672u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (true ? uvec2(workgroup_base, 1u) : _GLF_FUZZED(uvec2(50167u, 10672u))))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, (1u) >> (0u | 0u))), (true ? uvec2(workgroup_base, 1u) : _GLF_FUZZED(uvec2(50167u, 10672u)))))) ^ 0u)) + 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ _GLF_IDENTITY((~ (subgroup_id)), clamp(_GLF_IDENTITY((~ (subgroup_id)), uint(uint((~ (subgroup_id))))), (~ (subgroup_id)), (~ (subgroup_id)))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0)), injectionSwitch.x)) ^ _GLF_IDENTITY((uint(5u)), 0u | ((uint(5u))))), uint(5u)), (clamp(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (5u) | (5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), min(_GLF_IDENTITY(5u, (5u) | (5u)), _GLF_IDENTITY(5u, (5u) | (5u)))))))), clamp(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (5u) | (5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), min(_GLF_IDENTITY(5u, (5u) | (5u)), _GLF_IDENTITY(5u, (5u) | (5u)))))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (5u) | (5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), min(_GLF_IDENTITY(5u, (5u) | (5u)), _GLF_IDENTITY(5u, (5u) | (5u))))))))) - 0u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (5u) | (5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), min(_GLF_IDENTITY(5u, (5u) | (5u)), _GLF_IDENTITY(5u, (5u) | (5u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (5u) | (5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), min(_GLF_IDENTITY(5u, (5u) | (5u)), _GLF_IDENTITY(5u, (5u) | (5u)))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)) | 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(5u))), uint(5u))) | (clamp(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), max(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))))), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(round(length(normalize(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7696.8828)), float(1.0), bool(true))), 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), 1.0)))))), 1.0, abs(1.0))), clamp(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0))), _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0))), (float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(true))))))) / 1.0), float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0)))))), 1.0)), dot(vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch.x, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), dot(vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0))))))) ^ (uint(5u))), uint(5u))))), uint(5u))))), (uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) | (0u))))))) >> 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || false)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), false))), true))))))) && true))), true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false || ((false)), false || (false || ((false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false || ((false)), false || (false || ((false)))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false || ((false)), false || (false || ((false)))))), true && (! ((_GLF_IDENTITY(false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false || (false || ((false))))))))) && true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6239.2139)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.7))), 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch)), vec2(mat3x4((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.7))), 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(tan(0.0), 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0)), 0.0, 1.0)))), injectionSwitch)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(96.56)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x), bool(true))), mix(float(_GLF_FUZZED(-79.57)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(96.56)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x), bool(true)))), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(96.56)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), injectionSwitch)))).x), bool(true))), mix(float(_GLF_FUZZED(-79.57)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(96.56)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x), bool(true)))), bool(true))) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (false ? _GLF_FUZZED(27793) : _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))) : _GLF_FUZZED(-83193))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), max(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(8386) : 1, int(ivec2(false ? _GLF_FUZZED(8386) : 1, 1))))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1))))))))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), 0 ^ ((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (true ? _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) : _GLF_FUZZED(58690)))))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1)))))))), max(_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), 0 ^ ((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (true ? _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) : _GLF_FUZZED(58690)))))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1)))))))), ((~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), 0 ^ ((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (true ? _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) : _GLF_FUZZED(58690)))))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1))))))))) >> 0), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), 0 ^ ((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (true ? _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) : _GLF_FUZZED(58690)))))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1))))))))))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), max(~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), ~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(8386, (8386) / int(_GLF_ONE(1.0, injectionSwitch.y)))) : 1)), 1)))) / ivec4(1, 1, 1, 1))))), (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) >> 0))) | ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(8386, (8386) / int(_GLF_ONE(1.0, injectionSwitch.y)))) : 1)), 1)))) / ivec4(1, 1, 1, 1)))))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (1) | (1)), 1)), 1)))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))) >> 0), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, ~ (~ (6))), 6))), int(6))) ^ (int(_GLF_IDENTITY(1, (1) | 0)))))), 1, 1)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), clamp(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(0, max(0, 0)) + (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))) - 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), 1))))))))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1, 1, 1, 1), max(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))) / ivec4(1, 1, 1, 1)), (ivec4(1, 1, 1, 1)) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(3), ivec4(3))))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1, (0 << _GLF_IDENTITY(int(6), int(6)))))))), 1)))) / ivec4(1, 1, 1, 1)))))), ~ (~ ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1, (0 << _GLF_IDENTITY(int(6), int(6)))))))), 1)))) / ivec4(1, 1, 1, 1))))))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)))))))) - 0), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-96847)))) - 0))))))))))))) | ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), ~ (~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))), min(~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (false ? _GLF_FUZZED(8386) : 1)), 1))), (_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(8386) : 1)), 1))), min(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), _GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(8386) : 1, clamp(false ? _GLF_FUZZED(8386) : 1, false ? _GLF_FUZZED(8386) : 1, _GLF_IDENTITY(false ? _GLF_FUZZED(8386) : 1, (false ? _GLF_FUZZED(8386) : 1) | (false ? _GLF_FUZZED(8386) : 1)))))), 1))), max(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1))), ivec4(1, 1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(8386) : 1)), 1)))))))) / ivec4(1, 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))) - 0), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), int(ivec3(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (true ? int(ivec4(1, 1, 1, 1)) : _GLF_FUZZED(91879))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1), min(clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1), clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1)))), 1))))))))))))))), 1))) - 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))))) - _GLF_IDENTITY(0, ~ (~ (0))))) % subgroup_size) + 0u));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) - 0u)], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, false)))), true)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true))))))) || false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) * 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
