#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ! (_GLF_IDENTITY(! ((bool(false)) || false), false || (! ((bool(_GLF_IDENTITY(false, true && (false)))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))) || (_GLF_DEAD(false)))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false || (_GLF_DEAD(false)))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.7)), float(injectionSwitch.y), bool(true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(60.19)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.2)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((9.5 / -423.217), min((9.5 / -423.217), _GLF_IDENTITY((9.5 / -423.217), max((9.5 / -423.217), (9.5 / -423.217))))))), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat2(mat2(injectionSwitch, 1.0, 0.0))))) : _GLF_FUZZED(injectionSwitch)))).y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9336.2222), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1105.9385)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, log(1.0), 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, log(1.0), 0.0, 1.0, 0.0, tan(0.0), 1.0))))), min(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, log(1.0), 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, 0.0 + (1.0)), log(1.0), 0.0, 1.0, 0.0, tan(0.0), 1.0))))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, log(1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5077.8671), _GLF_FUZZED(5.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 1.0, log(1.0), 0.0, 1.0, 0.0, tan(0.0), 1.0))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec4(! (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, true, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8488.4863), _GLF_FUZZED(-17.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) * mat2(1.0)).y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-17.96) : injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))))))) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) * mat2(1.0)).y, (false ? _GLF_FUZZED(-17.96) : injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-17.96) : injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (false), true, false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))), true, false), bvec3(bvec3(bvec3(! (false), true, false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), false), true, true))))), true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, false)))))) || false)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))), true, false), bvec3(bvec3(bvec3(! (false), true, false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), (bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true))) && true))))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))), false || (true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), true, true))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))))))))))), false), true, true))))), true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, false)))))) || false)))))), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false)), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false)), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false))) && true))))))))), true, false), bvec3(bvec3(bvec3(! (false), true, false)))))))) && true)), true, false))), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-17.96) : injectionSwitch.y))))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(179232u, 67618u, 74769u))))) ^ uvec3(0u, 0u, 0u)))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), (_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))))))) - uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(6609u, 155114u, 123239u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (~ (gl_WorkGroupSize))))))), (false ? _GLF_FUZZED(uvec3(99164u, 70174u, 33870u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(164932u, 40296u, 64062u))))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(84377u, 184294u, 10198u) + uvec3(23906u, 10565u, 55574u))) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))))[2])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(179232u, 67618u, 74769u))))) ^ uvec3(0u, 0u, 0u)))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), (_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))))))) - uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(6609u, 155114u, 123239u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (~ (gl_WorkGroupSize))))))), (false ? _GLF_FUZZED(uvec3(99164u, 70174u, 33870u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(164932u, 40296u, 64062u))))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(84377u, 184294u, 10198u) + uvec3(23906u, 10565u, 55574u))) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))))[2])).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(179232u, 67618u, 74769u))))) ^ uvec3(0u, 0u, 0u)))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), (_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))))))) - uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(6609u, 155114u, 123239u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (~ (gl_WorkGroupSize))))))), (false ? _GLF_FUZZED(uvec3(99164u, 70174u, 33870u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(164932u, 40296u, 64062u))))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(84377u, 184294u, 10198u) + uvec3(23906u, 10565u, 55574u))) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))))[2])).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, 143210u, 145801u)), (true ? _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)) : _GLF_FUZZED(uvec3(63647u, 167980u, 123253u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(179232u, 67618u, 74769u))))) ^ uvec3(0u, 0u, 0u)))))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)), 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), (_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), max(_GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u)), _GLF_FUZZED(uvec3(50288u, _GLF_IDENTITY(143210u, min(143210u, 143210u)), 145801u))))))) - uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(6609u, 155114u, 123239u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (~ (gl_WorkGroupSize))))))), (false ? _GLF_FUZZED(uvec3(99164u, 70174u, 33870u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))), clamp((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(164932u, 40296u, 64062u))))))), (~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(50288u, 143210u, 145801u)))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(84377u, 184294u, 10198u) + uvec3(23906u, 10565u, 55574u))) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))))[2])).x, 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(144.147, (true ? _GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-346.526)))) : injectionSwitch.x, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(144.147, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) : _GLF_FUZZED(-346.526)))) : injectionSwitch.x, max(false ? _GLF_FUZZED(_GLF_IDENTITY(144.147, (true ? _GLF_IDENTITY(_GLF_IDENTITY(144.147, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-346.526)))) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(144.147, (true ? _GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-346.526)))) : injectionSwitch.x, float(mat3x2(false ? _GLF_FUZZED(_GLF_IDENTITY(144.147, (true ? _GLF_IDENTITY(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(144.147, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * (144.147)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-346.526)))) : injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(91.55)), bool(false))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), true)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, false)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), ! (! ((! (bool(bvec3(false, true, false))))))))))) && true), false, true))))) && true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.5)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_id * subgroup_size), 1u)), (_GLF_IDENTITY(uint(uvec2((subgroup_id * subgroup_size), 1u)), (uint(uvec2((subgroup_id * subgroup_size), 1u))) + 0u)) - 0u)) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) / 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u)))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) : 1u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size)) | (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))), true, true)))))), (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true)) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(1)), clamp(min(uint(1), uint(1)), min(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1))), uint(1)), min(uint(1), uint(1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-24.57)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(52.29) : injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(12.78), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(77.76)), bvec2(true, false))).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-24.57)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false)), true), false))), true, true))))), false, false))), true, false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), true, false)))))))), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, (2) / 1), 2), max(max(_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp((2), (2), (2))) / 1), 2), max(_GLF_IDENTITY(2, (2) / 1), 2))))))), _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
