#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(75756))), bool(false))), injectionSwitch.x)), 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(266.674))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(266.674))), injectionSwitch.x)) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, log(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, log(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, log(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(266.674))), injectionSwitch.x)) > injectionSwitch.y))))) || false) && true))))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || _GLF_IDENTITY(false, ! (! (false))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), (uvec3(uvec4(gl_WorkGroupID, 0u))) - uvec3(0u, 0u, 0u))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : workgroup_size), clamp((false ? _GLF_FUZZED(workgroup_size) : workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : workgroup_size)))), max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (workgroup_size)), (~ _GLF_IDENTITY((~ (workgroup_size)), _GLF_IDENTITY(uint(uint((~ (workgroup_size)))), min(_GLF_IDENTITY(uint(uint((~ (workgroup_size)))), 0u | (uint(uint((~ (workgroup_size)))))), uint(uint((~ (workgroup_size)))))))) - 0u)), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))), subgroup_id)) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), subgroup_local_id)), (subgroup_local_id) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (true ? workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) : _GLF_FUZZED(atomicXor(num_workgroup, workgroup_id))))) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))), subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) ^ 0u) + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) + 1) % subgroup_size)))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) - 0), 64, _GLF_IDENTITY(64, ~ (~ (64))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), true)), false || (bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true), true)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))))))))))))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), true, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), true, true), false))))) || false)))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))) || false))))))))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))) && true), ! (! (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))), true && (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))), true && (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))))))))))) && true), bool(_GLF_IDENTITY(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), bool(bool(! ((true) || false))))))))))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), bool(bool(! ((true) || false)))))))))))))) && true), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(! (! ((true) || false)), (! (! ((true) || false))) && true))))))) && true), true, true), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(! (! ((true) || false)), (! (! ((true) || false))) && true))))))) && true), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(! (! ((true) || false)), (! (! ((true) || false))) && true))))))) && true), true, true), true)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(! (! ((true) || false)), (! (! ((true) || false))) && true))))))) && true), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(! (! ((true) || false)), (! (! ((true) || false))) && true))))))) && true), true, true), true)), false)))))))))))))))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || false)) && true)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) - 0u)) | (subgroup_local_id + 1), (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) - 0u)) | (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))), _GLF_IDENTITY(((subgroup_local_id + 1) | (subgroup_local_id + 1)) << 0u, min(((subgroup_local_id + 1) | (subgroup_local_id + 1)) << 0u, ((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) << 0u)))))) < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-48.15)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), float(_GLF_FUZZED(-345.227)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(572.079)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.1) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-792.393) : injectionSwitch.y)))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(572.079)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.1) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-792.393) : injectionSwitch.y)))))))), max((_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(572.079)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.1) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-792.393) : injectionSwitch.y)))))))), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(572.079)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.1) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-792.393) : injectionSwitch.y)))))))))))) / 1.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true))))))))) || (! (! (bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true))))))))) || (! (! (bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.4) : injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(sqrt(0.0))))) || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))))))))) || (! (! (bool(_GLF_DEAD(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false)))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true)), true)))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && (true), true)))))), true), false)))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) && true))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) && (true), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))), (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (true), true)))))) && true)), true), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (! (! (bool(_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), true, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false), true, false))))))))) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)) && (true), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))), ! (! (bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)) && (true), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))), ! (! (bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)) && (true), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))), ! (! (bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)) && (true), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))), ! (! (bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true, true, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(true, false, false)), false, true), bvec3(bvec4(bvec3(bool(bvec3(true, false, false)), false, true), true)))))), (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), true)))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), true))))))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), false || ((true))), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))) && (true)))))), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec2(bool(bvec4(true, true, false, false)), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.0)), bool(false))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), true, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), true)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), true)), true, false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), true, false))))))))), true)))))))))), true), false)))))) && true)), true, true), false))))), false || (! (bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y)))))) && (true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))), false, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false)))), false, true))))), true, true))))))))))))), true, true), false))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((-3.0 * 5.6)))), _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true))))))))) || (! (! (bool(_GLF_DEAD(false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (! (! (bool(_GLF_DEAD(false)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false)))))), bool(bool(_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(false))))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x)) < injectionSwitch.y))))) && true))) && _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.6), _GLF_FUZZED(930.703)), bvec2(false, false))).x < injectionSwitch.y)) && (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && (true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-80.93, 91.16, 97.98).z), _GLF_FUZZED(-98.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)) && (true), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))), (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), true)))))) && true)), true), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), ! (! (! (bool(_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-203.713)), bool(false)))) + 0.0))) < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3252.7312)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec2(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x < injectionSwitch.y)) && (true), true))))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)) && (true), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true))), ! (! (bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true))))))))), true), false)))))), true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(true, false, false)), false, true), bvec3(bvec4(bvec3(bool(bvec3(true, false, false)), false, true), true)))))), (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (true), true)))))), true), false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0), float(_GLF_FUZZED(-6.8)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0), (false ? _GLF_FUZZED(mat3(-7.1, 7561.6536, -4948.9989, 8.3, 8.2, -1975.2244, -96.43, -5439.6467, 826.539)) : mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0), float(_GLF_FUZZED(-6.8)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0)))))))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), true, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), true, false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (true), true)), true, false))))))))), true)))))))))), true), false)))))) && true)), true, true), false))))), false || (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.79)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), true, true)))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false))))))), true, true), false))))), true && ((bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.79)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)))))), true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), true, true)))), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true)))))), true), false)), false))))))), true, true), false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
