#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(106303u)), _GLF_FUZZED(6.4)), bvec2(false, false))).y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-99.28, -7.6)))).x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) || _GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.15), _GLF_FUZZED(9809.3161)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec3(bvec3(bool(false), true, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), true)))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(8229.7523)), bvec2(false, false))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) / 1.0), 1.0, 1.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, sin(0.0), abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))) - 0.0))) || false))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), max(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) - 0.0))) || false)))), (((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), max(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) - 0.0))) || false))))) && true))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), false, true, false))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(_GLF_IDENTITY(1, max(1, 1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)))) | (uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 1, 0)))), (uint(1)) / 1u), (uint(1)) | (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)))))) >> 0u))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | (uint(_GLF_IDENTITY(1, max(1, 1))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)), (_GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)), ((false ? _GLF_FUZZED((subgroup_id ++)) : _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), 0u), (uvec2(uint(1), 0u)) | uvec2(0u, 0u)))))) * 1u)) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + 0u)))) | (uint(1))), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)), ((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1))) * _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | (uint(1))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) | (uint(1)))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)), (_GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1)), ((false ? _GLF_FUZZED((subgroup_id ++)) : uint(1))) * 1u)) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | (uint(1))), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) >> 0u))) + 0u)) ^ (0u & 148846u))))) : _GLF_FUZZED(8962u))) / _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(2.4)))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u)), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u)) ^ 0u)) | (1u)))), _GLF_IDENTITY(1u, (1u) - 0u))) << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), 0u ^ (_GLF_IDENTITY(~ (4u), _GLF_IDENTITY((~ (4u)) | 0u, ((~ (4u)) | 0u) | 0u))))))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), clamp(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))))))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), (~ (_GLF_IDENTITY(uint(5u), uint(5u)))) >> 0u)) / 1u), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_id)))), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(_GLF_IDENTITY(uint(5u), clamp(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), uint(5u))), uint(5u), uint(5u)))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), max((_GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(uint(5u), uint(5u)))) << 0u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(5u), uint(5u)))), 0u | ((~ (_GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))), clamp(uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(uvec2(5u, 1u)))), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | 0u)) | 0u)), uint(5u)))))))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))))) / 1u))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))) ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)))))))))))))))) : _GLF_FUZZED(next_virtual_gid)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(virtual_gid))), uint(4u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(virtual_gid))), uint(4u))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED((num_workgroup - workgroup_base))))), (true ? uint(4u) : _GLF_FUZZED(virtual_gid))), uint(4u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED((num_workgroup - workgroup_base))))), (_GLF_IDENTITY(true ? uint(4u) : _GLF_FUZZED(virtual_gid), (true ? uint(4u) : _GLF_FUZZED(virtual_gid)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(4u)))) >> 0u) ^ 0u) / 1u))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u))) << 0u), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, _GLF_IDENTITY(4u, max(4u, 4u))))) | (_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, (4u) ^ 0u))), 4u, 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - (0u ^ 0u))), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 0u, 1u, 0u)), (uint(uvec4(uint(4u), 0u, 1u, 0u))) - 0u)), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))) >> 0u) : _GLF_FUZZED(next_virtual_gid)))))) ^ 0u)), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(4u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(4u, 4u, _GLF_IDENTITY(4u, max(4u, 4u))), (clamp(4u, 4u, _GLF_IDENTITY(4u, max(4u, 4u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec4(uint(4u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec4(uint(4u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(uint(4u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(4u), uint(4u))))) >> 0u)))) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 0u)))) / 1u)), uint(4u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u)))) / 1u))) ^ 0u), 0u ^ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 0u)))) / 1u)), uint(4u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u)))) / 1u))) ^ 0u)))), uint(uvec4(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))), max((1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u)))) / 1u))) ^ _GLF_IDENTITY(0u, (0u) * 1u), 1u * ((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), (_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u)) >> 0u), uint(4u)))) / 1u))) ^ _GLF_IDENTITY(0u, (0u) * 1u))))), 1u, (0u | 0u), (0u ^ 1u))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(70.86), _GLF_FUZZED(7.5)), bvec2(false, false))))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, bool(_GLF_IDENTITY(bool((false) && true), false || (bool((false) && true)))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), min(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0))) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0))))))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (4))), 0 + (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, (4) >> 0)))), (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8464))), int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w))))), (~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(65417) : _GLF_IDENTITY(4, clamp(4, 4, 4))))) >> 0)))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), min((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (true ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(-49666)))))) : _GLF_FUZZED(ivec4(-48701, _GLF_IDENTITY(6922, clamp(_GLF_IDENTITY(6922, (6922) | 0), 6922, _GLF_IDENTITY(6922, (6922) ^ 0))), _GLF_IDENTITY(4407, (4407) ^ 0), 89119).w)))))) | (~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) >> 0))), int(int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) >> 0))))))), _GLF_IDENTITY((4), 0 ^ ((4))), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), int(_GLF_IDENTITY(ivec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(_GLF_IDENTITY(-48701, (_GLF_IDENTITY(-48701, max(-48701, -48701))) >> 0), 6922, 4407, 89119).w), 0, 0, 1), clamp(ivec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), 0, 0, 1), ivec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))))) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-48701, 6922, 4407, 89119).w, (false ? _GLF_FUZZED(-4174) : ivec4(-48701, 6922, 4407, 89119).w))), 0, 0, 1), ivec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(length(4674.1447)) : injectionSwitch.x)) < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.7)))) / determinant(mat4(abs(1.0), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), 0, 0, 1))))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ~ (~ ((~ (4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))))), (4) >> 0)))), _GLF_IDENTITY((4), max((4), (4))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-111.704)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)), 1)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-111.704)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)), 1)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w)))) ^ 0))), (~ _GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-39990) : ~ (4))))), _GLF_IDENTITY(4, (4) >> 0)))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w)))))) + 0), ~ _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) >> 0)))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-835.954))) < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w))))), (_GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) >> 0)))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), 1)), (int(ivec2(_GLF_FUZZED(ivec4(-48701, 6922, 4407, 89119).w), 1))) | 0)) ^ 0))))))) | (0 ^ 0))))), ~ (~ (4))))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (_GLF_IDENTITY(min(64, 64), ~ (~ (min(64, 64))))) ^ 0)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(log(cos(vec2(0.0, 0.0))), (log(cos(vec2(0.0, 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(log(cos(vec2(0.0, 0.0))), (log(cos(vec2(0.0, 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(log(cos(vec2(0.0, 0.0))), (log(cos(vec2(0.0, 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y), true, false)))))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-7197) : 0))));
 if(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(read_2) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec4(int(8), 0, 0, 1)))))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) ^ 0u), (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) / 1u)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) / 1u)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), _GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) + 0u)) | (uint(uvec3(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u ^ 1u))))))), 1u, 1u))))) : _GLF_FUZZED(subgroup_local_id)))))))) << 0u)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_2))))) == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) || false)) + 1) ^ (0u ^ 0u)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) + _GLF_IDENTITY(1, 1 * (1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
