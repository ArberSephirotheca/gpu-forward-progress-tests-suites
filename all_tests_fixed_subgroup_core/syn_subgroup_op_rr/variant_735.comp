#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 uvec4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
 uvec3 _f1;
 uvec3 _f2;
 uvec3 _f3;
 bvec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 bvec4 _f1;
 vec2 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat4x2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 ivec4 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_19 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 uvec3 _f3;
 _GLF_struct_18 _f4;
 uvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_12 {
 bool _f0;
 bool _f1;
 uvec3 _f2;
 vec3 _f3;
 uvec4 _f4;
 int _f5;
 vec2 _f6;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 _GLF_struct_12 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 uint _f1;
 mat2x3 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 mat3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_20 {
 uint workgroup_base;
 _GLF_struct_9 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 int _f1;
 mat2 _f2;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 uint subgroup_id;
 mat2x4 _f0;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 int _f0;
 uint _f1;
 uvec2 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 bool _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bool _f1;
 bvec3 _f2;
 uvec3 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat3 _f1;
 float _f2;
 uint virtual_gid;
 _GLF_struct_4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint workgroup_id;
 uvec3 _f1;
 uvec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(7.9, 9390.2197, true)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.07, 62.87)))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))) ? _GLF_FUZZED(mix(7.9, 9390.2197, true)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))) ? _GLF_FUZZED(mix(7.9, 9390.2197, true)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(7.9, 9390.2197, true)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy = _GLF_struct_replacement_7.GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.5)), bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), false))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_SubgroupID, mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_id, (_GLF_struct_replacement_6.subgroup_id) << 0u) : _GLF_FUZZED(183871u))), ~ (~ (_GLF_struct_replacement_6.subgroup_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.z = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), true && ((! (_GLF_IDENTITY(false, false || (false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), 0.0 + (_GLF_FUZZED((-5256.9275)))) : _GLF_FUZZED(-5605.7686)))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-31.33) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-31.33) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-31.33) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-31.33) : injectionSwitch.y, float(float(false ? _GLF_FUZZED(-31.33) : injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), max(_GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), clamp(_GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)))), _GLF_FUZZED((-5256.9275))))), bvec2(false, false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), max(_GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), clamp(_GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), clamp(_GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)))))), _GLF_FUZZED((-5256.9275))))), bvec2(false, false))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), max(_GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), clamp(_GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)))), _GLF_FUZZED((-5256.9275))))), bvec2(false, false))), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), max(_GLF_IDENTITY(_GLF_FUZZED((-5256.9275)), clamp(_GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)), _GLF_FUZZED((-5256.9275)))), _GLF_FUZZED((-5256.9275))))), bvec2(false, false))))).x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec2(true), gl_WorkGroupID.x, uvec3(1u), uvec3(1u));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y, (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y) | 0u)), (uint(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y, (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.y) | 0u))) ^ 0u))) * _GLF_struct_replacement_0.workgroup_id, _GLF_struct_9(_GLF_struct_8(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), mat2x3(1.0))), _GLF_struct_11(_GLF_struct_10(mat2(1.0), 1u, mat2x3(1.0), bvec2(true), mat4x3(1.0), mat3(1.0), mat2(1.0))), _GLF_struct_13(mat4x3(1.0), _GLF_struct_12(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), uvec3(1u), vec3(1.0), uvec4(1u), 1, vec2(1.0)), mat4x3(1.0)), _GLF_struct_14(mat4(1.0), uvec4(1u)), _GLF_struct_19(_GLF_struct_15(uvec4(1u), _GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0)), vec3(1.0), mat3x4(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_16(uvec4(1u), bvec4(true), vec2(1.0), bvec3(_GLF_IDENTITY(true, (true) && true)), mat4x2(1.0), mat4x2(1.0), vec4(1.0)), _GLF_struct_17(mat3(1.0), uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), bvec4(true), bvec2(true)), uvec3(1u), _GLF_struct_18(uvec4(_GLF_IDENTITY(1u, (1u) / 1u)), mat4(1.0)), uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(75.19)), bool(false))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.9))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED((-2.1 + 5.8)))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), _GLF_IDENTITY(true, (true) || false) && (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), (! (! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))), true, true, true))) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(uvec2(1u), mat3(1.0), 1.0, _GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.x, 0u + (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.x)) * subgroup_size + subgroup_local_id, _GLF_struct_4(1u, true, bvec3(true), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))))), _GLF_struct_1(bvec3(true), true, mat3x4(1.0)), _GLF_struct_2(1, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 1u)), uvec2(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), mat4x2(1.0), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true))), false)))), mat2x4(1.0), mat2x3(1.0))), mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -5620.2842)), _GLF_FUZZED(float(-56461))), bvec2(false, false))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_20.workgroup_base + GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.xy.x * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(num_workgroup)))) << _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u))))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), min(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u | (4u))) ^ 0u)))))))) / 1u)), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u))))), _GLF_IDENTITY(uint(4u), 0u ^ _GLF_IDENTITY((uint(4u)), clamp(_GLF_IDENTITY((uint(4u)), 0u + (_GLF_IDENTITY((uint(4u)), ((uint(4u))) ^ 0u))), _GLF_IDENTITY((uint(4u)), ~ (_GLF_IDENTITY(~ ((uint(4u))), clamp(~ ((uint(4u))), ~ ((uint(4u))), ~ ((uint(4u))))))), (uint(4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), min(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u | (4u))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))) / 1u))) | ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u))))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), min(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(0u ^ (uint(4u)), (_GLF_IDENTITY(0u ^ (uint(4u)), clamp(0u ^ (uint(4u)), 0u ^ (uint(4u)), 0u ^ (uint(4u))))) * 1u))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(0u ^ (uint(4u)), 0u ^ (0u ^ (uint(4u))))))))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) | (4u)), _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u | (4u))) ^ 0u)))))))) / 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))), true))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_5.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.w = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_5.virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1, uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1)).w == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1, uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1)).w == read_2), ! (! (! (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1, uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1)).w == read_2))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_2_50_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizenum_workgroupread_1.w == read_2) + 1, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))))) || false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))))) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true))))))))) || false))), true), true))), true)))))))) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))) && true)))), true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0))), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -3.0)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(308.590)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x))) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
}
