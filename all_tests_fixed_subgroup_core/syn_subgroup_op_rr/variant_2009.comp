#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat3x2 _f1;
 uint _f2;
 mat4x2 _f3;
 mat3x4 _f4;
 mat4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 uvec2 _f1;
 bvec2 _f2;
 uvec4 _f3;
 ivec4 _f4;
 uint _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 mat2x3 _f3;
 int _f4;
 vec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 float _f3;
 bool _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
 bool _f2;
 uint subgroup_local_id;
 bool _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])))).y)) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(8.3), max(true ? injectionSwitch.x : _GLF_FUZZED(8.3), true ? injectionSwitch.x : _GLF_FUZZED(8.3))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(vec2(-41.66, 32.78), vec2(vec4(_GLF_IDENTITY(vec2(-41.66, 32.78), (true ? vec2(-41.66, 32.78) : _GLF_FUZZED(vec2(20.60, -0.0)))), 0.0, 1.0))), injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(pow(vec2(-41.66, 32.78), injectionSwitch))) * abs(vec2(1.0, 1.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(vec2(_GLF_IDENTITY(-41.66, float(mat2x3(-41.66, 0.0, 0.0, cos(0.0), exp(0.0), 0.0))), 32.78), injectionSwitch)))).y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
uint subgroup_size = 16;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(70523u, ~ (_GLF_IDENTITY(~ (70523u), max(~ (70523u), ~ (70523u))))), 16799u, 198141u)))), max(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(true, false || (true)) ? uvec3(1u) : _GLF_FUZZED(uvec3(70523u, 16799u, 198141u)))), _GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(70523u, 16799u, 198141u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(70523u, 16799u, 198141u), (uvec3(70523u, 16799u, 198141u)) + uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(70523u, 16799u, 198141u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(70523u, 1u * (70523u)), 16799u, 198141u), (uvec3(70523u, 16799u, 198141u)) + uvec3(0u, 0u, 0u)))))))))))), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))), (1.0))) / 1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.9)), float(mat4x3(float(_GLF_FUZZED(3.9)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9860.5154) : 0.0)), 1.0, 0.0))), cos(sqrt(0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), float((1.0) / 1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0)))))))), mat3x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), abs(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), abs(0.0), 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(true, true && (true)), 1.0), _GLF_struct_1(mat3x4(1.0), mat3x4(1.0), bvec4(true), mat2x3(1.0), 1, vec4(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6492.0167)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), clamp(float(_GLF_FUZZED(-6.7)), _GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), (float(_GLF_FUZZED(-6.7))) * 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), clamp(float(_GLF_FUZZED(-6.7)), float(_GLF_FUZZED(-6.7)), float(_GLF_FUZZED(-6.7))))) - 0.0))), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), length(0.0), 0.0)))), float(mat3(max(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3x4(0.0, 1.0, round(length(normalize(1.0))), abs(1.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0))), bool(true)))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), length(0.0), 0.0)))), 0.0, exp(0.0), 1.0, sin(0.0), 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), true && (_GLF_IDENTITY(bool(true), true && (bool(true))))))))), _GLF_struct_2(mat2(1.0), uvec2(_GLF_IDENTITY(1u, (1u) * 1u)), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))))))))), true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), bvec2(bvec3(bvec2(bvec2(true)), false))))), true)), false)))), false)), true))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))))))))), true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), bvec2(bvec3(bvec2(bvec2(true)), false))))), true)), false)))), false)), true))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(44738u) : 1u))), (uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(44738u) : 1u)))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) - 0u), _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (true ? uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 0u, 1u)) ^ uvec3(0u, 0u, 0u), ~ (~ ((uvec3(1u, 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (true ? (uvec3(1u, 0u, 1u)) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(35546u, 79943u, 120129u)))))) : _GLF_FUZZED(subgroup_size)))), ivec2(1)), mat3x2(1.0), uvec2(1u), _GLF_struct_3(1.0, mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.8)), bool(false)), _GLF_IDENTITY(float(mat4x2(mix(float(1.0), float(_GLF_FUZZED(2.8)), bool(false)), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0)), clamp(float(mat4x2(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(2.8, (2.8) - 0.0))), bool(false)), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0)), float(mat4x2(mix(float(1.0), float(_GLF_FUZZED(2.8)), bool(false)), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0)), float(mat4x2(mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-900.175)), bool(false))), float(_GLF_FUZZED(2.8)), bool(false)), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0))))))), 1u, mat4x2(1.0), mat3x4(1.0), mat4(1.0), bvec2(true)), _GLF_struct_4(mat3(1.0), bvec4(true))), mat2x3(1.0), true, gl_SubgroupInvocationID, true);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))))) | (gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(ldexp(vec2(8.1, 8.7), ivec2(23671, 40701))))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(91.31))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, min(_GLF_struct_replacement_6.subgroup_local_id, _GLF_struct_replacement_6.subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u), (next_virtual_gid)))) | _GLF_IDENTITY(((next_virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid))))), (~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))))) | 0u))))), ~ (_GLF_IDENTITY(~ ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u), (next_virtual_gid)))) | _GLF_IDENTITY(((next_virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid))))), (~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))))) | 0u)))))), max(~ ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u), (next_virtual_gid)))) | _GLF_IDENTITY(((next_virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid))))), (~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))))) | 0u)))))), ~ ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u), (next_virtual_gid)))) | _GLF_IDENTITY(((next_virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid))))), (~ (_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))))) | 0u)))))))))))), 0u), uvec2(uvec2(uvec2(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), 0u)))))), uint(uvec2(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (_GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), min((0u) | (0u), (0u) | (0u))))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u | ((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) / 1u), 0u ^ (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (0u) | (0u))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), min((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) >> 0u)), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u | ((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) >> 0u))), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(ceil(-201.871)))))) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(subgroup_size))), uint(0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), uint(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))))) ^ 0u), 1u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))) - 0u)))))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, min(0u, 0u)) | (buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 0u ^ (buf[virtual_gid])))))), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), min((4), (4))))), (~ (4)) | (~ (4)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) << 0), (4), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ((_GLF_IDENTITY(4, 0 | (4)))) - 0)) | (~ (4)))))), min((_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) << 0), (4), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ((_GLF_IDENTITY(4, 0 | (4)))) - 0)) | (~ (4)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) << 0), (4), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ((_GLF_IDENTITY(4, 0 | (4)))) - 0)) | (~ (4)))))), max((_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) << 0), (4), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ((_GLF_IDENTITY(4, 0 | (4)))) - 0)) | (~ (4)))))), (_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) << 0), (4), _GLF_IDENTITY((4), max((4), (4))))), _GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ((_GLF_IDENTITY(4, 0 | (4)))) - 0)) | (~ (4))))))))))), (((_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), (~ (4)) | (~ (4)))))))) << 0) * 1)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) >> 0u))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x))) / 1.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(-4026.4743))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))))), tan(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))), false || (! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))))), injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 + (1), _GLF_IDENTITY(max(0 + (1), 0 + (1)), clamp(max(0 + (1), 0 + (1)), _GLF_IDENTITY(max(0 + (1), 0 + (1)), ~ (~ (max(0 + (1), 0 + (1))))), max(0 + (1), 0 + (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((59777 | 53247)) : _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)) + (_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (false ? _GLF_FUZZED(30197) : _GLF_IDENTITY(0, 1 * (0)))) + (1), (_GLF_IDENTITY(0, 1 * (0)) + (1)) | 0)) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) * 1) + (1), 0 + (1), 0 + (1)))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(986.924) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))) + (1), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((59777 | 53247)) : _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + _GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(_GLF_IDENTITY(0 + (1), _GLF_IDENTITY((0 + (1)), ~ (~ ((0 + (1))))) * 1), max(0 + (1), 0 + (1)))), max(_GLF_IDENTITY(clamp(0 + (1), _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 + (1), (0 + (1)) / 1)), 0 | (~ (_GLF_IDENTITY(0 + (1), _GLF_IDENTITY((0 + (1)) / 1, max((0 + (1)) / 1, _GLF_IDENTITY((0 + (1)) / 1, ((0 + (1)) / 1) - (0 >> _GLF_IDENTITY(int(3), int(3)))))))))))), _GLF_IDENTITY(0 + (1), max(_GLF_IDENTITY(0 + (1), (0 + (1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, 0 ^ (0)) + (1)))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, 0 + (0)) + (1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(70388) : 0)) + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(_GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))), (_GLF_IDENTITY(0 + (1), max(_GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), min(0 + (1), 0 + (1)))) >> 0))), _GLF_IDENTITY(0, 1 * (0)) + (1)))) | (_GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((59777 | 53247)) : _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((1) << 0, 1 * (_GLF_IDENTITY((1) << 0, (false ? _GLF_FUZZED(21359) : _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))), 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), max(_GLF_IDENTITY(clamp(0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, 0 + (1))), max(0 + (1), 0 + (1)))), (true ? clamp(0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) >> 0), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) | (0 | 0)), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0 + (1), 0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-12163)))) | 0), 1))), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (true ? clamp(_GLF_IDENTITY(0 + (1), (0 + (1)) ^ 0), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(9627) : 0)))) + (1), 0 + (1)))))), clamp(0 + (1), _GLF_IDENTITY(0 + (1), int(_GLF_IDENTITY(ivec3(0 + (1), 0, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(0 + (1), 0, 1), 1), (ivec4(ivec3(0 + (1), 0, 1), 1)) / ivec4(1, 1, 1, 1)))))), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (_GLF_IDENTITY(1, 0 | (1)))))))), (_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(_GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))), (_GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) >> 0)), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(_GLF_IDENTITY(0, min(0, 0)) + (1), 0 + (1), _GLF_IDENTITY(0 + (1), _GLF_IDENTITY(max(0 + (1), 0 + (1)), int(int(max(0 + (1), 0 + (1))))))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))))))) / 1), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), ~ (~ (0 + (1))))) << 0)))), max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-81032) : _GLF_IDENTITY(1, (1) | 0))))))), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), int(ivec2(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(0 + (1), 0 + _GLF_IDENTITY((1), ((1)) ^ (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(0 + (1), max(0 + (1), _GLF_IDENTITY(0, int(int(0))) + (1)))))), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))))), (max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))) | (max(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (true ? clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))))))))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((- 3.8))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((59777 | 53247)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (0) / 1))))), min(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (0) / 1))))), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (0) / 1)))))))))) + _GLF_IDENTITY((1), ((1)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0 + (1), _GLF_IDENTITY(clamp(0 + (1), _GLF_IDENTITY(0 + _GLF_IDENTITY((1), ~ (~ ((1)))), (0 + _GLF_IDENTITY((1), ~ (~ ((1))))) | (0 + _GLF_IDENTITY((1), ~ (~ ((1)))))), _GLF_IDENTITY(0 + (1), max(0 + (1), _GLF_IDENTITY(0 + (1), (true ? 0 + (1) : _GLF_FUZZED(29404)))))), max(_GLF_IDENTITY(clamp(0 + (_GLF_IDENTITY(1, min(1, 1))), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (_GLF_IDENTITY(1, 0 ^ (1)))))), min(_GLF_IDENTITY(clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), (_GLF_IDENTITY(true, (true) || false) ? clamp(0 + (_GLF_IDENTITY(1, max(1, 1))), 0 + (1), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))) | (_GLF_IDENTITY(0, (0) + 0))) + (1), max(0 + (1), 0 + (1)))) : _GLF_FUZZED(27095))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))))), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), max(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(86599) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), (int(_GLF_IDENTITY(0, clamp(0, 0, 0)))) - 0)))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(86599) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), (int(_GLF_IDENTITY(0, clamp(0, 0, 0)))) - 0))))) << (0 | 0))) + (_GLF_IDENTITY(1, ~ (~ (1)))), 0 + (1)))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY(0 + (1), int(ivec3(0 + (1), 0, 1))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(59777 | 53247, 0 ^ (59777 | 53247)))), max(_GLF_FUZZED((_GLF_IDENTITY(59777 | 53247, 0 ^ (59777 | 53247)))), _GLF_FUZZED((_GLF_IDENTITY(59777 | 53247, 0 ^ (59777 | 53247)))))) : _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0 + (1), max(_GLF_IDENTITY(0 + (1), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(0 + (1), ~ (~ (0 + (1)))))), 0 + (1))), 0 + (1), 0 + (1)), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), 0)) + (1), _GLF_IDENTITY(_GLF_IDENTITY(0 + (1), min(0 + (1), 0 + (1))), ~ (~ (_GLF_IDENTITY(0 + (1), min(0 + (1), 0 + (1)))))), 0 + (1)), int(ivec4(clamp(0 + (1), _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), 0 | (0 + (1)))) | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((int(3)), 1 * ((int(3))))), (~ (~ (int(3)))) * 1))) / 1)))), 0 + _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), min((1), (1)))))), 0, 1, 1))), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), 0 + (1)), min(clamp(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) + (1), 0 + (1), _GLF_IDENTITY(0, (0) | (0)) + (1)), _GLF_IDENTITY(clamp(0 + (1), 0 + (1), 0 + (1)), (clamp(0 + (1), 0 + (1), 0 + (1))) << 0))))))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(50.23, -53.35)))))) : injectionSwitch)).x))))), _GLF_IDENTITY(0 + (1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), float(mat3(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0)), 0.0, sqrt(0.0), abs(abs(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.2 + -46.46))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-68.78)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sqrt(0.0), abs(abs(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(950.645)), vec2(_GLF_FUZZED(-30.25), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x), 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), float(mat3(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0)), 0.0, sqrt(0.0), abs(abs(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.2 + -46.46))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-68.78)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0, sqrt(0.0), abs(abs(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(950.645)), vec2(_GLF_FUZZED(-30.25), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x), 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)))))))))) ? _GLF_FUZZED((59777 | 53247)) : _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), clamp(0 + (_GLF_IDENTITY(1, (1) | 0)), 0 + (1), 0 + _GLF_IDENTITY((1), min((1), (1)))))) >> _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) * 1) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(64, (64) - 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), false), bvec2(bvec3(bvec2((! (false)), false), true))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(vec3(-7.4, 76.38, -1.8).y), _GLF_FUZZED(-3331.9370)), bvec2(false, false))) * mat2(1.0)).y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))))))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) / 1.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> (_GLF_IDENTITY(0u, (0u) ^ (0u | 0u)) & 59734u)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(~ (read_1), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_1), (~ (read_1)) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1), (~ (read_1)) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY(~ (read_1), (~ (read_1)) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | 0u)) | 0u) >> _GLF_IDENTITY((0u & 59734u), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (0u & 59734u), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (0u & 59734u), uint(uvec3(false ? _GLF_FUZZED(next_virtual_gid) : (0u & 59734u), 0u, 1u)))) | _GLF_IDENTITY((false ? _GLF_FUZZED(next_virtual_gid) : (0u & 59734u)), uint(uvec3((false ? _GLF_FUZZED(next_virtual_gid) : (0u & 59734u)), 1u, 1u))))))) : _GLF_FUZZED(workgroup_id))))) == read_2) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-37958))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec3(((false)), true, false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(vec2(7.5, 4.6)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
}
