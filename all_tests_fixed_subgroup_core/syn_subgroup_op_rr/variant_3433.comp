#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat4 _f0;
 bvec3 _f1;
 float _f2;
 mat3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 uint _f1;
 mat3x4 _f2;
 ivec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 ivec2 _f1;
 uint read_1;
 vec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 uvec4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 _GLF_struct_0 _f1;
 mat3x4 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_6 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))) | (gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))))) - uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) | (_GLF_IDENTITY(0u, (0u) + 0u))), 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))))))), (false ? _GLF_FUZZED(uvec3(167182u, 106978u, 23350u)) : (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-15.23), _GLF_FUZZED(-39.20)), clamp(vec2(_GLF_FUZZED(-15.23), _GLF_FUZZED(-39.20)), vec2(_GLF_FUZZED(-15.23), _GLF_FUZZED(-39.20)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-15.23), _GLF_FUZZED(-39.20)), vec2(mat2x4(vec2(_GLF_FUZZED(-15.23), _GLF_FUZZED(-39.20)), 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = (1 & (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)) : _GLF_FUZZED(811.949)))), abs(length(vec3(0.0, 0.0, 0.0)))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u), uint(2u))) | (subgroup_id)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), workgroup_base + subgroup_id * subgroup_size))) - 0u, ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), workgroup_base + subgroup_id * subgroup_size))) - 0u) ^ 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) * 1u))) + subgroup_id * subgroup_size) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))), min(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) ^ 0))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), (true ? subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))) : _GLF_FUZZED((subgroup_local_id - workgroup_base))))) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))), 0)))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size)))))))), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))))))))) - (0u | 0u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))))), uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))))), 0u, 1u, 0u)))))) % subgroup_size), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size)), (min(((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))) * 1u))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      return;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) + 0))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(ivec3(int(2), 0, 1)))) - 0))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))), true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false)))))), true), true)))), true))))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x4(1.0), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-32.49, -740.491, 9.6, -7758.7984)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), _GLF_struct_0(mat4(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, 1, 1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (0 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(-59058) : int(ivec3(1, (0 | 1), int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) | 0))))))), mat3x4(1.0), _GLF_struct_1(bvec3(true), mat3x4(1.0))), _GLF_struct_6(_GLF_struct_3(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec2(1), atomicLoad(buf[virtual_gid], 4, 64, 0), vec3(1.0), mat3x2(1.0)), uvec4(1u), _GLF_struct_4(ivec2(1), 1u, mat3x4(1.0), ivec2(1), uvec4(1u)), _GLF_struct_5(mat4(1.0), bvec3(true), 1.0, mat3(1.0), uvec2(1u))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(689.604))))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(7.5, 8.7))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))))))
    return;
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (0 & 89216) | (_GLF_IDENTITY(int(0), 1 * (int(0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (0 & 89216) | (_GLF_IDENTITY(int(0), 1 * (int(0))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (0 & 89216) | (_GLF_IDENTITY(int(0), 1 * (int(0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), (0 & 89216) | (_GLF_IDENTITY(int(0), 1 * (int(0)))))))) | 0)))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), (_injected_loop_counter != 1) || false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false), false, true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false), false, true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false))))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false))))))) || false), false, true)), false)))))))))) && true))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_7._f2._f0.read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, ! (! (false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false || (bool(bvec2(_GLF_DEAD(false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, true))))))))), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true))))))))), ((false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, true)))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, true)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true))), false)), true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)) || false, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109854u)), _GLF_FUZZED(-428.758)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), false)))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false), ! (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (! ((_GLF_WRAPPED_IF_FALSE(false)) || false)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
        return;
       subgroupAll(false);
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), true, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ((! (_GLF_IDENTITY(true, false || (true))))) && true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ((! (_GLF_IDENTITY(true, false || (true))))) && true)), false, false, true))) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), false))), true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true)))) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x, mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x), bool(true))) > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x, mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x), bool(true))) > injectionSwitch.y), true, false)))))), true))))))) && _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))), false, false, true))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))), false, false, true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))), true, false))), true))))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))), true, false))), true))))))) && true, false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))), true, false))), true))))))) && true, false, true), false))))))), bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (true))), (_GLF_IDENTITY(bool(! (! (true))), bool(bvec2(bool(! (! (true))), true)))) || false)))), false, false, true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (true))), (_GLF_IDENTITY(bool(! (! (true))), bool(bvec2(bool(! (! (true))), true)))) || false)))), false, false, true))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (true))), (_GLF_IDENTITY(bool(! (! (true))), bool(bvec2(bool(! (! (true))), true)))) || false)))), false, false, true))))))), false), true, true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(5444.2475))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(88.59))))), 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(5444.2475)), max((true ? 0.0 : _GLF_FUZZED(5444.2475)), _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(5444.2475)), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(5444.2475)), float(mat3x4((true ? 0.0 : _GLF_FUZZED(5444.2475)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)))))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5444.2475))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), min(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5444.2475))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5444.2475))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))))).x)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5444.2475))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))).x)) > injectionSwitch.y), true, false))), true))))))) && true)))))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_7._f2._f0.read_1 == _GLF_IDENTITY(read_2, uint(uvec3(read_2, 1u, 0u)))), _GLF_IDENTITY((uint(_GLF_struct_replacement_7._f2._f0.read_1 == read_2)) | (uint(_GLF_struct_replacement_7._f2._f0.read_1 == read_2)), (false ? _GLF_FUZZED(workgroup_size) : (uint(_GLF_struct_replacement_7._f2._f0.read_1 == read_2)) | (uint(_GLF_struct_replacement_7._f2._f0.read_1 == read_2))))) + 1, 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), true, false))))), false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))))))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true)))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true)))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true))))))))))))))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), (true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false))) || false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) && true)), true)), false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false))) || false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) && true)), true)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false))) || false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) && true)), true)), false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false))) || false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) && true)), true)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), (bool(bvec3(! (true), true, true))) || false)))) && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false))) || false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) && true)), true)), false)))))))), true))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-8773.7404)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-37.45, 85.76)))), injectionSwitch)).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), (false ? _GLF_FUZZED((mat2x3(-785.172, 27.46, -0.7, 22.44, 96.85, 757.824) * mat2(718.388, -32.66, 7.4, -38.31))) : mat2x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))).y)), true)))), false, true), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec2(bool(bool(bool(false))), _GLF_IDENTITY(false, true && (false))))))), false, false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))) && true))) && true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))) && true))) && true))), false), false), bvec3(bvec4(bvec3(bvec2(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))) && true))) && true))), false), false), false)))))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), false))))), ! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), false)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false)))), false, false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false)) || false), true)))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))), false)))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))))))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)))))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))), false)))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))))))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-9941.1946, 6.5, -986.083, -5.6, -0.9, 852.052, 2.7, 1.9, 99.75, 394.899, 9.9, -84.11)) : mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(bool(bool(bool(false))), false))))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))), false, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), true, false, true))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), (bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))) || false)), (bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), (bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))) || false))) && true))) || false))))))))), false, true), true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false)), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false))) || false)))) && true))), false)), false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bool((_GLF_WRAPPED_IF_TRUE(true))))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))), false)))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), true))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))), false, true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))))), false, true), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) && true), true), false))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || false)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true)))))))))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, true)), true))), true)), true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) || false))))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true))))))), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true), false, true), false))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))) && true))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))), false, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))), true, false, true))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), (bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))) || false)), (bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), (bool(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))) || false))) && true))) || false))))))))), false, true), true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false)), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))))), (bool(bool(_GLF_IDENTITY(true, (true) || false)))) || false))) || false)))) && true))), false)), false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bool((_GLF_WRAPPED_IF_TRUE(true))))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))), false)))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), true))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))), false, true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))))), false, true), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) && true), true), false))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || false)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true)))))))))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, true)), true))), true)), true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) || false))))))) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), true, true, false)))) || false), false, true), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false), false, true)), true))), true)), true))))))), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true), false, true), false))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))) && true))) && true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), false), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), false), false, true)))))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), true && _GLF_IDENTITY((! (true)), ! (! ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))), true && _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))), true && ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && _GLF_IDENTITY((! (true)), ! (! ((! (true))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((! (true)), ! (! ((! (true))))), (true && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))) || false), true, true, true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), true && ((true)))), ! (! ((! (true))))))))))))))))))))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2((_GLF_WRAPPED_IF_TRUE(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(true, (true) && true) && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2((_GLF_WRAPPED_IF_TRUE(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false))))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(true, (true) && true) && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, false))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(true)))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), false || (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))) && true))), true && (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), false)))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), true))), false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), false))))))))))))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true))), false, true), true))), false)), false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), false, true), false)), false))))))))) && true))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec2(bool(bvec3(true, false, true)), true)))))), false, true), false)), false))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), true))), false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), true))), false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || false), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true), true), false)), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), false, true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false)))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false)))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false)))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), false))), false)))))))))))))))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true))), false, true), true))), false)), false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) || false))), false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), false, true), false)), false))))))))) && true))) && true)))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (_GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), true))))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (_GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), true))))))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (_GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool((_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))), (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), true))))))))), false), false))), false))), false, true))))))), false, false), true)), true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
