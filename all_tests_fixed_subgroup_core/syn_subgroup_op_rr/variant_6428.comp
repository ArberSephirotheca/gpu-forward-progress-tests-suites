#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_6num_workgroupread_2;
 uvec4 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base;
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.xy = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_6num_workgroupread_2.x = num_workgroup;
 GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.x = GLF_merged2_0_1_13_1_1_6num_workgroupread_2.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.xy.y = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
 GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.w = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.xy.y * GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.w;
 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.w = workgroup_base;
 GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.z = GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.w;
 GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.z = GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.z;
 uint virtual_gid = GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.z;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + ((GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.z + 1) % subgroup_size);
 GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.xy.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.x = GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.xy.x;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.y = read_1;
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], 4, 64, 0);
 GLF_merged2_0_1_13_1_1_6num_workgroupread_2.y = read_2;
 GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.y = GLF_merged2_0_1_13_1_1_6num_workgroupread_2.y;
 if(GLF_merged3_0_2_55_2_1_17_3_1_14GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_local_idworkgroup_base.z + 1 < subgroup_size)
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.y == GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.y) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_14_3_1_12next_virtual_gidread_1workgroup_baseworkgroup_id.y == GLF_merged3_0_1_13_1_1_6_2_1_14num_workgroupread_2workgroup_base.y) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
