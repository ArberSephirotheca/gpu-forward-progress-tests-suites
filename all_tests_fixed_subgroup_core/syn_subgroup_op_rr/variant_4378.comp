#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(_GLF_IDENTITY(false, true && (false))))))))) && true, ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), bool(bvec2(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, _GLF_IDENTITY(true, true && (true))))))))))), false)))))))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(_GLF_IDENTITY(false, true && (false))))))))) && true) && true), bool(bool((_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))) && true) || false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))), true, true))), true, false)))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false), true && (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! ((! (! (true)))))))) || false))))) && (bool(bool(_GLF_IDENTITY(false, true && (false))))))))) && true, ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), true)))))))), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, true && (false))), true, true)), ! (! (bool(bvec3((false), true, true))))))))), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true, false || (true)) && (false)))))))))))) && true) && true), bool(bool((_GLF_DEAD(false)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, true && (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (! (false)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (! (false))) && true))) || false))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)) && true), false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))) || false, true && ((_GLF_IDENTITY(! (false), false || (! (false)))) || false)))) && true), false, true))))) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false) || false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(0.0, tan(0.0), cos(0.0), 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0), mat3(1.0) * (mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(0.0, tan(0.0), cos(0.0), 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0)))), (false ? _GLF_FUZZED(2417.4532) : float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(0.0, tan(0.0), cos(0.0), 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0), mat3(1.0) * (mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(0.0, tan(0.0), cos(0.0), 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0)))))))))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(vec2(max(injectionSwitch, injectionSwitch)))), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(901.086)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-27.04), max(_GLF_FUZZED(-27.04), _GLF_FUZZED(-27.04))), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(933.166) : 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), injectionSwitch)), injectionSwitch))))), vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0))) / exp(vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : _GLF_FUZZED(vec2(9781.9834, 2.3))))), injectionSwitch))))) / exp(vec2(0.0, 0.0))).y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) << 0u) * subgroup_size), clamp(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), clamp(~ (subgroup_id * subgroup_size), ~ (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) / (uvec2(1u, 1u) | uvec2(1u, 1u)))))), ~ (subgroup_id * subgroup_size))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), clamp(~ (subgroup_id * subgroup_size), ~ _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u)) | 0u)) + (38974u & 0u)), ~ (subgroup_id * subgroup_size))))))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(3), int(3))))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(sign(-62722), max(sign(-62722), sign(-62722)))) : 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, (-62722) + 0))) : 1), min((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, (-62722) * 1))))))) : 1), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, (-62722) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))))) : 1))))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(sign(-62722)) : 1), min((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, (-62722) * 1))))))) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(58723) : 1))), (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, _GLF_IDENTITY((_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722))), (_GLF_IDENTITY((_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722))), max((_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722))), (_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))))) + 0)))) : 1))))))))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), max((0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) << 0u)) - 0u))), (((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, (-62722) + 0))) : 1), min((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))) | (_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, (-62722) * 1))))))) : 1), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) ? _GLF_FUZZED(sign(_GLF_IDENTITY(_GLF_IDENTITY(-62722, (-62722) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))), (_GLF_IDENTITY(_GLF_IDENTITY(-62722, (-62722) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))), (0 >> _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(-62722, (-62722) | (_GLF_IDENTITY(-62722, max(-62722, -62722))))))) >> 0))) : 1))))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(sign(-62722)) : 1), min((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, (-62722) * 1))))))) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(58723) : 1))), (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, (_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))))) : 1))), (_GLF_IDENTITY((false ? _GLF_FUZZED(sign(-62722)) : _GLF_IDENTITY(1, (1) >> 0)), min((false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, 0 | (_GLF_IDENTITY(-62722, _GLF_IDENTITY(0 | (_GLF_IDENTITY(-62722, (-62722) * 1)), max(0 | (_GLF_IDENTITY(-62722, (-62722) * 1)), 0 | (_GLF_IDENTITY(-62722, (-62722) * 1))))))))) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(58723) : 1))), (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-62722, (_GLF_IDENTITY(-62722, max(-62722, -62722))) | (_GLF_IDENTITY(-62722, max(-62722, -62722)))))) : 1)))) - 0))))))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), max((0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(uint(5u)))), uint(5u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) << 0u)) - 0u)))) << 0u)) << (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(_GLF_IDENTITY(uint(4117), ~ (_GLF_IDENTITY(~ (uint(4117)), _GLF_IDENTITY(_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(4117, int(_GLF_IDENTITY(ivec4(4117, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(4117, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec4(4117, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) | (~ _GLF_IDENTITY((uint(4117)), (false ? _GLF_FUZZED(93498u) : (uint(4117))))), ((~ (uint(4117))) | (~ (uint(4117)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY((~ (uint(4117))) | (~ (uint(4117))), ((_GLF_IDENTITY(~ (uint(4117)), (~ (uint(4117))) / 1u)) | (~ (uint(4117)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((~ (uint(4117))), clamp((~ (uint(4117))), (~ (uint(4117))), _GLF_IDENTITY((~ (uint(4117))), min((~ (uint(4117))), (~ (uint(4117))))))) | (~ (uint(4117))), ((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(4117, ~ (~ (4117))))), (~ (uint(4117))) | 0u)) | (~ (uint(4117)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), uint(8u)))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true))) && true)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), true && (_GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), ! (_GLF_IDENTITY(! (! (! (bool(bool(bool(bool((false)))))))), (! (! (! (bool(bool(bool(bool((false))))))))) && true))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true))) && true))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool((false))))))))))) && true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bool(bool(bool((false))))), _GLF_IDENTITY(! (! (bool(bool(bool(bool((false))))))), (! _GLF_IDENTITY((! (bool(bool(bool(bool((false))))))), bool(bool((! (bool(bool(bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))))) && true))))) && true))) && true))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED((workgroup_id)) : min(0u, 0u))))) / 1u) | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - 0)) | (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), max(float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))))), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x) : _GLF_FUZZED(log2(-4916.5284))))) ^ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), max(~ (_GLF_IDENTITY(1, (1) << 0)), ~ (_GLF_IDENTITY(1, (1) << 0))))))))), (1) << 0))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))), 0u, 0u, 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec3((1), 0, 0))) : _GLF_FUZZED(findMSB(50770)))) << 0))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) << 0))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))))))))))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1)))))))), uint(uint(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))), (~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))))) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))), (~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))))) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))), uint(uint(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))), uint(uint(~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(mix(7672, 872, false)) : 1)))), 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ ((subgroup_local_id + 1)))))))))) / (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)))) + 0u))) << 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, min(1, 1)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1)))))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), 0u + ((false ? _GLF_FUZZED(num_workgroup) : 0u))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))))], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ (54428u & 0u)) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) - 0) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0)))) - 0.0), injectionSwitch[1])).x))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (clamp(64, 64, 64)), min(~ (clamp(64, 64, 64)), _GLF_IDENTITY(~ (clamp(64, 64, 64)), 0 ^ (~ (clamp(64, 64, 64)))))), (~ (clamp(64, 64, 64))) | (~ (clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 0, 1)), (int(ivec3(64, 0, 1))) | (int(ivec3(64, 0, 1))))), 64, 64)))))), 1 * (clamp(_GLF_IDENTITY(64, int(ivec2(64, 1))), 64, 64))))) | 0), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1251.8807))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)), (_GLF_IDENTITY(read_1, 0u | (read_1))) | (read_1)) == read_2, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (! (! (_GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))) && _GLF_IDENTITY(true, false || (true)))))))))))))))) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true, false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), true && (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0))))))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7145.7396)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
