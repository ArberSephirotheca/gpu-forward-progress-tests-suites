#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint virtual_gid;
 uvec3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-115.555) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), true, true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-930.454, 61.32)) : 1.0)), abs(1.0), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (! (true)))) && true), true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), (injectionSwitch.y) / _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.64)), float(1.0), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(log(9.6), (_GLF_IDENTITY(log(9.6), clamp(log(9.6), log(9.6), log(9.6)))) - 0.0))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))), abs(0.0), 1.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || ((false))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true), true), true, true))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))) | 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id, uvec3(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) - 0u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), injectionSwitch.x), float(vec2(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), injectionSwitch.x), clamp(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(43.20, 4.3)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), injectionSwitch.x))), 1.0)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -373.879))), vec2(_GLF_FUZZED(1311.5803), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5055.6679) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(19500u))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(694.643)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))))))))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec3(false, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false))), true, false)))), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))), true, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(length(vec2(0.0, 0.0))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.75) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.80)), bool(false)))))))), vec4(0.0, 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(1.0)))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))), ! (! (! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 0u))), (_GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 0u)))) ^ 0u)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))) && true, (_GLF_IDENTITY((false), false || ((false))) && true) || false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))), false || (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))), ! (! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))), bool(bvec4(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))), true, true, false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-915.262)))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(22.15) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6131.7948)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)), false, false)), (bool(bvec3(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)), false, false))) && true))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), float(mat3x4(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), 1.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) + abs(sin(0.0))), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) ? _GLF_FUZZED((injectionSwitch / -2.0)) : injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))).x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), 0.0, abs(sin(0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))).x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0)))), (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]), bvec2(false, true))).x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))) - vec2(0.0, 0.0))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-680.643), _GLF_FUZZED(-9.3)), bvec2(false, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0), 1.0 * (min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, abs(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), (sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(0.0, (0.0) + 0.0))))) / 1.0))))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), (mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(abs(sin(0.0)), clamp(abs(sin(0.0)), abs(sin(0.0)), _GLF_IDENTITY(abs(sin(0.0)), mix(float(abs(sin(0.0))), float(_GLF_FUZZED(774.402)), bool(false)))))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0)), 1.0)), 0.0, abs(sin(0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))), 1.0, cos(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY(4.2, clamp(_GLF_IDENTITY(4.2, mix(float(4.2), float(_GLF_FUZZED(-31.38)), bool(false))), 4.2, 4.2))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), min(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(4.2), (true ? _GLF_IDENTITY(_GLF_FUZZED(4.2), clamp(_GLF_FUZZED(4.2), _GLF_FUZZED(4.2), _GLF_FUZZED(4.2))) : _GLF_FUZZED(-901.776))), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0))))))).x), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0 + (determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 0.0, abs(sin(0.0))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), mix(float(_GLF_FUZZED(float(70488u))), float(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0), mix(float(min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), float(_GLF_FUZZED(vec4(3.8, 7.0, -3.1, -2.7).p)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(5.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0)), max(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(5.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(5.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0)), mix(float(_GLF_FUZZED(-6.4)), float(determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(5.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0))), bool(true))))), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- sin(-1.5))) : 0.0)), injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y))) / 1.0), (false ? _GLF_FUZZED(9222.2946) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2((injectionSwitch))), _GLF_IDENTITY((vec2(vec2((injectionSwitch)))) * mat2(1.0), ((vec2(vec2((injectionSwitch)))) * mat2(1.0)) * mat2(1.0))))[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) - ivec4(0, 0, 0, 0))))], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) - ivec4(0, 0, 0, 0))))], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) - ivec4(0, 0, 0, 0))))], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat2x3(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) - ivec4(0, 0, 0, 0))))], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0, 0.0, 1.0)))))))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))).x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), vec2(_GLF_FUZZED(13.44), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), vec2(_GLF_FUZZED(13.44), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), vec2(_GLF_FUZZED(13.44), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), vec2(_GLF_FUZZED(13.44), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6673.9960)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, abs(sin(0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, abs(sin(0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), vec2(_GLF_FUZZED(13.44), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))).y))))) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(-1232.8505), min(_GLF_FUZZED(-1232.8505), _GLF_FUZZED(-1232.8505))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0)), 0.0, abs(sin(0.0))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))) * mat2(1.0))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0)))) + mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) * 1.0), 0.0, abs(sin(0.0))))))[_GLF_IDENTITY(0, ~ (~ (0)))]) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(654.029)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(91.35)), vec2(_GLF_FUZZED(float(39623)), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(sin(0.0))))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4125.9240), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * exp(0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(8904.9635)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch))))))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch)))))))))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch))))))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))))[0], _GLF_FUZZED(-39.53)), vec2(_GLF_FUZZED(-9335.5418), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(-0.7, 4382.2637, vec2(0.9, -863.483))) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch)))))))))) / vec2(1.0, 1.0))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.9) : 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch)))))))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9629.0491)), float(0.0), bool(true))), 0.0))) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(235.786)), float(float(0.0)), bool(true)))), max(float(_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(235.786)), float(float(0.0)), bool(true)))), float(_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(235.786)), float(float(0.0)), bool(true))))))), 0.0)), (true ? _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), max(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-49.12))), 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)))), 0.0)) : _GLF_FUZZED(injectionSwitch)))))))).y))), true, false, true)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false))), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y), true, true, false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(15050u))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(34252) : 4))), (4))) / 1), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.9, 4591.6572)) : injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-16.76)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
