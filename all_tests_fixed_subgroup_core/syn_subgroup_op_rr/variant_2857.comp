#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))), bool(bool(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false)))))))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), false || (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (true ? mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat2x4(-1.4, -841.736, 5.1, 9553.0301, -9.7, -3.8, 2.4, -85.20)))))))), (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (true ? mat2x4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat2x4(-1.4, -841.736, 5.1, 9553.0301, -9.7, -3.8, 2.4, -85.20))))))))) * 1.0)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-196.821)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), true, false), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 1.0, 1.0)))), mix(float(_GLF_FUZZED(14.80)), float(float(vec2(injectionSwitch.y, 1.0))), bool(true)))), (injectionSwitch.y) * sqrt(1.0)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) && true)), true, false)))))), true, true))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mod(-736.930, -7.1)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u), (_GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(0u & 94398u, (0u & 94398u) + 0u)), ((0u & 94398u)) ^ 0u), ((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u)) / 1u)) * 1u)) * workgroup_id, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u), (_GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(0u & 94398u, (0u & 94398u) + 0u)), ((0u & 94398u)) ^ 0u), ((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u)) / 1u)) * 1u)) * workgroup_id, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u), (_GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(0u & 94398u, (0u & 94398u) + 0u)), ((0u & 94398u)) ^ 0u), ((workgroup_size) | _GLF_IDENTITY((0u & 94398u), ((0u & 94398u)) ^ 0u)) / 1u)) * 1u)) * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u + (uint(subgroup_size))))))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), true, false))) ? _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), 0u + (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))))) : _GLF_FUZZED((+ subgroup_id)))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))), ~ (~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))))), subgroup_local_id), max(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))), ~ (~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))))), subgroup_local_id), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))), ~ (~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))))), subgroup_local_id), uint(uvec2(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))), ~ (~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))))), subgroup_local_id), 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(8313u), (_GLF_IDENTITY(_GLF_FUZZED(8313u), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(8313u)), (_GLF_IDENTITY((_GLF_FUZZED(8313u)), clamp((_GLF_FUZZED(8313u)), (_GLF_FUZZED(8313u)), (_GLF_FUZZED(8313u))))) ^ 0u)))) >> 0u), min(_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(8313u), _GLF_IDENTITY(uint(uvec2(true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), 0u + (min(subgroup_local_id, subgroup_local_id)))), max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)), subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)) + 1)))) >> 0u) : _GLF_FUZZED(8313u), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED((~ subgroup_id)) : (subgroup_local_id)))) | ((subgroup_local_id)))) << 0u), ((subgroup_local_id)) << 0u)))) + 1) : _GLF_FUZZED(8313u), 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)))), (_GLF_FUZZED(workgroup_size)) >> 0u)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))) ? _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) : _GLF_FUZZED(8313u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u & 12571u)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) - (_GLF_IDENTITY(0u, max(0u, 0u)) & 12571u)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u & 12571u)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, (virtual_gid) - (_GLF_IDENTITY(0u, (0u) ^ 0u) & 12571u))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)), 0u ^ (uint(uvec2(0u, 0u))))))) << 0u)], 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.2) : 0.0)), injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))))) << 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)))) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))))))) << 0u : _GLF_FUZZED(read_1)))) + 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uvec2(1u, 1u) * (uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) - 0.0))) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x)), 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))))) ^ 0u))), uint(_GLF_IDENTITY(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) / uvec2(1u, 1u))) << uvec2(0u, 0u))))), (_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))))) | (_GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), max(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))), _GLF_IDENTITY(uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u)))), 0u ^ (uint(uvec2(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u))))))))))))))), clamp(_GLF_IDENTITY((virtual_gid) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(workgroup_id))), ((virtual_gid) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(workgroup_id)))) << 0u), _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(true, true && (true)) ? (virtual_gid) : _GLF_FUZZED(subgroup_id))), (virtual_gid), (virtual_gid))))) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) - 0u), 0u | (_GLF_IDENTITY((virtual_gid) / 1u, ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid)), virtual_gid))) / 1u) - 0u))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(852.809)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(5560) : 4)), 0 ^ (4)));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), (uint(read_1 == read_2)) | 0u) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), 0u ^ (read_1)) == read_2) + 1, _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))) + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, int(int(1))), 1))))), ~ (~ (uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) + 1))), uint(read_1 == read_2) + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), 0u ^ (read_1)) == read_2) + 1, _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))) + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, int(int(1))), 1))))), ~ (~ (uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) + 1))), uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2) + 1))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), 0u ^ (read_1)) == read_2) + 1, _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))) + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, int(int(1))), 1))))), ~ (~ (uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) + 1))), uint(read_1 == read_2) + 1))) - 0u))))), (uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, uint(uvec3(read_1, 1u, 0u))))) == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) ^ 0u), ~ (~ (uint(read_1 == read_2) + 1))) : _GLF_FUZZED(read_1)))), clamp(_GLF_IDENTITY(max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : read_1)) == read_2) + 1, (true ? _GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))) : _GLF_FUZZED(read_1)))), (max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (true ? _GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))) : _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_FUZZED(read_1)) / 1u))))) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(subgroup_size) : uint(read_1 == read_2))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, (true ? _GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ _GLF_IDENTITY((uint(read_1 == read_2) + 1), min((uint(read_1 == read_2) + 1), (uint(read_1 == read_2) + 1))))) : _GLF_FUZZED(read_1)))), ~ (~ (max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (true ? _GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(~ (~ (uint(read_1 == read_2) + 1)), (~ (~ (uint(read_1 == read_2) + 1))) ^ 0u)) : _GLF_FUZZED(read_1))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicExchange(workgroup_base, workgroup_size)))) == read_2) + 1, max(uint(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_2, (read_2) | 0u)))) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(uvec3(uint(read_1 == read_2) + 1, 1u, 0u))))), ~ (~ (uint(read_1 == read_2) + 1))) : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(uint(uvec3(max(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), (max(_GLF_IDENTITY(1, ~ (~ (1))), 1)) / 1)), _GLF_IDENTITY(uint(read_1 == read_2) + 1, 1u * _GLF_IDENTITY((uint(read_1 == read_2) + 1), ((uint(read_1 == read_2) + 1)) + _GLF_IDENTITY(0u, max(0u, 0u))))), 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), 1u, 1u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec3(max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), 1u, 1u))), min(~ (uint(uvec3(max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), 1u, 1u))), ~ (uint(uvec3(max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), 1u, 1u))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(num_workgroup))) : ~ (uint(uvec3(max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(read_1 == read_2) + 1 : _GLF_FUZZED(uvec4(73785u, 173308u, 42605u, 39747u)[3]))), uint(read_1 == read_2) + 1), 1u, 1u))))))), _GLF_IDENTITY(uint(uvec3(max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true, false)))) + 1) >> 0u)), 1u, 1u)), 0u | (uint(uvec3(max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, false)))) + 1) >> 0u)), 1u, 1u)))), _GLF_IDENTITY(uint(uvec3(max(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 0u), clamp(uvec2(read_2, 0u), uvec2(read_2, 0u), uvec2(read_2, 0u)))))) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))))), uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))))), 0u), clamp(uvec2(uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))))), 0u), uvec2(uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))))), 0u), uvec2(uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))))), 0u)))))), 1u, 1u)), (uint(uvec3(max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))), ~ (1)))))), 1u, 1u))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), (uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), (uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))) | 0u)) | (uint(read_1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ((read_2)) / 1u)) << 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)))))), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))))))) | 0u) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) | 0))), 1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))), min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76342) : _GLF_IDENTITY(1, (1) | (1)))), (1) / 1))))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)))))), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))))))) | 0u) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) | 0))), 1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))), min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76342) : _GLF_IDENTITY(1, (1) | (1)))), (1) / 1))))))))))))), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)))))), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))))))) | 0u) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) | 0))), 1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))), min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76342) : _GLF_IDENTITY(1, (1) | (1)))), (1) / 1)))))))))))))) ^ 0u), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)))))), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))))))) | 0u) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) | 0))), 1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))), min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76342) : _GLF_IDENTITY(1, (1) | (1)))), (1) / 1))))))))))))))), (1u & _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | 0u)) / 1u)))))), 1u, 0u)))))), 4, 64, 4);
   subgroupAll(true);
  }
}
