#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), uvec3(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), 1u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), 1u, _GLF_IDENTITY(0u, uint(uint(0u))))), 0u + (uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), 1u, 0u))))), max(workgroup_size, workgroup_size)) * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, (true ? _GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) - 0u) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base) | 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u)))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) ^ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base) | 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u)))) + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), clamp((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) / (1u & 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), 0u | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), ~ (~ (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u), ~ (~ (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 0u)))))))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), uint(uvec4(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) + (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), 1u, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true)))))))))), false || (! (_GLF_IDENTITY(false, true && (false))))), true, true))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec4(bool(true && (false)), false, true, false)), bool(bvec4(bool(bvec4(bool(true && (false)), false, true, false)), true, true, true))))))))))))))))) && true), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false)))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 1 * (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (! (_GLF_IDENTITY((false), false || ((false)))))))) || false)))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))) : _GLF_FUZZED(workgroup_base)) >> 0u))), buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, (0) - 0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7595.0720)), bool(false)))))), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-4095.8574, -784.133).s)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), ((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) || false))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))), ! (! ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))))), false)))))), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), false)))))), ((_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))))), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ! (! (((_GLF_DEAD(false))) && true))))))))))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(false, true), false, false))), true)))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), true)), false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), true)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), true)), false, true)))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false, false)))))))))) && true)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, bool(bvec4(((_GLF_DEAD(false))) && true, false, false, false)))))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && true))), true, true)))))), false || ((! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, bool(bvec4(((_GLF_DEAD(false))) && true, false, false, false)))))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), true, true)))))))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), false))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))))), (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ((_GLF_DEAD(false))) && true))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && true))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), true, true)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))) && true, (((_GLF_DEAD(false))) && true) || false), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))) && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && true))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))), true, true))))))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false)))))), false || ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), true, true))))))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)))) && true))), bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true))), true && ((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true)))))), true, true))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) && true)), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_DEAD(false))))), (! (bool(bool((_GLF_DEAD(false)))))) || false)))), ((_GLF_DEAD(false))) && true))), true, true))))), false, false, false))))))))))) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false, ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, false || (((_GLF_DEAD(false))) && true)))) || false))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false))))) || false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ((_GLF_DEAD(false))) && true))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false))), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))) && true))), true, true))))))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_DEAD(false))) && true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true))))) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true)))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))) && true))))) && true), true)))))) && true))), bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true))), true && ((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true)))))), true, _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) && true)), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_DEAD(false))))), (! (bool(bool((_GLF_DEAD(false)))))) || false)))), ((_GLF_DEAD(false))) && true))), true, true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) && true)), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_DEAD(false))))), (! (bool(bool((_GLF_DEAD(false)))))) || false)))), ((_GLF_DEAD(false))) && true))), true, true))))), false, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) && true)), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_DEAD(false))))), (! (bool(bool((_GLF_DEAD(false)))))) || false)))), ((_GLF_DEAD(false))) && true))), true, true))))), false, true)))))), false, false, false))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))) && true, false, true)), (bool(bvec3(((_GLF_DEAD(false))) && true, false, true))) && true))))))))))), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))))) && true, _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) && true, false, true)), (bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))) && true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))) && true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(((_GLF_DEAD(false))) && true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(((_GLF_DEAD(false))) && true, false, true), false)), false)))), false))))) && true))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))) && true, true && (((_GLF_DEAD(false))) && true)), false, true, false)))))), ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))) || false))), true, true))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), false)))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))))) && true, bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))) && true, true && (((_GLF_DEAD(false))) && true)), false, true, false)))))), ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_DEAD(false), false, false, true)))), ! (! (! ((bool(bvec4(_GLF_DEAD(false), false, false, true))))))))))))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), bool(bool(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ! (! (((_GLF_DEAD(false))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_IDENTITY(true, ! (! (true))))))))))) || false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_DEAD(false), false, false, true)))), ! (! (! ((bool(bvec4(_GLF_DEAD(false), false, false, true))))))))))))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), bool(bool(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ! (! (((_GLF_DEAD(false))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_IDENTITY(true, ! (! (true))))))))))) || false))), true, true), false))))))))))))))) && true)) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))) + sin(log(vec2(1.0, 1.0)))).y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(372.021)), float(injectionSwitch.y), bool(true)))))))))) || false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true)))))), ! (! (! (! (_GLF_DEAD(false)))))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (false)))), false))))))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-95297), (_GLF_FUZZED(-95297)) + 0))))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | 0u)) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) << 0))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(23568) : _GLF_IDENTITY(1, max(1, 1))))) >> 0), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)), _GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1))), (_GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1))), 0u | ((uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)))))) - (0u & uvec3(161483u, 46485u, 4283u).t)) ^ 0u), 0u + (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) / 1, min((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1)))))) / 1, (_GLF_IDENTITY(1, min(1, 1))) / 1))), 1, 1))) / 1), _GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1))), (_GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | 0), 1))) / 1), 1, 1))), 0u | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)), 0u ^ (uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)))))))) - (0u & uvec3(161483u, 46485u, 4283u).t)) ^ 0u)))) << 0u), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))) || false)))))) - 0u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))) || false)))))) - 0u, ((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))) || false)))))) - 0u) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))) || false)))))) - 0u))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) + 0, 0 | _GLF_IDENTITY((_GLF_IDENTITY((1) + 0, _GLF_IDENTITY((_GLF_IDENTITY((1) + 0, ((1) + 0) >> _GLF_IDENTITY(0, min(0, 0)))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY((1) + 0, ((1) + 0) >> _GLF_IDENTITY(0, min(0, 0)))) ^ 0, 1, 0, 1)), 0 ^ (int(ivec4((_GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), ((1)) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0) >> _GLF_IDENTITY(0, min(0, 0)))) ^ 0, 1, 0, 1))))))), ((_GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1) + 0, ((1) + 0) >> _GLF_IDENTITY(0, min(0, 0)))) ^ 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY((1) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) + 0, ((1) + 0) >> 0), max(_GLF_IDENTITY((1) + 0, ((1) + 0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((1) + 0, ((1) + 0) >> 0), (_GLF_IDENTITY((1) + 0, ((1) + 0) >> 0)) | (_GLF_IDENTITY((1) + 0, ((1) + 0) >> 0)))))) | ((1) + 0)), (_GLF_IDENTITY((1) + _GLF_IDENTITY(0, (0) + 0), ((1) + 0) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0)))) ^ 0))))), max(_GLF_IDENTITY((1) + 0, 0 | (_GLF_IDENTITY((1), (0 << _GLF_IDENTITY(int(2), int(2))) + ((1))) + 0)), _GLF_IDENTITY((1) + 0, _GLF_IDENTITY(0 | ((1) + 0), 1 * (_GLF_IDENTITY(0 | ((1) + 0), min(0 | ((1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), min(0, 0)) | _GLF_IDENTITY(((1) + 0), int(int(_GLF_IDENTITY(((1) + 0), 0 + _GLF_IDENTITY((((1) + 0)), ((((1) + 0))) | ((((1) + 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, (0) + 0))) | ((1) + 0)), ((_GLF_IDENTITY(0, max(0, 0)) | (_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), 0 | ((1)))))) + 0))) >> 0) << 0))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
}
