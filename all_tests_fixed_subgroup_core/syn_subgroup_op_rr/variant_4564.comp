#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 mat2 _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 ivec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 uvec3 _f1;
 bvec2 _f2;
 mat2 _f3;
 bool _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 bool _f1;
 int _f2;
 bool _f3;
 mat4x2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 uint _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_11 _f0;
 uvec2 _f1;
 ivec3 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_15 _f4;
 uint workgroup_size;
 uvec4 _f5;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_5 {
 bool _f0;
 bvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat3 _f1;
 uvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bvec3 _f3;
 uint _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 bvec3 _f1;
 mat4 _f2;
 mat2 _f3;
 float _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 bool _f1;
 bvec4 _f2;
 vec4 _f3;
 int _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4 _f1;
 mat3x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_3 _f1;
 int _f2;
 vec2 _f3;
 uint subgroup_id;
 mat2 _f4;
 _GLF_struct_6 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec4(1.0), _GLF_struct_3(_GLF_struct_0(1u, _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))) * (1.0))), (true ? mat4(1.0) : _GLF_FUZZED(mat4(_GLF_IDENTITY(452.524, _GLF_IDENTITY(max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524), min(max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524), max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524))), _GLF_IDENTITY(max(_GLF_IDENTITY(452.524, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false)))), mix(float(_GLF_FUZZED(89.05)), float((_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), bool(true)))), 452.524), (max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524)) + 0.0), max(_GLF_IDENTITY(452.524, 1.0 * (_GLF_IDENTITY(452.524, mix(float(452.524), float(_GLF_FUZZED(1.8)), bool(false))))), 452.524)))), -1.4, 0.6, 60.37, 85.77, -19.09, 4.8, -713.992, -0.0, _GLF_IDENTITY(-343.091, (-343.091) - sqrt(0.0)), 13.77, 9.2, -18.38, -23.94, _GLF_IDENTITY(-9.9, float(_GLF_IDENTITY(mat4x3(-9.9, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, tan(0.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0), (false ? _GLF_FUZZED((mat4x3(-7049.0153, _GLF_IDENTITY(8881.1023, mix(float(_GLF_IDENTITY(8881.1023, _GLF_IDENTITY((8881.1023), (false ? _GLF_FUZZED(determinant(mat2(-7.8, 48.51, -3509.1189, -63.44))) : (8881.1023))) + 0.0)), float(_GLF_FUZZED((-1.0 / -198.645))), bool(false))), -9.2, -93.07, _GLF_IDENTITY(_GLF_IDENTITY(-5107.7353, min(-5107.7353, -5107.7353)), (_GLF_IDENTITY(-5107.7353, clamp(-5107.7353, -5107.7353, -5107.7353))) / 1.0), -13.03, 869.143, 192.542, -8.3, _GLF_IDENTITY(9219.3149, mix(float(_GLF_FUZZED(8.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(9219.3149, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(9219.3149, 0.0 + (9219.3149)), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? mat2(_GLF_IDENTITY(9219.3149, 0.0 + _GLF_IDENTITY((9219.3149), min((9219.3149), (9219.3149)))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat2(-2.9, -492.575, -7.7, 9.6)))))), float(_GLF_IDENTITY(mat4x3(9219.3149, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(325.971, 124.970, 760.868, 2405.0725, -86.16, 5.2, -532.894, 2.7, 149.840, -9.3, -8.8, 6.8)) : mat4x3(9219.3149, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), bool(true))), 3.5, 6.1))) : mat4x3(-9.9, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), tan(0.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))))), 93.74)))), (true ? mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat4(-4824.1964, 533.962, -0.6, -786.919, 6.2, -343.061, 4.4, _GLF_IDENTITY(-481.175, (_GLF_IDENTITY(-481.175, (false ? _GLF_FUZZED(dot(9.9, -776.552)) : -481.175))) * 1.0), -54.60, 719.989, 61.82, 148.551, -564.696, 890.338, _GLF_IDENTITY(-8.0, (-8.0) / 1.0), 1977.5268)))), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(831.354) : 1.0))), mat2(1.0)), mat2x4(1.0), _GLF_struct_1(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) + 0.0, (true ? (1.0) + 0.0 : _GLF_FUZZED(2.3))), (_GLF_IDENTITY((1.0) + 0.0, (true ? (1.0) + 0.0 : _GLF_FUZZED(_GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)))))) / 1.0))), true, bvec4(true), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(acosh(vec4(5.3, -9.7, -277.759, -6.1))))), 1, true, uvec4(1u)), _GLF_struct_2(_GLF_IDENTITY(ivec4(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-33699, -32508, 31575, 63911)))), bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (true))), mat4(1.0), mat2(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), ivec3(1), ivec2(1))), 1, vec2(1.0), gl_SubgroupID, mat2(1.0), _GLF_struct_6(ivec2(1), _GLF_struct_4(mat2x3(1.0), mat3(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_5(true, bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))))))), bvec3(true), 1u, mat4x2(1.0)));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y : _GLF_FUZZED(float(subgroup_size))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_11(bvec4(true), _GLF_struct_9(vec4(1.0), true, 1, true, mat4x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false))))), true)))), true)))))), _GLF_struct_10(mat2x4(1.0)), 1u), uvec2(1u), ivec3(1), _GLF_struct_13(_GLF_struct_12(mat2x4(1.0), uvec3(1u), bvec2(true), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(ldexp(-9792.5924, -14610))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0)))), _GLF_IDENTITY(true, (true) && true))), _GLF_struct_15(_GLF_struct_14(mat4x3(1.0)), ivec4(1), uvec4(1u)), gl_WorkGroupSize.x, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u + (0u))))) | (0u)), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u, 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_16.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, (_GLF_struct_replacement_7.subgroup_id * subgroup_size) >> 0u) + _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id), (true ? (_GLF_struct_replacement_8.subgroup_local_id) : _GLF_FUZZED(atomicExchange(subgroup_size, (2010u ^ subgroup_size)))))), (_GLF_IDENTITY(~ (~ (_GLF_struct_replacement_8.subgroup_local_id)), clamp(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.subgroup_local_id), (~ (_GLF_struct_replacement_8.subgroup_local_id)) ^ 0u))))), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))))) | (~ (~ (_GLF_struct_replacement_8.subgroup_local_id))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_struct_replacement_7.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))), _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id)))) | 0u))))), uint(uvec2(uint(uint(workgroup_base + _GLF_struct_replacement_7.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))))), 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat2(1.0), workgroup_base + _GLF_struct_replacement_7.subgroup_id * subgroup_size + ((_GLF_struct_replacement_8.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)));
 atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))), _GLF_IDENTITY(false, false || (false)), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)) && _GLF_IDENTITY(true, false || (true))))), false, false))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, false))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u))) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))) - (0u | 0u)))))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)))) + 1, clamp(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))), ((uint(read_1 == read_2))) | 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)), 0u + _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) * 1u)), min((_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) * 1u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), ((uint(read_1 == read_2))) * 1u)))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) + 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) + 0u))), ((~ (_GLF_IDENTITY(0u, (0u) + 0u)))) | ((~ (_GLF_IDENTITY(0u, (0u) + 0u)))))) | ((~ (_GLF_IDENTITY(0u, (0u) + 0u))))) ^ 0u)))) + 1, _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2)))), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) + 0u), 0u))) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), (true ? _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))) : _GLF_FUZZED(workgroup_base)))))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))) ^ 0u))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1)) == read_2)), max(_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))) ^ 0u)))))) >> 0u))) + 1))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))))))), 0u | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((1u ^ 1u), 0u | ((1u ^ 1u))) ^ (0u))))))))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(num_workgroup) : (0u))) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (0u) << 0u))))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((0u) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (max(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u))))) << 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) | 0u)) * ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))))) - (0u | 0u)))))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)))) + 1, clamp(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))), ~ (~ ((uint(read_1 == read_2))))), ((uint(read_1 == read_2))) | 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | 0u))), 0u + _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) * 1u)), min((_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) * 1u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), false, true))))), ((uint(read_1 == read_2))) * 1u)))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) + 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) + 0u))), ((~ (_GLF_IDENTITY(0u, (0u) + 0u)))) | ((~ (_GLF_IDENTITY(0u, (0u) + 0u)))))) | ((~ (_GLF_IDENTITY(0u, (0u) + 0u))))) ^ 0u)))) + 1, _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2)))), ~ (~ ((uint(read_1 == read_2))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | (_GLF_IDENTITY((uint(read_1 == read_2)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((uint(read_1 == read_2))))))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u)), (false ? _GLF_FUZZED(bitfieldReverse(subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u)), max(_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) + 0u), 0u))) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) + 0u), 0u))) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))))) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), (true ? _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))), max(((uint(read_1 == read_2))), ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))) : _GLF_FUZZED(workgroup_base)))))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u))), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))) ^ 0u))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1)) == read_2)), max(_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))))) | (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) - 0u))), _GLF_IDENTITY((uint(read_1 == read_2)), 0u + ((uint(read_1 == read_2))))))))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) + 0u)) - 0u))) ^ 0u)))))) >> 0u))) + 1))) | 0u)) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec4(uint(read_1 == read_2), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), (uint(read_1 == read_2)) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), max((0u), (0u))), _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uint((0u)), 0u ^ (uint((0u)))))))) + _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(138445u), (_GLF_FUZZED(138445u)) / 1u) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) + 0u, (0u) + 0u, (0u) + 0u))))) ^ 0u, clamp((~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) + 0u, (0u) + 0u, (0u) + 0u))))) ^ 0u, (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, clamp(_GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, (0u) | 0u)), (0u), (0u))) + 0u, (0u) + 0u, (0u) + 0u))))) ^ 0u, (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) + 0u, (0u) + 0u, (0u) + 0u))))) ^ 0u)))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) ^ 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (0u) << 0u))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), ((_GLF_IDENTITY(0u, (0u) + 0u))) >> 0u)) ^ 0u)) : _GLF_FUZZED(61784u))))) + 1) / 1u)))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) - 0u) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(read_1 == read_2)), bool(_GLF_IDENTITY(bool(! (bool(read_1 == read_2))), (bool(! (bool(read_1 == read_2)))) || false))), true && (! (bool(read_1 == read_2))))) && true))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ! (! (bool(read_1 == read_2)))))), false)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))))), (_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 0u ^ ((read_2))) | (read_2))), ! (! (bool(read_1 == read_2))))))) || false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_IDENTITY(true, (true) && true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), uint(uvec2(_GLF_IDENTITY((read_1), ((read_1)) >> 0u), 1u))) - 0u) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (_GLF_IDENTITY(! (bool(read_1 == read_2)), (! (bool(read_1 == read_2))) || false))))))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(read_1 == read_2)), true && ((bool(read_1 == read_2))))), (! (! (bool(read_1 == read_2)))) || false)))), false)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))))), (_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 0u ^ ((read_2))) | (read_2))), ! (! (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) >> 0u) == read_2))))))) || false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_IDENTITY(true, (true) && true)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((bool(bool(read_1 == read_2)))), ! (! (((bool(bool(_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2))))))), _GLF_IDENTITY((((bool(bool(read_1 == read_2))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && ((((bool(bool(read_1 == read_2))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false), (_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false), (_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)) || false)))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || ((true))), false, false)), (bool(bvec3((true), false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)))))) && true)), true, true, false))))))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(37.97)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(37.97)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(37.97)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), true))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, false))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, false)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
