#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_26 {
 bvec3 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 bvec2 _f1;
 int _f2;
 bvec3 _f3;
 bool _f4;
 vec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 int _f1;
 vec3 _f2;
 uvec3 _f3;
 int _f4;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 mat3x2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_23 {
 uint _f0;
 _GLF_struct_21 _f1;
 uvec3 _f2;
 bvec3 _f3;
 ivec4 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_28 {
 int _f0;
 _GLF_struct_23 _f1;
 uvec2 _f2;
 _GLF_struct_25 _f3;
 mat4x3 _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 int _f1;
 mat2 _f2;
 vec3 _f3;
 mat4 _f4;
 mat4x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 vec4 _f2;
 float _f3;
 mat2x4 _f4;
 bool _f5;
 uint read_2;
} ;

struct _GLF_struct_15 {
 uint _f0;
 ivec2 _f1;
 uvec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 uvec2 _f3;
 ivec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 bvec3 _f1;
 mat3 _f2;
 mat3x4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_15 _f5;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_9 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat2 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 vec4 _f4;
 bvec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 uint _f1;
 uvec2 _f2;
 bvec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_2 {
 uint workgroup_size;
 ivec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 vec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 _GLF_struct_0 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 _GLF_struct_28 _GLF_struct_replacement_28;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy = _GLF_struct_replacement_28._f1._f1.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw = GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw.x = num_workgroup;
  }
 else
  {
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(uvec2(1u), _GLF_struct_0(mat2(1.0), mat4x3(1.0), uvec3(1u), vec2(1.0), ivec2(1)), mat4x2(1.0), mat3x2(1.0), mat3x2(1.0)), mat4x3(1.0), uvec2(1u), _GLF_struct_4(_GLF_struct_2(gl_WorkGroupSize.x, ivec2(1), mat4x3(1.0), vec4(1.0), bvec4(true)), _GLF_struct_3(mat4x2(1.0), mat4x2(1.0), mat3x4(1.0), mat3x2(1.0), ivec2(1), mat4(1.0))), _GLF_struct_7(ivec2(1), _GLF_struct_5(mat3x4(1.0), 1u, uvec2(1u), bvec2(true), ivec3(1)), _GLF_struct_6(mat2x4(1.0), mat2(1.0), mat4x3(1.0), uvec3(1u), vec4(1.0), bvec2(true), ivec3(1))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_8._f3._f0.workgroup_size * workgroup_id;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y + subgroup_id * subgroup_size + subgroup_local_id;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.x = virtual_gid;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw.y = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.x;
 uint next_virtual_gid = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw.y], 4, 64, 0);
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_9(uvec3(1u)), _GLF_struct_11(uvec2(1u), _GLF_struct_10(ivec3(1), mat3x4(1.0))), _GLF_struct_16(_GLF_struct_12(mat3x4(1.0), bvec3(true), mat3(1.0), mat3x4(1.0), mat4(1.0)), _GLF_struct_13(ivec4(1)), mat2x4(1.0), mat4x3(1.0), _GLF_struct_14(mat2(1.0), bvec3(true), mat3x2(1.0), uvec2(1u), ivec3(1), ivec2(1)), _GLF_struct_15(1u, ivec2(1), uvec2(1u), mat2x4(1.0))), _GLF_struct_19(_GLF_struct_17(bvec4(true), 1, mat2(1.0), vec3(1.0), mat4(1.0), mat4x2(1.0), bvec2(true)), _GLF_struct_18(vec2(1.0)), vec4(1.0), 1.0, mat2x4(1.0), true, atomicLoad(buf[GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw.y], 4, 64, 0)));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_20._f3.read_2) + 1, 4, 64, 4);
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         subgroupAll(false);
        }
      }
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_20._f3.read_2) + 1, 4, 64, 4);
   do
    {
     subgroupAll(true);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
