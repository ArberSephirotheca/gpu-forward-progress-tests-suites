#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-1673.2122) : _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false), false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5052.7080))), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(6021.5601)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(49.24, max(49.24, 49.24)), 9.6, -5.7).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3((injectionSwitch)[0], 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-87.67)), float(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-507.492)), bvec2(true, false))).x) / exp(0.0)) > injectionSwitch.y)))) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))) && true), ! (! (false))), bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec3(bool(bvec4(false, true, true, false)), true, false)))), false, true, true))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(cos(0.0)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8514.5708, 0.0)))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, tan(0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8514.5708, 0.0)))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, tan(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8514.5708, 0.0)))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, tan(0.0))))))).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 1.0), mat3(1.0) * (vec3(injectionSwitch.x, abs(0.0), 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), true, false))), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), false))))))))), true, false))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), false))), true, false))), false, false))), _GLF_IDENTITY(true, ! (! (true))), true)))))))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), true, false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))), true, false))), false)), true))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true)))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true)))) && true))) && true))))))))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0)), clamp(float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0)))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), (! ((! (_GLF_DEAD(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 1.0), max(vec4(injectionSwitch, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-516.816)))) - _GLF_ZERO(0.0, injectionSwitch.x))), vec4(injectionSwitch, abs(0.0), 1.0))))).y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)) && (false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8804.1691)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5.6, 1311.3043)) : (injectionSwitch)))[0]) / 1.0), _GLF_FUZZED(-51.00)), vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-29.91, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(mat3x2(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), (false ? _GLF_FUZZED(mat2(-6.0, 401.886, 9.0, -6323.1898)) : mat2(-29.91, 1.0, 1.0, abs(0.0)))))))))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), clamp(_GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), float(vec2(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), min(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(mat3x2(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), (false ? _GLF_FUZZED(mat2(-6.0, 401.886, 9.0, -6323.1898)) : mat2(-29.91, 1.0, 1.0, abs(0.0)))))))))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), clamp(_GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), float(vec2(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), min(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), mat2(mat3x2(_GLF_IDENTITY(mat2(-29.91, 1.0, 1.0, abs(0.0)), (false ? _GLF_FUZZED(mat2(-6.0, 401.886, 9.0, -6323.1898)) : mat2(-29.91, 1.0, 1.0, abs(0.0)))))))))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), clamp(_GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), float(vec2(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), min(0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))))))))) / 1.0)), float(_GLF_FUZZED(1136.1783)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 83.88).y), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) * 1)], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (false ? _GLF_FUZZED(vec2(38.51, -603.604)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(5.6, (5.6) + 0.0), 1311.3043))) - vec2(0.0, 0.0)))) : (injectionSwitch)))[0]), min((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (false ? _GLF_FUZZED(vec2(38.51, -603.604)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(5.6, (5.6) + 0.0), 1311.3043))) - vec2(0.0, 0.0)))) : (injectionSwitch)))[0]), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (false ? _GLF_FUZZED(vec2(38.51, -603.604)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(5.6, (5.6) + 0.0), 1311.3043))) - vec2(0.0, 0.0)))) : (injectionSwitch)))[0]), max((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (false ? _GLF_FUZZED(vec2(38.51, -603.604)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(5.6, (5.6) + 0.0), 1311.3043))) - vec2(0.0, 0.0)))) : (injectionSwitch)))[0]), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (false ? _GLF_FUZZED(vec2(38.51, -603.604)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.6, 1311.3043)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(5.6, (5.6) + 0.0), 1311.3043))) - vec2(0.0, 0.0)))) : (injectionSwitch)))[0]))))) / 1.0), _GLF_FUZZED(-51.00)), vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-29.91, _GLF_IDENTITY(float(mat2(-29.91, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), clamp((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))))), (false ? _GLF_FUZZED(62.41) : 0.0 + _GLF_IDENTITY((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(float(mat4x2((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), log(1.0), 1.0, determinant(mat2(sqrt(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0)), 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-518.279) : 0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)))), (float(mat4x2(_GLF_IDENTITY((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), float(mat4x3((float(mat2(-29.91, 1.0, 1.0, abs(0.0)))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), log(1.0), 1.0, determinant(mat2(sqrt(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0)), 0.0, cos(0.0), 1.0, 0.0))) / 1.0)))))), 83.88).y), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5.6, 1311.3043)) : (injectionSwitch)))[0]) / 1.0), _GLF_FUZZED(-51.00)), vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-29.91, _GLF_IDENTITY(float(mat2(-29.91, 1.0, 1.0, abs(0.0))), 0.0 + (float(mat2(-29.91, 1.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(83.88, max(83.88, 83.88))).y), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))]), bvec2(false, true))))).y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, _GLF_IDENTITY(0u, max(0u, 0u)) + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) >> 0))), (~ (~ (1))) | (~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) / 1)) ^ 0))))))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))))) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (((subgroup_local_id + 1)) + 0u) | (((subgroup_local_id + 1)) + 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(83237) : _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) << 0)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (((subgroup_local_id + 1)))) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) + 1))))) % subgroup_size)) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size)) | 0u, min(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size)) | 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) : _GLF_FUZZED((subgroup_local_id)))) + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), 1u * ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u | (((subgroup_local_id + 1)) + 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + _GLF_IDENTITY((((subgroup_local_id + 1)) + 0u), (_GLF_IDENTITY((((subgroup_local_id + 1)) + 0u), ((((subgroup_local_id + 1)) + 0u)) | ((((subgroup_local_id + 1)) + 0u)))) << 0u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(599.783)), bvec2(false, false))).x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size)) | 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id))))) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (1)))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)) * 1u), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) + 0u, 0u + (((subgroup_local_id + 1)) + 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size)) | _GLF_IDENTITY(0u, 1u * (0u)))))))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))))) * subgroup_size) >> 0u)) | (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))))) * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 0u))))), clamp(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), (max(_GLF_IDENTITY(subgroup_local_id, ((0u ^ 0u) | 0u) + (subgroup_local_id)) + 1, subgroup_local_id + 1)) * 1u)), subgroup_local_id + 1))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) / (1 & 1)), subgroup_local_id + 1)), subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) / (1 & 1)), subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) / (1 & 1)), subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) / (1 & 1)), subgroup_local_id + 1)), subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), int(ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 0, 0))))), subgroup_local_id + 1))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u), 1u, 1u)) | uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u), 1u, 1u)) | uvec3(0u, 0u, 0u)))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))), clamp(_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))), clamp(_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u))))) - 0u), _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u)))))), _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) * ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), min(float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0)))), float(float(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0)), sin(0.0), abs(0.0), 0.0, 0.0))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (3u))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec2(3u, 0u))), 3u)))))) - 0u), uint(3u))))))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(0u, ~ (~ (0u)))))) / 1u) : _GLF_FUZZED(workgroup_id))))) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ((subgroup_local_id + 1)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) % subgroup_size), uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) % subgroup_size), 0u, 0u), (true ? uvec3(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? 0u >> _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(subgroup_size))))) % subgroup_size), 0u, _GLF_IDENTITY(0u, 1u * (0u))) : _GLF_FUZZED(uvec3(14077u, 188759u, 28447u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (uvec3(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))), (uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), min(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u))))))), ~ (~ (uvec3(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) - 0u)) * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)) + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 1u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid))))) % subgroup_size), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) * _GLF_IDENTITY(1u, 0u | (1u)))), uint(5u))))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(9.2)), bvec2(true, false))).x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) * _GLF_IDENTITY(1u, 0u | (1u)))), uint(5u))))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(9.2)), bvec2(true, false))).x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) * _GLF_IDENTITY(1u, 0u | (1u)))), uint(5u))))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(9.2)), bvec2(true, false))).x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) * _GLF_IDENTITY(1u, 0u | (1u)))), uint(5u))))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(9.2)), bvec2(true, false))).x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid)))))) / 1u))) % subgroup_size), 1u), min(uvec2(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u + (uint(5u))), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))))) >> 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (true) && true))) ? uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), max(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))))), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uint(_GLF_IDENTITY(5u, 0u ^ (5u)))))))))) : _GLF_FUZZED(virtual_gid))))) % subgroup_size), 1u), uvec2(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? uint(uvec4(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x)), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(virtual_gid))))) % subgroup_size), 1u)))))) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false))), true, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (4)), (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (4))) | (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (4)))), 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, 1 * (4)) : _GLF_FUZZED(max(50909, (-8.4 , -83565))))), _GLF_IDENTITY((4), ((4)) | ((4))) | 0), 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), ~ (~ (64))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) - 0) >> 0), 64))) << 0), 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(_GLF_IDENTITY(float(uint(-9179.6305)), min(float(uint(-9179.6305)), float(uint(-9179.6305)))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.9, max(-1.9, _GLF_IDENTITY(-1.9, (true ? -1.9 : _GLF_FUZZED(31.54)))))), _GLF_FUZZED(_GLF_IDENTITY(float(uint(-9179.6305)), min(float(uint(-9179.6305)), float(uint(_GLF_IDENTITY(-9179.6305, _GLF_IDENTITY(float(float(-9179.6305)), (float(float(-9179.6305))) * 1.0)))))))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), max(vec2(mat2x3(injectionSwitch, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), vec2(mat2x3(injectionSwitch, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))), vec2(mat2x3(injectionSwitch, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))[1]), bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(bool(false))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-63082) : 4)), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, 64)))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(69.64) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(69.64) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(69.64) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(69.64) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(69.64) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-935.880))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.4)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(bool(bool(false)), false, false)), (bool(bvec3(bool(bool(false)), false, false))) && true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(9419.8080, 2933.4989)) : injectionSwitch), vec2(1.0, 1.0) * ((false ? _GLF_FUZZED(vec2(9419.8080, 2933.4989)) : injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))), (true ? uint(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uint(read_2), _GLF_IDENTITY((uint(read_2)) << 0u, ((uint(read_2)) << 0u) / 1u)))), read_2, read_2))) : _GLF_FUZZED(subgroup_local_id))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}
