#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id;
 uvec2 GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, cos(0.0), 0.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-222.854)), bool(false))), injectionSwitch.y), 0.0))).y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 | 0) ^ (_injected_loop_counter)) < 1); _injected_loop_counter ++)
      {
       _GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_6_1_1_13read_2subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_6_1_1_13read_2subgroup_size, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_6_1_1_13read_2subgroup_size) ^ uvec2(0u, 0u)), (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_6_1_1_13read_2subgroup_size) - uvec2(0u, 0u))) | (uvec2(0u, _GLF_IDENTITY(0u, (0u) >> 0u)) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
            {
             do
              {
               GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w = GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(33.77))), injectionSwitch.y)), 1.0, cos(0.0), 0.0)), max(float(mat2(injectionSwitch.y, 1.0, cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9665.9647)))), 0.0)), float(mat2(injectionSwitch.y, 1.0, cos(0.0), 0.0)))))))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), ((1.0)) - 0.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), float(float((1.0)))), (1.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), float(vec4((1.0), 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), float(vec4((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)), 1.0, 0.0, 1.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(761.609)), (false ? _GLF_FUZZED(sin(-413.525)) : float(_GLF_FUZZED(761.609)))), float(_GLF_IDENTITY((1.0), float(vec4((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)), 1.0, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), (1.0))), _GLF_IDENTITY((1.0), 0.0 + ((1.0))), (1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (1.0) / 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x))))) - 0.0) > injectionSwitch.y)))) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0 * ((_GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), transpose(transpose(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), transpose(transpose(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), (float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), transpose(transpose(mat4x2(mat4x2(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))))), _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0))).x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-4746.0760)), float(_GLF_FUZZED(-7.4)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x))))), mix(float(_GLF_FUZZED(4.3)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0) > injectionSwitch.y)))) && true, ! (! ((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.4, min(-7.4, -7.4))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x))))), mix(float(_GLF_FUZZED(4.3)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0) > injectionSwitch.y)))) && true)))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0 * ((_GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((_GLF_IDENTITY(fma(786.238, 83.14, 7927.4279) / -16.13, mix(float(fma(786.238, 83.14, 7927.4279) / -16.13), float(_GLF_FUZZED((- -6.5))), bool(false)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / -16.13))))), (false ? _GLF_FUZZED(-54.85) : (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / -16.13)))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / -16.13)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / -16.13))))))))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / _GLF_IDENTITY(-16.13, clamp(_GLF_IDENTITY(-16.13, (false ? _GLF_FUZZED(-511.869) : -16.13)), _GLF_IDENTITY(-16.13, (_GLF_IDENTITY(-16.13, float(mat2x4(-16.13, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0), -16.13))))))))) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0 * (0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), (_GLF_IDENTITY(1.0, (1.0) / 1.0))))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(determinant(_GLF_IDENTITY(mat4(-2.8, -0.5, 72.33, 6.5, 24.40, 3.5, 6.9, -32.46, -674.494, -388.115, -0.2, _GLF_IDENTITY(-2946.4387, mix(float(_GLF_FUZZED(-2038.4457)), float(_GLF_IDENTITY(-2946.4387, max(-2946.4387, -2946.4387))), bool(true))), 4363.9321, -64.40, -6.0, 6.1), (mat4(-2.8, -0.5, 72.33, 6.5, 24.40, 3.5, 6.9, -32.46, -674.494, -388.115, -0.2, _GLF_IDENTITY(-2946.4387, mix(float(_GLF_FUZZED(-2038.4457)), float(_GLF_IDENTITY(-2946.4387, max(-2946.4387, -2946.4387))), bool(true))), 4363.9321, -64.40, -6.0, 6.1)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, 0.0 + ((1.0) / 1.0)), (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (true ? (1.0) / 1.0 : _GLF_FUZZED(-314.873))), (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0))), max(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) / 1.0, (1.0) / 1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) - 0.0), (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, sqrt(0.0), round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), exp(tan(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))), min(1.0, 1.0)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0))))))))))))), mix(float((1.0)), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)), ((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0))) / 1.0), (_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1274.8398)), float(1.0), bool(true))), 1.0, 1.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1.0), float(_GLF_IDENTITY(vec4((1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), _GLF_IDENTITY(vec4(mat2x3(vec4(_GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x4((1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(sin(0.0), 1.0)), dot(vec2(log(1.0), 1.0), vec2(sin(0.0), 1.0))), 1.0), (mat2x4((1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(sin(0.0), 1.0)), dot(vec2(log(1.0), 1.0), vec2(sin(0.0), 1.0))), 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), 1.0, 0.0)), min(vec4(mat2x3(vec4((1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), 1.0, 0.0)), vec4(mat2x3(vec4((1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), 1.0, 0.0))))))), clamp(_GLF_IDENTITY((1.0), ((1.0)) - 0.0), _GLF_IDENTITY((1.0), float(vec4((1.0), 1.0, 0.0, 1.0))), (1.0))), _GLF_IDENTITY((1.0), 0.0 + ((1.0))), (1.0))) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0))))), (1.0))) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((_GLF_IDENTITY(1.0, (1.0) * 1.0))), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(atan(-6.3, -59.67)) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0)) : _GLF_FUZZED((fma(786.238, 83.14, 7927.4279) / -16.13))))) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / exp(length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(8590.9621)), bool(false))), (1.0))) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat3x4((1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-3.2, 295.495, -4.9, 3.5, -7.3, -9.0, 2221.2422, -1173.0610, 3104.6473, -4.4, -0.5, -0.2)) : mat3x4((1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0))))) / 1.0)), (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), float(mat4x3(_GLF_IDENTITY((1.0), ((1.0)) - 0.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (1.0), (1.0))) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(77.69) : 0.0)), 0.0)) + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0))), (true ? _GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0))) : _GLF_FUZZED(2746.4965)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(injectionSwitch.g))), clamp((1.0), _GLF_IDENTITY((1.0), float(vec4((1.0), 1.0, 0.0, 1.0))), (1.0))), _GLF_IDENTITY((1.0), 0.0 + ((1.0))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(905.005)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))))) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), mix(float((_GLF_IDENTITY(1.0, (1.0) / 1.0))), float(_GLF_FUZZED((false ? -57.41 : -9.6))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (_GLF_IDENTITY(32.28, clamp(_GLF_IDENTITY(32.28, float(mat3x2(32.28, 0.0, 1.0, 0.0, 0.0, 0.0))), 32.28, 32.28)) - 85.85) - 0.0)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : injectionSwitch.x)) : _GLF_FUZZED(5.9))) > injectionSwitch.y)))) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(448.408)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))) / 1.0)) / exp(0.0)), (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), mix(float(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : injectionSwitch.x)) : _GLF_FUZZED(5.9)), (true ? (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), cos(sin(0.0)), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), cos(sin(0.0)), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), cos(sin(0.0)), 1.0))))))))).x)) : _GLF_FUZZED(5.9)) : _GLF_FUZZED(-428.775)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, length(0.0), 1.0, 1.0, 1.0)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float((1.0)), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(32.28 - 85.85, (_GLF_IDENTITY(32.28, mix(float(32.28), float(_GLF_FUZZED(726.200)), bool(false))) - 85.85) - 0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)), ((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0))) - 0.0), (_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : injectionSwitch.x)) : _GLF_FUZZED(5.9))) > injectionSwitch.y)))) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (false ? _GLF_FUZZED(-4.1) : min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, _GLF_IDENTITY((32.28 - 85.85) - 0.0, min(_GLF_IDENTITY((32.28 - 85.85) - 0.0, sin(0.0) + ((32.28 - 85.85) - 0.0)), _GLF_IDENTITY((32.28 - 85.85) - 0.0, clamp((32.28 - 85.85) - 0.0, (32.28 - 85.85) - 0.0, (32.28 - 85.85) - 0.0)))))))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : injectionSwitch.x)) : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(582.950) : injectionSwitch.x)) : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y)))) || false)) && true))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(450.635) : 1.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) : _GLF_FUZZED(-59.48)))), float(_GLF_FUZZED((-30.68))), bool(false))))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - _GLF_IDENTITY(85.85, (85.85) - 0.0), (_GLF_IDENTITY(32.28, clamp(32.28, 32.28, 32.28)) - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - _GLF_IDENTITY(85.85, mix(float(85.85), float(_GLF_FUZZED((-352.746 + 6898.5565))), bool(false))), (32.28 - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), 1.0 * (_GLF_IDENTITY((1.0), float(vec4((1.0), 1.0, 1.0, 1.0))))), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(919.895)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8981.1771) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.0)), bool(false))))) > injectionSwitch.y)), false))).y))))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(32.28 - 85.85, (32.28 - 85.85) - 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), abs(1.0) * (1.0 * (1.0)))))), 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY((fma(786.238, 83.14, 7927.4279) / -16.13), max((fma(786.238, 83.14, 7927.4279) / -16.13), _GLF_IDENTITY((fma(786.238, 83.14, 7927.4279) / -16.13), min((fma(786.238, 83.14, 7927.4279) / -16.13), (fma(786.238, 83.14, 7927.4279) / -16.13))))))))) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0))), float(_GLF_FUZZED(36.15)), bool(false)))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(32.28 - 85.85, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(91.94) : 32.28 - 85.85)), (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(32.28 - 85.85, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(91.94) : 32.28 - 85.85)), (32.28 - 85.85) - 0.0)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), sqrt(0.0), 1.0, sqrt(1.0), determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-9.6), (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(float(-65687))), vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(3.3), (vec3(0.0, 1.0, 0.0))[2]), bvec3(true, false, true)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), 1.0 * ((1.0)))) / 1.0) / 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (true ? (1.0) / 1.0 : _GLF_FUZZED(pow(604.132, length(vec3(3.3, 13.28, 4.6)))))))), (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(513.285) : min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(20.26))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0, (1.0) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), min((1.0), (1.0))), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) + log(1.0)) / 1.0)), (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))))))))))))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)) | 0)), clamp((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), _GLF_IDENTITY((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), _GLF_IDENTITY(max((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), (max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), 0 + (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(clamp(max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), max((true ? _injected_loop_counter : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | (_GLF_FUZZED(_injected_loop_counter)))), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)))), 0 | (clamp(max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), max((true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)))))))))), (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     do
                      {
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.2)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(48.27), _GLF_FUZZED(-82.57)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(48.27), _GLF_IDENTITY(_GLF_FUZZED(-82.57), max(_GLF_FUZZED(-82.57), _GLF_FUZZED(-82.57)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))))).y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) / abs(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), (~ _GLF_IDENTITY((0), max((0), (0)))) / 1)))))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))) && true))))), true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)))))), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! _GLF_IDENTITY((! (bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec3(! (injectionSwitch.x < injectionSwitch.y), true, false)))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), true, true, true)))) && true)) && true), true)))), false || ((! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))) != _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 1, 1))), 1)), int(int(1)))))); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w = subgroup_local_id;
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, false)))) && true));
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.3))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
          }
        }
      }
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - tan(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u), min(_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u), num_workgroup)), 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), (num_workgroup) - 0u), num_workgroup))));
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (! (false))), false || (! (false)))))) || false)));
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))))))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false))))), _GLF_IDENTITY(false, (false) || false), false, true))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) | (_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), ivec2(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)), max(ivec2(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), max(~ (_GLF_IDENTITY(1, int(int(1)))), ~ (_GLF_IDENTITY(1, int(int(1)))))))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1), max((false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)))), 1), (ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(ivec4(_GLF_FUZZED(_injected_loop_counter), 1, 0, 1))) : 1 & 1)), 1)) << ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))), (ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-90712, -3339, -89422), (ivec3(-90712, -3339, -89422)) | (ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))).g) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1), (ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1))))))) & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), 1, 1)))), (_GLF_IDENTITY(1, (1) + 0)) * 1)))) & 1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | ivec2(0, 0)))))))))))))), 1 & _GLF_IDENTITY(1, (1) ^ 0))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) | (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), ivec2(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)), max(ivec2(ivec2(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1))) | (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), max(~ (_GLF_IDENTITY(1, int(int(1)))), ~ (_GLF_IDENTITY(1, int(int(1)))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), max(~ (_GLF_IDENTITY(1, int(int(1)))), ~ (_GLF_IDENTITY(1, int(int(1))))))))) - 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), (ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))), 1 * ((false ? _GLF_FUZZED(_injected_loop_counter) : 1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))), (ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec3(-90712, -3339, -89422).g) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1), (ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1))))))) & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), 1, 1)))), (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 | (0)))) * 1)))) & 1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | ivec2(0, 0)))))))))))), (1 ^ 1) + (_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), ivec2(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)), max(ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 ^ (1)), clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))))) & _GLF_IDENTITY(1, 0 ^ (1)), 1 & _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 ^ (1)), (1 & _GLF_IDENTITY(1, 0 ^ (1))) | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), max(~ (_GLF_IDENTITY(1, int(int(1)))), ~ (_GLF_IDENTITY(1, int(int(1)))))))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), (ivec2(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1) * 1))), 1)) << ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1) >> 0), false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)))), 1), (ivec2(_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1)) << ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec3(-90712, -3339, -89422).g) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1), (ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1, 0))))), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1))))))) & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1)), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 + (1)), 1, 1), min(clamp(_GLF_IDENTITY(1, 0 + (1)), 1, 1), clamp(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), int(int(_GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) << 0))))), 1)))), 1, 1)))))), (_GLF_IDENTITY(1, (1) + 0)) * 1)))) & 1, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, int(ivec3(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_injected_loop_counter) : 1 & 1, 0, 1))))), 1)) << _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | ivec2(0, 0)))))))))))))))), 1 & _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))))))); _injected_loop_counter ++)
                                              {
                                               for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true)))))) && true) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1))))))))); _injected_loop_counter ++)
                                                {
                                                 do
                                                  {
                                                   do
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), false || (bool(bvec3((false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), false || (bool(bvec3((false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))))))), bool(bvec2(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), false || (bool(bvec3((false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                        {
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                            {
                                                             do
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 do
                                                                  {
                                                                   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ((0 | 0) >> _GLF_IDENTITY(int(3), int(3))) | (_injected_loop_counter)) != 1))))))); _injected_loop_counter ++)
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                        {
                                                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), max(~ (int(4)), ~ (int(4)))))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                                                          {
                                                                           do
                                                                            {
                                                                             _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size) / 1u)));
                                                                            }
                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                          }
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))));
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w + GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)).w, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size))) - uvec4(0u, 0u, 0u, 0u)).w, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)))).w, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)).w)), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)), (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)).w))) - 0u))) << 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)))).w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w) >> 0u)) / 1u) + ((GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1) % GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w);
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, (false ? _GLF_FUZZED(min(radians(-825.637), 2.6)) : injectionSwitch.x))))); _injected_loop_counter --)
                {
                 GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.z = next_virtual_gid;
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, exp(log(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0))).y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-909.693))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))) - vec2(0.0, 0.0))).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false)))))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)))) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, abs(1.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, tan(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(mat2x3(injectionSwitch.x, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(asinh(0.7)) : _GLF_IDENTITY(abs(1.0), 0.0 + (abs(1.0))))), 0.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, tan(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0)))))), injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, sqrt(1.0), 0.0))))) < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))))), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))))), ! (! (false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), true)), false)))))))), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)), true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), (! (false)) || false), false)), true))))))))))))), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(mix(-701.637, -4.0, true)))) < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))))), true)))))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true), ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))), false))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))) || false))), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))), false))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))) || false))), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))), false))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))) || false))), _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))))))))))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false))) && true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), max(float(vec3(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(vec3(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true)))), false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_FUZZED(784.998)), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), bool(true))) : 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1)))))))), (! (! (_injected_loop_counter != 1))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)), true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_injected_loop_counter != 1))), false || (! (_injected_loop_counter != 1))))))))) && true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! _GLF_IDENTITY((! (! (_injected_loop_counter != 1))), false || ((! (! (_injected_loop_counter != 1)))))))))), (! (! (_injected_loop_counter != 1))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)), true, true))), ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)), (! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)), (! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true))) && true)))))))))))))))))) && true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1)))))))), (! (! (_injected_loop_counter != 1))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(1, (1) + 0)), clamp(ivec4(1, 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(2))), _GLF_IDENTITY(1, (1) + 0)), ivec4(1, 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 0)))))), int(2))), _GLF_IDENTITY(1, (1) + 0)), ivec4(1, 1, (0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(1, (1) + 0)))))), ! (! (_injected_loop_counter != 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))), true, true))), ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1))))))))) && true)))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1)))))))), (! (! (_injected_loop_counter != 1))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)), true, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter != 1), _GLF_IDENTITY(false, false || (false)) || ((_injected_loop_counter != 1))), false || (! (_injected_loop_counter != 1))))))))) && true)))), false, true), false)), false))))))))); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         do
                                          {
                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), 1 << _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), 0 | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0), int(1)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1)))), (((1 << _GLF_IDENTITY(int(1), int(1))))) | (((1 << _GLF_IDENTITY(int(1), int(1)))))), (1 ^ 1) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1)))), (((1 << _GLF_IDENTITY(int(1), int(1))))) | (((1 << _GLF_IDENTITY(int(1), int(1))))))))))), (1 << _GLF_IDENTITY(int(1), int(1)))))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0))) >> _GLF_IDENTITY(int(1), int(1))) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1))))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                          {
                                                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) != int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), (1.0) / 1.0), injectionSwitch.y)), false || (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (true ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(findLSB(_injected_loop_counter)))) : _injected_loop_counter, _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter) | (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)))))) != int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) / 1.0), injectionSwitch.y))))); _injected_loop_counter ++)
                                                            {
                                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                                              {
                                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0)), (true ? _GLF_IDENTITY(mat3x4(injectionSwitch.x, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), transpose(transpose(mat3x4(injectionSwitch.x, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5842.9850)), bool(false)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))))) : _GLF_FUZZED(mat3x4(-8033.1394, 817.079, -1524.3627, -2.4, -3.5, -4.0, -3884.6283, 9.6, 2.6, -870.383, 6.3, 4.7)))))) < injectionSwitch.y))))
                                                                {
                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.6))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.6))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.6))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.6))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) << 0), (_injected_loop_counter) ^ 0) : _GLF_FUZZED(-76317))) != 1, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) : _GLF_FUZZED(-76317))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) : _GLF_FUZZED(-76317))), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) : _GLF_FUZZED(-76317)))) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))) != 1)))); _injected_loop_counter ++)
                                                                  {
                                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       for(int _injected_loop_counter = ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), min(0 >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), max(0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(6))))))))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                        {
                                                                         GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x = GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.z;
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                             else
                                                              {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 do
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x], _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(1))), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) + 0) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))).x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))).x < injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))).x < injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], max(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 0.0 + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0))), _GLF_FUZZED(43.77)), vec2(_GLF_FUZZED(-46.45), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))).x < injectionSwitch.y))) && true)) || false))))) && true)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true, true && (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0))) * mat2(1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED((513.270)), _GLF_FUZZED(-4288.6086)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], clamp((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))), bvec2(true, true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)))) && true) && true, true, false), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y))) && true))))))))
              {
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(_GLF_IDENTITY(6, (6) | 0)))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.x = read_2;
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) || false)) || false)) || false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z = GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.x, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z = GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.x, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z = GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.xy.x) | 0u))));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w) | 0u) + 1 < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, true && (_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, true && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w) && true))), (bool(bool(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1, (true ? _GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1) / 1u) : _GLF_FUZZED(subgroup_local_id))), uint(uint(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1, min(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w, clamp(GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w)))) + 1, (GLF_merged3_0_2_43_2_1_16_3_1_17GLF_merged2_0_1_6_1_1_13read_2subgroup_sizenext_virtual_gidsubgroup_local_id.w + 1) - 0u)))))) < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)).w))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != 1, bool(bvec3(_injected_loop_counter != 1, true, false))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != 0, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_injected_loop_counter != 0, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_injected_loop_counter != 0, true, false), false))))))))); _injected_loop_counter --)
                  {
                   do
                    {
                     atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), 0u)))) | (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), 0u))))), 0u, 0u)).z), clamp(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (read_1)) == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z))), uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))).z), clamp(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)).z), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u, max(0u, 0u)) << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (read_1)) == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) | uvec4(0u, 0u, 0u, 0u)).z))), uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)) + uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)) + uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)) + uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size)) + uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u))).z))) + 1) * 1u), 4, 64, 4);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   subgroupAll(false);
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) / (_GLF_IDENTITY(((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(((_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (false ? _GLF_FUZZED(-68561) : (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) >> 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-35315) : _GLF_IDENTITY(((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | 0)))), (((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6)))))) >> 0))))))) & 1))))) >> (0 | 0))) - 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) / (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))) & 1))))) >> (0 | 0))) - 0)))) >> _GLF_IDENTITY(int(2), int(2))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(atan(8399.6618, 9.7)) : _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x], uint(read_1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z) + 0u)) + 1, 4, 64, 4);
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true, true))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))))))));
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))))))) < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), int(4)))), (~ _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))))))), clamp(((1 << _GLF_IDENTITY(int(4), int(4)))), ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(4), int(4)))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), int(4))))))) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                {
                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                  {
                                                   do
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                                                        {
                                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                                                          {
                                                           subgroupAll(true);
                                                          }
                                                        }
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           else
                                            {
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
