#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.9, -72.68)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((gl_NumWorkGroups))))), ~ (~ ((gl_NumWorkGroups)))))) | _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(90.37)), bool(false))))) ? _GLF_FUZZED(uvec3(110235u, 83988u, 99420u)) : (gl_NumWorkGroups)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], uint(uvec3(gl_WorkGroupID[2], 1u, 0u))))))).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) * (1u & 1u)), min(workgroup_base, workgroup_base))) | _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u & 1u)), min(workgroup_base, workgroup_base))) | 0u) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u & 1u)), min(workgroup_base, workgroup_base))) | 0u) : _GLF_FUZZED(num_workgroup))) - 0u)))) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.67), _GLF_FUZZED(-3392.0991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_id, 190250u, workgroup_id)) : subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2((! (false)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))) && true))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))) && true))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((bitfieldExtract(uvec3(_GLF_IDENTITY(83976u, (true ? _GLF_IDENTITY(83976u, clamp(_GLF_IDENTITY(83976u, (83976u) << 0u), _GLF_IDENTITY(83976u, (83976u) | 0u), 83976u)) : _GLF_FUZZED(subgroup_size))), 48679u, 91185u), 70378, -65225) , read_1)))) + 1 < subgroup_size, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), bool(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)), true))))))))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))), true && (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))), false || ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))), false || ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))) < subgroup_size))))), false, false), false)))))))), _GLF_IDENTITY(bool(bvec2(((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))), true)), ! (! (bool(bvec2(((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((false ? atomicCompSwap(subgroup_local_id, workgroup_id, workgroup_id) : num_workgroup)) : subgroup_local_id + 1)) < subgroup_size)))), true)))))) && true), _GLF_IDENTITY(true, false || (true)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (subgroup_local_id + 1 < subgroup_size)))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(3618) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))))))) | (subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) | (subgroup_local_id + 1)) < subgroup_size) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))), true, true))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))), true, true))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))) && true)) && true))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))))))))), true, true))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! (! ((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0))) < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u) / 1u)) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u))) - 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)) && true), true, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), false, false, true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size), ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) >> 0u)))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) >> 0u)))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), max(_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) ^ 0u))))))), false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-9894.5683)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), _GLF_IDENTITY(true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) | (subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(mix(virtual_gid, read_1, false)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1)) < subgroup_size) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) | (subgroup_local_id)) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))), true, true))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, ! (! (_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))), true, false)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), 1.0, 1.0, 1.0))) < injectionSwitch.y))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)) && true), true, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(read_2)))), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) << (0u | 0u)))) + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)) && true), true, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(true, bool(bvec2(true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false)))))))) && (! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) >> 0u)))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), max(_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))), false ? _GLF_FUZZED(88781u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true), false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-7.6)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1])))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(6.6)), vec2(_GLF_FUZZED(-8.6), (vec2(injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (injectionSwitch)).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(6.6)), vec2(_GLF_FUZZED(-8.6), (vec2(injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (injectionSwitch)).x, 0.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-328.227)), float(injectionSwitch.x), bool(true))), float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), false)), false))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(_GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), false)), false)))))))))) && _GLF_IDENTITY(true, bool(bool(true))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true))))))))))))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(tan(0.0), 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0))), mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)), (true ? vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)) : _GLF_FUZZED(vec2(-4.0, 2.5))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.5)), bool(false))) > injectionSwitch.y))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true))))) || false))))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), true && (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))))))), true, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true))))) || false))))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), true && (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false || (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true))))) || false))))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), true && (true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))))))), true, false), true))))), false))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) && true))))))))), true, false), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, exp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))), max(vec2(vec4(injectionSwitch, 0.0, exp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))), vec2(vec4(injectionSwitch, 0.0, exp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(8.7))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))))), 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true)))), true && ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true)), true), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))) && true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-45.23)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true)), max(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))) > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)) && true))) && true)))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-45.23)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true)), max(mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))) > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)) && true))) && true))))), bool(bvec2(_GLF_IDENTITY(true && ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)) && true))) && true))))), ! (! (true && ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY(! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))), (! ((((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)) && true))) && true)))))))), false)))))))))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(72.75)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(72.75)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))), bool(bvec3(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((((injectionSwitch.x > injectionSwitch.y)))), (bool((((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))))))), (bool((((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6269.1635)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))) && true)))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), false))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-12.21)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), exp(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-15.50)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-15.50)), vec2((injectionSwitch)[0], _GLF_FUZZED(-15.50)))), vec2(_GLF_FUZZED(-536.365), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-15.50)), vec2(_GLF_FUZZED(-536.365), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) + 0.0), min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)) + 1, 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))) && true), (injectionSwitch.x > injectionSwitch.y) && true)), false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false), false))), false, true))), false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((false), false)), bvec2(bvec3(bvec2(bvec2((false), false)), false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))), (uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2)))) | (uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u)) ^ 0u)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((++ subgroup_id)) : (uint(read_1 == read_2)))) * 1u) + 1)), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) / 1))), 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(5343.8592)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))))), 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-153.568)), float(_GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0), min(sin(0.0), sin(0.0))), sin(_GLF_IDENTITY(0.0, length(0.0) + (0.0)))))), bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6335.9973, 2.1, -1.3)))) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), max((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false))))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), mix(float(float(float(injectionSwitch.y))), float(_GLF_FUZZED(66.10)), bool(false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
