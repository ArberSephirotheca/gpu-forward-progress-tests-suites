#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2721.8577)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-66.88) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-65.53))))))) > injectionSwitch.y)))) && true)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), true)))), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) && true)))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), false || ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), false))), false)))))))), bool(bool(false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (false ? _GLF_FUZZED(uvec3(120934u, 152345u, 137850u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, ((false) || false) && true), (_GLF_IDENTITY((false) || false, ((false) || false) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (_GLF_IDENTITY((false) || false, ((false) || false) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), (_GLF_IDENTITY((false) || false, ((false) || false) && true)) || false)) && true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(0, (0) - 0)], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, min(3u, 3u))), uvec3(3u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), (uvec3(gl_WorkGroupID)) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), clamp(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), max(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u, 0u) ^ (uvec3(gl_WorkGroupID))))))), uvec3(uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3694.6788) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(48.24, max(48.24, 48.24)))), bool(false))))).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(-520.868, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(14.21) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))), (_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-622.299))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), float(_GLF_FUZZED(48.24)), bool(false)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y, (vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) - 0.0) : _GLF_FUZZED(-3.1)))), float(_GLF_FUZZED(48.24)), bool(false))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(-520.868, mix(float(-520.868), float(_GLF_FUZZED((vec4(-456.947, -3.4, -4.6, -9.5) * 408.987).t)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), float(_GLF_FUZZED(48.24)), bool(false)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y) - tan(0.0)))), float(injectionSwitch.x), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), _GLF_IDENTITY(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), max(_GLF_IDENTITY(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : 1.0)), 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(48.24)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))), (mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(48.24, clamp(_GLF_IDENTITY(48.24, min(48.24, 48.24)), 48.24, 48.24)))), bool(false))) / 1.0), mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat2(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), max(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))))), bool(true))), 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(48.24)), bool(false)), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(pow(-43.36, 94.98)) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))) / 1.0), 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)))), _GLF_IDENTITY(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.1))), 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), min(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))))))).y)), float(injectionSwitch.x), bool(true))) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y, (vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y) / 1.0))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(_GLF_IDENTITY(false, false || (false))))))).y)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), min(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), _GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)))) / 1.0)) - 0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), mix(float(float(mat4x2(-520.868, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(48.24, max(48.24, 48.24)))), bool(false))))).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(-520.868, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(14.21) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))), (_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-622.299))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), float(_GLF_FUZZED(48.24)), bool(false)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y, (vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), (float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) - 0.0) : _GLF_FUZZED(-3.1)))), float(_GLF_FUZZED(48.24)), bool(false))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(-520.868, mix(float(-520.868), float(_GLF_FUZZED(_GLF_IDENTITY((vec4(-456.947, -3.4, -4.6, -9.5) * 408.987).t, clamp((vec4(-456.947, -3.4, -4.6, -9.5) * 408.987).t, (vec4(-456.947, -3.4, -4.6, -9.5) * 408.987).t, (vec4(-456.947, -3.4, -4.6, -9.5) * 408.987).t)))), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(_GLF_IDENTITY(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), max(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), _GLF_IDENTITY(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))), (true ? float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-251.165)), bool(false)))))) : _GLF_FUZZED(vec2(-3.2, 880.971)[0]))))), float(_GLF_FUZZED(48.24)), bool(false)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y) - tan(0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), clamp(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))))), float(_GLF_FUZZED(48.24)), bool(false)), max(_GLF_IDENTITY(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : 1.0)), 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(48.24)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))), (mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(48.24, clamp(_GLF_IDENTITY(48.24, min(48.24, 48.24)), 48.24, 48.24)))), bool(false))) / 1.0), mix(float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat2(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), max(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))))), bool(true))), 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(48.24)), bool(false)), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(pow(-43.36, 94.98)) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))) / 1.0), 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)))), _GLF_IDENTITY(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.1))), 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), min(mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false)), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))))))).y)), float(injectionSwitch.x), bool(true))) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y, (vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y) / 1.0))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(_GLF_IDENTITY(false, false || (false))))))).y)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), min(_GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y), _GLF_FUZZED(vec2(-73.48, _GLF_IDENTITY(-520.868, _GLF_IDENTITY(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), max(_GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), min(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), mix(float(float(mat4x2(-520.868, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(48.24)), bool(false))))).y)))) / 1.0)) - 0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, true, false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, -4538.2632)))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, -4538.2632)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, -4538.2632)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, -4538.2632)))).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ (_GLF_FUZZED(workgroup_id))) + 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ (_GLF_FUZZED(workgroup_id))) + 0u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), 0u | ((_GLF_FUZZED(workgroup_id))))) + 0u))))) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ (_GLF_FUZZED(workgroup_id))) + 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ (_GLF_FUZZED(workgroup_id))) + 0u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), 0u | ((_GLF_FUZZED(workgroup_id))))) + 0u))))) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(936.185)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-619.377)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79835) : 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, 0.0, 0.0, 1.0))), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0)))))))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), ! (! (bool(bvec3(! (false), false, false)))))))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), false))) && true), true, true, true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), ! (! (bool(bvec3(! (false), false, false)))))))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))))))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true)))))))) && true), true, true, true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.6), min(_GLF_FUZZED(-3.6), _GLF_FUZZED(-3.6))) : 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-854.582), clamp(_GLF_FUZZED(-854.582), _GLF_IDENTITY(_GLF_FUZZED(-854.582), clamp(_GLF_FUZZED(-854.582), _GLF_FUZZED(-854.582), _GLF_FUZZED(-854.582))), _GLF_FUZZED(-854.582))))), 1.0)), min(1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0))))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || (_GLF_IDENTITY((! (bool(false))), bool(bool((! (bool(false)))))))))))))) - 0.0)) > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(-71.04)), bool(false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.5) : max(1.0, 1.0)))), 1.0))) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y) || false)) && true))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || (_GLF_IDENTITY((! (bool(false))), bool(bool((! (bool(false)))))))))))))) - 0.0)) > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(-71.04)), bool(false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.5) : max(1.0, 1.0)))), 1.0))) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y) || false)) && true))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || (_GLF_IDENTITY((! (bool(false))), bool(bool((! (bool(false)))))))))))))) - 0.0)) > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(-71.04)), bool(false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.5) : max(1.0, 1.0)))), 1.0))) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y) || false)) && true))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || (_GLF_IDENTITY((! (bool(false))), bool(bool((! (bool(false)))))))))))))) - 0.0)) > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(-71.04)), bool(false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.5) : max(1.0, 1.0)))), 1.0))) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y) || false)) && true))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || (_GLF_IDENTITY((! (bool(false))), bool(bool((! (bool(false)))))))))))))) - 0.0)) > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(8.4, -4.3, _GLF_IDENTITY(26.97, float(mat2x3(26.97, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(-71.04)), bool(false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) - 0.0)) > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.5) : max(1.0, 1.0)))), 1.0))) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y) || false)) && true))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)), subgroup_size)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-29.60)), vec2(_GLF_FUZZED(-949.188), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))), (injectionSwitch.x > injectionSwitch.y)), true), false, false))))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, 6665.0570)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) < injectionSwitch.y)) && ((false)))), false, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u + (read_2), (_GLF_IDENTITY(0u + (read_2), (_GLF_IDENTITY(0u + (read_2), ~ (~ (0u + (read_2))))) << 0u)) + 0u)), (read_1 == _GLF_IDENTITY(read_2, 0u + (read_2))) || false), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u + (read_2), (_GLF_IDENTITY(0u + (read_2), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(read_2, (128676u & 0u) ^ (read_2))), ~ (~ (0u + (read_2))))) << 0u)) + 0u)), (read_1 == _GLF_IDENTITY(read_2, 0u + (read_2))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 0u + (read_2))) || false, ! (! ((read_1 == _GLF_IDENTITY(read_2, 0u + (read_2))) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2)), ((uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))) | ((uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2)))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicCompSwap(next_virtual_gid, atomicXor(workgroup_id, workgroup_id), subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), true && (! (read_1 == read_2))))))) - 0u, _GLF_IDENTITY(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), _GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), _GLF_IDENTITY(0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))))), (0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))))) - 0u))))), clamp(~ (_GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))), 0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))))))))), ~ (_GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))), 0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))))))))), ~ (_GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))), 0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))))))))))))))), ((_GLF_IDENTITY((uint(read_1 == read_2)) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), min(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), max(~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))), ~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), min(uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)), uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))) / 1u))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u))))), 0u ^ (~ (~ (~ (uint(uvec3((uint(read_1 == read_2)) - 0u, 0u, 0u)))))))))))))))) >> 0u) | 0u)) + _GLF_IDENTITY(1, (1) * 1), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
