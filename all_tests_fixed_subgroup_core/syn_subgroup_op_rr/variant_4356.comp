#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) + sqrt(0.0)))) && _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))), true, false, false)), false))))))) || (false), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) + sqrt(0.0)))) && _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))), true, false, false)), false))))))) || (false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) + sqrt(0.0)))) && _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))), true, false, false)), false))))))) || (false), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) + sqrt(0.0)))) && _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))), true, false, false)), false))))))) || (false)))), true)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((-0.9)), _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) * 1.0)), vec2(((injectionSwitch))[0], _GLF_FUZZED(98.16)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), 0.0 + (float(vec3(injectionSwitch.x, 0.0, 0.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), 0.0 + (float(vec3(injectionSwitch.x, 0.0, 0.0)))))) - 0.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), 0.0 + (float(vec3(injectionSwitch.x, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), 0.0 + (float(vec3(injectionSwitch.x, 0.0, 0.0)))))) - 0.0))), (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), 0.0 + (float(vec3(injectionSwitch.x, 0.0, 0.0)))))) - 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(length(_GLF_IDENTITY(vec2(5.4, 63.66), _GLF_IDENTITY(mat2(1.0) * (vec2(5.4, 63.66)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (vec2(5.4, 63.66))) * vec2(1.0, 1.0))))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3360.6072)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) + vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * cos(0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(8.5)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)), max(uint(uvec3(subgroup_size, 0u, 1u)), uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u))), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) | uvec3(0u, 0u, 0u)))))))) >> 0u))))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(163293u))), (~ (workgroup_base)) << 0u)))))))) + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))), (uint(workgroup_base + subgroup_id * subgroup_size)) >> _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) << 0u)))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size)))) * 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size)), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | (1))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, (0 ^ 1)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)))))))))) % subgroup_size)), 1u, 1u), uvec3(uvec4(uvec3(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size)), 1u, 1u), 1u)))))) | 0u) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), bool(bvec4(! (bool(! (false))), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), bool(bvec4(! (bool(! (false))), false, false, false)))))))))), bool(bvec3(! (false), true, false))))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))) || false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch[1])), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))), bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))))))), (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6133.7552, -7.7)) : injectionSwitch)).x) / 1.0) < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((0u)), _GLF_IDENTITY((((0u))) | (((0u))), ((((0u))) | (((0u)))) * 1u)), min((_GLF_IDENTITY((0u), 1u * ((0u)))), _GLF_IDENTITY((_GLF_IDENTITY((0u), min((0u), (0u)))), clamp((_GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec2((0u), 0u), uvec2(0u, 0u) ^ (uvec2((0u), 0u))))), _GLF_IDENTITY(((0u)), (((0u))) | (_GLF_IDENTITY(((0u)), max(((0u)), _GLF_IDENTITY(((0u)), (((0u))) - 0u))))) / 1u)), max((_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec2((0u), 0u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))) ^ (uvec2((0u), 0u))))), ((0u)) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec2((0u), 0u), uvec2(0u, 0u) ^ (uvec2((0u), 0u))))), ((0u)) / 1u)))) / 1u)), ((0u)), ((0u)))))) | ((0u)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), true, false, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, true)), true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true)), true, false, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (false) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false)))), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, true)))), true, false, true))))))))), false, true))) ? _GLF_FUZZED(workgroup_size) : ((0u)) | _GLF_IDENTITY(((0u)), (((0u))) << (19700u & 0u))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(min(uint(4u), uint(4u)), (true ? min(uint(4u), uint(4u)) : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY((min(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))), max((min(uint(4u), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, min(4u, 4u)), 1u * (_GLF_IDENTITY(4u, min(4u, 4u))))))), _GLF_IDENTITY((min(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))), clamp((min(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))), _GLF_IDENTITY((min(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), uint(_GLF_IDENTITY(4u, min(4u, 4u))))), (true ? (min(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) + 0u))), (min(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))))))) ^ 0u))) * _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))))), ((6238u & _GLF_IDENTITY(0u, 1u * (0u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), (~ (7u)) >> 0u))), (true ? 7u : _GLF_FUZZED(_GLF_IDENTITY(uvec4(1290u, 86639u, _GLF_IDENTITY(37656u, 0u ^ (37656u)), 46112u), (uvec4(1290u, 86639u, _GLF_IDENTITY(37656u, 0u ^ (37656u)), 46112u)) ^ uvec4(0u, 0u, 0u, 0u)).x)))))) ^ (_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), 0u + (uint(4u)))) | (uint(4u))), (uint(4u)) * 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) * (4u)))) * 1u), 0u), uvec2(uvec3(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), 0u), 0u))))), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) : uint(4u)))) * 1u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), min((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (workgroup_size) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), min((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))) | (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))) | (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid)))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), min(0u, 0u)))))))))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) + 0u)) : _GLF_FUZZED(workgroup_size), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_size)))), false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) + 0u)) : _GLF_FUZZED(workgroup_size), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_size)))), false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(workgroup_size))))) << 0u)))))) << 0u))), _GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4u)))) * 1u))))))], 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 1, 1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | 0), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(13649))) | (1))) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0))), max(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : read_2))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, 0u | (read_2))))), (false ? _GLF_FUZZED(next_virtual_gid) : read_2)))) >> 0u) >> 0u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || _GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) && true, bool(bvec2(_GLF_IDENTITY((bool(bvec2(false, true))) && true, ! (! ((bool(bvec2(false, true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), bool(bvec4(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false, true))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)) / 1u, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)) / 1u) / 1u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), _GLF_IDENTITY(0u, (0u) - 0u), 1u, 0u))))), max(max(uint(uvec4(uint(3u), 0u, _GLF_IDENTITY(1u, (1u) | 0u), 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) ^ 0u), 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), max(_GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))))))))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)) / 1u)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), max(_GLF_IDENTITY(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), (false ? _GLF_FUZZED(next_virtual_gid) : max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))))))), max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))))))))), uint(uint(((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)) / 1u)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))), max(max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), min(uint(uvec4(uint(3u), 0u, 1u, 0u)), uint(uvec4(uint(3u), 0u, 1u, 0u))))))), max(uint(uvec4(uint(3u), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, 0u)), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u)))))))))))))))) ^ (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), max((read_2), (read_2))) * 1u))), ~ (~ (_GLF_IDENTITY(read_2, ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))))) - 0u))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))))))), uint(1u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec4(uint(3u), 0u, 1u, _GLF_IDENTITY(0u, 0u ^ (0u)))), max(uint(uvec4(uint(3u), 0u, _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(3u), 0u, 1u, _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(uvec4(uint(3u), 0u, 1u, 0u), (uvec4(uint(3u), 0u, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) | (uvec4(uint(3u), 0u, _GLF_IDENTITY(1u, 0u | (1u)), 0u)))), 0u ^ (uint(uvec4(uint(3u), 0u, 1u, 0u))))))))) ^ (_GLF_IDENTITY(read_2, (read_2) * 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2) || false), false || (! ((_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2) || false))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (1) | (1)))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(min((4), (4)), (min((4), (4))) | 0))) >> 0), (0 + _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(min((4), (4)), (min((4), (4))) | 0))) >> 0)) >> _GLF_IDENTITY((-873 & 0), ((-873 & 0)) | 0))), max(_GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (_GLF_IDENTITY((7) | (7), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((7) | (7)), clamp(((7) | (7)), ((7) | (7)), ((7) | (7))))), ~ (~ (~ (~ ((7) | (7)))))))) + 0)))), _GLF_IDENTITY(7, max(7, 7)))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (_GLF_IDENTITY((7) | (7), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((7) | (7)), clamp(((7) | (7)), ((7) | (7)), ((7) | (7))))), ~ (~ (~ (~ ((7) | (7)))))))) + 0)))), _GLF_IDENTITY(7, max(7, 7)))))), ~ (~ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (_GLF_IDENTITY((7) | (7), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((7) | (7)), clamp(((7) | (7)), ((7) | (7)), ((7) | (7))))), ~ (~ (~ (~ ((7) | (7)))))))) + 0)))), _GLF_IDENTITY(7, max(7, 7))))))))), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (_GLF_IDENTITY((7) | (7), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((7) | (7)), clamp(((7) | (7)), ((7) | (7)), ((7) | (7))))), ~ (~ (~ (~ ((7) | (7)))))))) + 0)))), _GLF_IDENTITY(7, max(7, 7)))))))))), 4))) * 1));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || _GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, false))))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, false))))), true, true, true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) - 0.0))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0)))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0))))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))).y) - 0.0))))), true, true, false)), true && (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))), false)))), false))))), _GLF_IDENTITY(false, true && (false)) || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0))) > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
