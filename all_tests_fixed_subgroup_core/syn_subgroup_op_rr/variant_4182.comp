#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 mat2x4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_38 {
 vec3 _f0;
 vec4 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 mat3x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_37 {
 ivec2 _f0;
 vec3 _f1;
 mat3x4 _f2;
 uvec3 _f3;
 mat3x2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_36 {
 mat3x4 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat2x4 _f3;
 vec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_40 {
 _GLF_struct_36 _f0;
 ivec4 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 ivec2 _f4;
 _GLF_struct_39 _f5;
} ;

struct _GLF_struct_34 {
 mat4x2 _f0;
} ;

struct _GLF_struct_33 {
 ivec2 _f0;
 bvec2 _f1;
 vec2 _f2;
 vec2 _f3;
 uint _f4;
 float _f5;
} ;

struct _GLF_struct_32 {
 mat2x4 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 uint _f3;
} ;

struct _GLF_struct_35 {
 _GLF_struct_32 _f0;
 ivec4 _f1;
 _GLF_struct_33 _f2;
 int _f3;
 _GLF_struct_34 _f4;
} ;

struct _GLF_struct_30 {
 mat2x4 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
 vec3 _f1;
 uvec3 _f2;
 bvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_27 {
 mat3 _f0;
 bvec4 _f1;
 uvec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_26 {
 uint _f0;
 bvec2 _f1;
 bool _f2;
 bvec4 _f3;
 mat3x4 _f4;
 uvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_29 {
 _GLF_struct_25 _f0;
 ivec3 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 mat3x4 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_41 {
 uint subgroup_local_id;
 _GLF_struct_29 _f0;
 bvec2 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_35 _f3;
 _GLF_struct_40 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 vec3 _f1;
 bool _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_20 {
 int _f0;
 uint subgroup_id;
 mat2x4 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_18 {
 int _f0;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 vec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 ivec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 mat4 _f3;
 _GLF_struct_18 _f4;
} ;

struct _GLF_struct_13 {
 mat4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 mat2x4 _f1;
 vec2 _f2;
 bvec3 _f3;
 mat4 _f4;
 vec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 uint _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 _GLF_struct_14 _f1;
 mat4 _f2;
 mat3x2 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_21 _f5;
 _GLF_struct_23 _f6;
} ;

struct _GLF_struct_10 {
 int _injected_loop_counter;
 bvec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 ivec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 bool _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_4 {
 bool _f0;
 bvec3 _f1;
 bvec3 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 mat3x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 bool _f0;
 bvec3 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 ivec3 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat2 _f3;
 mat3 _f4;
 uint _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat2 _f1;
 mat2 _f2;
 vec2 _f3;
 mat4x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat2x3 _f1;
 _GLF_struct_0 _f2;
 uint workgroup_base;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 mat2x3 _f1;
 _GLF_struct_8 _f2;
 vec2 _f3;
 int _f4;
 mat4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 for(_GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(0, bvec2(true), _GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), vec3(1.0)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_10._injected_loop_counter != (1 | _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))))); _GLF_struct_replacement_10._injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & -80457, (0 & -80457) >> 0))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) * 1))
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((0 | 0), ((0 | 0)) - 0) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(mat3(1.0), _GLF_struct_14(_GLF_struct_11(bvec2(true), 1u, mat3x4(1.0)), _GLF_struct_12(mat3x4(1.0), mat2x4(1.0), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bvec3(true), mat4(1.0), vec3(1.0), mat3(_GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + _GLF_IDENTITY(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-910.974))), mix(float(_GLF_FUZZED((-6118.7225))), float(_GLF_IDENTITY((1.0), ((1.0)) / 1.0)), bool(true)))))), _GLF_struct_13(mat4(1.0), mat3x4(1.0))), mat4(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), _GLF_struct_19(_GLF_struct_15(uvec2(1u), ivec3(1), uvec4(1u)), _GLF_struct_16(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))))), _GLF_IDENTITY(clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), (ivec4(1))))), (clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), (ivec4(1)))))) | (clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), (ivec4(1))))))))), ivec4(1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec4(92866, -69790, -61718, -83244)) : ivec4(1)), (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(ivec4(0), ivec4(0))) | ((false ? _GLF_FUZZED(ivec4(92866, -69790, -61718, -83244)) : ivec4(1)))))) ^ ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-37334, (-37334) >> 0), 9210, -9634, -40568)) : (ivec4(1)) ^ ivec4(0, 0, 0, 0)))), mat3(1.0)), _GLF_struct_17(_GLF_IDENTITY(vec2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-10.64), _GLF_IDENTITY(_GLF_FUZZED(2888.8078), min(_GLF_FUZZED(2888.8078), _GLF_FUZZED(2888.8078)))), max(vec2(_GLF_FUZZED(-10.64), _GLF_IDENTITY(_GLF_FUZZED(2888.8078), min(_GLF_FUZZED(2888.8078), _GLF_FUZZED(2888.8078)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-10.64), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(2888.8078, clamp(2888.8078, _GLF_IDENTITY(2888.8078, float(mat3x2(2888.8078, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), 2888.8078))), min(_GLF_FUZZED(2888.8078), _GLF_FUZZED(2888.8078)))), (vec2(_GLF_FUZZED(-10.64), _GLF_IDENTITY(_GLF_FUZZED(2888.8078), min(_GLF_FUZZED(2888.8078), _GLF_FUZZED(2888.8078))))) * mat2(1.0)))), vec2((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0)), (true ? _GLF_IDENTITY((vec2(1.0)), ((vec2(1.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x < injectionSwitch.y)))), true))), mat4x2(1.0), uvec4(1u), mat4x2(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, min((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, (_GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) / 1.0)) + 0.0))))), bvec2(true)), mat4(1.0), _GLF_struct_18(1)), _GLF_struct_21(_GLF_struct_20(1, gl_SubgroupID, mat2x4(1.0)), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))))), _GLF_struct_23(_GLF_struct_22(mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), (max(1.0, 1.0)) + 0.0))))) / 1.0)), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, cos(0.0) * _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), max((1.0), (1.0)))) * round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-819.225)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.8)), bool(false))), _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.3)), bool(false)))))))))), 1.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))))), true, mat3x2(1.0)), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), vec2(1.0)))))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) + 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      continue;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
uint subgroup_size = 16;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
    continue;
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(ivec3(-96694, -23626, 11330), max(ivec3(-96694, -23626, 11330), ivec3(-96694, _GLF_IDENTITY(-23626, (-23626) ^ 0), 11330))).s & 0)); _GLF_IDENTITY(_injected_loop_counter --, 1 * _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))), ((_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))) - 0)), 0 | (~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))), ((_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))) - 0))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          continue;
        }
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.3, -68.15)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.3, -68.15)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.3, -68.15)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.3, -68.15)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))))))).y, sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.3, -68.15)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))))))).y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-296.868)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y)) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(35.36)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), mix(float(_GLF_FUZZED(-35.46)), float(float(vec2(injectionSwitch.y, 1.0))), bool(true))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), false, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), false, false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), false, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), false, false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter)) != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ~ (~ ((int(3))))) | (int(3))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3))))))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true))))) || _GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   return;
  }
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(gl_SubgroupInvocationID, _GLF_struct_29(_GLF_struct_25(vec2(1.0), mat3x4(1.0)), ivec3(1), _GLF_struct_26(1u, bvec2(true), true, bvec4(true), mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec3(1u), ivec2(1)), _GLF_struct_27(mat3(1.0), bvec4(true), uvec3(1u), mat2x4(1.0)), mat3x4(1.0), _GLF_struct_28(ivec3(1), vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u), (max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) | (1u)), 1u)))), max(~ (uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (0u | 0u) + ((1u))) | (1u)), 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(90618u, 54796u, 58680u)))), 1u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), 1u))), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), 1u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))))), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), true, true))))), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), min((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))))))), bvec2(true), _GLF_struct_31(_GLF_struct_30(mat2x4(1.0), uvec3(_GLF_IDENTITY(1u, (1u) - 0u)), mat3x4(1.0), mat3x2(1.0), mat3x2(1.0)), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), true && (bool(bvec3(true, false, false)))))), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec4(true)), _GLF_struct_35(_GLF_struct_32(mat2x4(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(degrees(86.31)))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(degrees(86.31))))) / 1.0)), mat2x3(1.0), 1u), ivec4(1), _GLF_struct_33(ivec2(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), vec2(1.0), vec2(1.0), _GLF_IDENTITY(1u, (1u) | (111126u & 0u)), 1.0), 1, _GLF_struct_34(mat4x2(1.0))), _GLF_struct_40(_GLF_struct_36(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(-8780.9540), (vec4(1.0, 0.0, 1.0, 0.0))[2], (vec4(1.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED(767.595), (vec4(1.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(20.59), _GLF_FUZZED(365.825)), bvec4(false, true, false, false))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)).y), 0.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), mix(float(_GLF_FUZZED(0.6)), float(float(mat4(1.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false ? _GLF_FUZZED(mod(4.7, -717.875)) : _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / cos(0.0)))) / 1.0), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(min(log(1.0), _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))), (min(log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acos(-380.414)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acos(-380.414)))), 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acos(-380.414)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acos(-380.414))))))), _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)))))))))) / _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) && true)) || false))))), ivec4(1), mat3(1.0), mat2x4(1.0), vec3(1.0), uvec4(1u)), _GLF_IDENTITY(ivec4(1), (ivec4(1)) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))), _GLF_struct_37(ivec2(1), vec3(1.0), mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec3(1u), mat3x2(1.0), vec2(1.0)), _GLF_struct_38(vec3(1.0), vec4(1.0), mat3x2(1.0), mat3x2(1.0), mat3x4(1.0), ivec3(1)), ivec2(1), _GLF_struct_39(mat2x4(1.0), bvec3(true))), vec4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(mat4x2(1.0), mat2x3(1.0), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))), min(ivec2(1), ivec2(1))), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0))))), mat2(1.0), vec2(1.0), mat4x3(1.0), ivec4(_GLF_IDENTITY(1, (1) | (1)))), workgroup_size * workgroup_id, _GLF_struct_1(bvec2(true), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))), (mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0)), mat3(1.0), _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), mat2x3(1.0), _GLF_struct_8(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) + (ivec4(1))), _GLF_struct_3(true, bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), false))))), mat2x3(1.0), uvec3(1u), mat4x3(1.0)), _GLF_struct_4(true, bvec3(true), bvec3(true), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))) / 1.0)), mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(1.0)), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), _GLF_struct_5(mat4(1.0), true, mat4x2(1.0), mat2x3(1.0)), _GLF_struct_6(mat4x2(1.0)), _GLF_struct_7(bvec3(_GLF_IDENTITY(true, bool(bool(true)))), ivec3(1), bvec2(true))), vec2(1.0), 1, _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f0.workgroup_base, uint(uvec2(_GLF_struct_replacement_9._f0.workgroup_base, 0u))) + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) >> 0u)) >> 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) : _GLF_FUZZED(86359u))), 0u | (subgroup_size)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) + (_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u * (_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u * (_GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) >> 0u), _GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))) + _GLF_struct_replacement_41.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_9._f0.workgroup_base + _GLF_struct_replacement_24._f5._f0.subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (~ (_GLF_struct_replacement_41.subgroup_local_id)))) - 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (~ (_GLF_struct_replacement_41.subgroup_local_id)))) - 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (~ (_GLF_struct_replacement_41.subgroup_local_id)))) - 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)), 1u, 1u, 0u))), _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (~ (_GLF_struct_replacement_41.subgroup_local_id)))) - 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)))), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (true ? _GLF_struct_replacement_41.subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (0u & 95914u) ^ (_GLF_struct_replacement_41.subgroup_local_id))) | 0u)))) ^ 0u) + 1) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u, ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u)))) + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))))))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u, ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u)))) + 1) % subgroup_size) / 1u)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_struct_replacement_41.subgroup_local_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), _GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), (_GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), ((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u)) >> 0u)) | ((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))))), _GLF_struct_replacement_41.subgroup_local_id), ~ (~ (max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), _GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(8u), uint(8u))), (~ (_GLF_IDENTITY(uint(8u), uint(8u)))) - 0u)))) / 1u)) & 96927u), (_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), min(_GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), clamp(_GLF_IDENTITY((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), (false ? _GLF_FUZZED(126159u) : (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), ((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_struct_replacement_41.subgroup_local_id) >> 0u)) + 0u))) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u)) >> 0u)) | ((max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))))), _GLF_struct_replacement_41.subgroup_local_id))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_struct_replacement_41.subgroup_local_id) >> 0u)))) ^ 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)) >> 0u) : _GLF_FUZZED(num_workgroup))))), min((_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)) >> 0u) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)) >> 0u) : _GLF_FUZZED(num_workgroup))))))) ^ 0u))) + 1) % subgroup_size), max(false ? _GLF_FUZZED(virtual_gid) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, (_GLF_struct_replacement_41.subgroup_local_id) | (_GLF_struct_replacement_41.subgroup_local_id))), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_struct_replacement_41.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)))), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u) + 1) % subgroup_size), false ? _GLF_FUZZED(virtual_gid) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_41.subgroup_local_id), clamp(~ (_GLF_struct_replacement_41.subgroup_local_id), ~ (_GLF_struct_replacement_41.subgroup_local_id), ~ (_GLF_struct_replacement_41.subgroup_local_id)))))), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_struct_replacement_41.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_41.subgroup_local_id), clamp(~ (_GLF_struct_replacement_41.subgroup_local_id), ~ (_GLF_struct_replacement_41.subgroup_local_id), ~ (_GLF_struct_replacement_41.subgroup_local_id)))))), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_struct_replacement_41.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1) % subgroup_size))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) & 96927u))), _GLF_struct_replacement_41.subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, 1u * (_GLF_struct_replacement_41.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (false ? _GLF_FUZZED(49915u) : max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)))), _GLF_struct_replacement_41.subgroup_local_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, 1u * (_GLF_struct_replacement_41.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (false ? _GLF_FUZZED(49915u) : max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)))), _GLF_struct_replacement_41.subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, 1u * (_GLF_struct_replacement_41.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (false ? _GLF_FUZZED(49915u) : max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)))), _GLF_struct_replacement_41.subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, 1u * (_GLF_struct_replacement_41.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (false ? _GLF_FUZZED(49915u) : max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id)))), _GLF_struct_replacement_41.subgroup_local_id))))) ^ 0u) + 1) % subgroup_size), 0u ^ (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))))) ? _GLF_FUZZED(virtual_gid) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) & 96927u), ~ (~ (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) & 96927u)))))), (false ? _GLF_FUZZED((subgroup_size --)) : _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id), (max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)) >> _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(8u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) & 96927u), ~ (~ (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) & 96927u)))))))), _GLF_struct_replacement_41.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_local_id, max(_GLF_struct_replacement_41.subgroup_local_id, _GLF_struct_replacement_41.subgroup_local_id)), _GLF_struct_replacement_41.subgroup_local_id))) ^ 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))))), _GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)), clamp(_GLF_IDENTITY(clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)), (true ? clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)) : _GLF_FUZZED(workgroup_id))), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) << 0u), (next_virtual_gid)), clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u), _GLF_IDENTITY(1u, (1u) * 1u), 1u)))), clamp((next_virtual_gid), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, 1u)), (uint(uvec2(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 1u))) ^ 0u))), (next_virtual_gid))))))))))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(79959) : 64)), (false ? _GLF_FUZZED(5788) : _GLF_IDENTITY(64, (false ? _GLF_FUZZED(79959) : 64))))) | (64)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))), (_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))), ~ (~ (((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))))))) << 0) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | _GLF_IDENTITY(((~ (64))), (((~ (64)))) | (((~ (64)))))))) << 0))), min(~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((_GLF_IDENTITY(~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))), ~ (~ (~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64)))))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), max(_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-55235))), ~ (64)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64)))))) * 1), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0))), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0))), ~ (~ (~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0))))))), ((~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0))), ~ (~ (~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (64)), ((~ _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(6), int(6))) ^ ((64))))) | ((~ (64))))), (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64)))))) << 0)))))))) << 0))))), 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))));
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1), _GLF_IDENTITY((0) << 0, (true ? _GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, clamp((0) << 0, (0) << 0, (0) << 0))) | ((0) << 0)) : _GLF_FUZZED(-65645))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0))), 0))) / 1, ((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1), _GLF_IDENTITY((0) << 0, (true ? _GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, clamp((0) << 0, (0) << 0, (0) << 0))) | ((0) << 0)) : _GLF_FUZZED(-65645))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0))), 0))) / 1) | 0)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-463.884, 88.67)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2412.9521), _GLF_FUZZED(82.58)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y) || false))))) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)) && true))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false, true)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) || false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)))), true)), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(54158) : int(1)), ~ (~ ((false ? _GLF_FUZZED(54158) : int(1)))))))), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(54158) : int(1)))))) - 0) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))), (false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1722.3024) : 1.0))) > injectionSwitch.y)) && true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_struct_replacement_41.subgroup_local_id + 1 < subgroup_size)
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)))) ? _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) << 0u)) ^ 0u)))) + 1) << 0u) : _GLF_FUZZED(read_2)))) + 0u), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(vec2(5.4, -2.8))))).y)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(false);
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)), true)))))))))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, ! (! (false))))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), int(7))), true && (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), int(7))), bool(bvec3(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), int(7))), false, false)))))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(10885) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))), (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)))) * 1))))
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
             if(_GLF_DEAD(false))
              return;
            }
          }
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1, 4, 64, _GLF_IDENTITY(4, (4) | (-94272 & 0)));
         subgroupAll(true);
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))))))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
                break;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), false)))))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(868.900)), max((true ? injectionSwitch.y : _GLF_FUZZED(868.900)), (true ? injectionSwitch.y : _GLF_FUZZED(868.900)))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               break;
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), min(vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))))).x > injectionSwitch.y))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true)))))), true)))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), true && _GLF_IDENTITY((bool(bvec3(true, false, true))), bool(bvec3((bool(bvec3(true, false, true))), true, true)))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), min(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0)))), mix(vec2(_GLF_FUZZED(4037.8360), _GLF_FUZZED(0.0)), vec2((vec2(_GLF_IDENTITY(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), min(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0)))))[0], (vec2(_GLF_IDENTITY(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), min(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0), vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0)))))[1]), bvec2(true, true))))) * vec2(1.0, 1.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(1.0 * _GLF_IDENTITY((injectionSwitch[1]), mix(float(_GLF_FUZZED(7753.6123)), float((injectionSwitch[1])), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), mix(float(1.0 * _GLF_IDENTITY((injectionSwitch[1]), mix(float(_GLF_FUZZED(7753.6123)), float((injectionSwitch[1])), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(-6.0)), bool(false)))))).y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-485.260)), bvec2(true, false))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-485.260)), bvec2(true, false))).x > injectionSwitch.y))), (! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-485.260)), bvec2(true, false))).x > injectionSwitch.y)))) && true))))), (! (injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-77.82, 2.6))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0)))))) - 0.0)))))), true, false)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
}
