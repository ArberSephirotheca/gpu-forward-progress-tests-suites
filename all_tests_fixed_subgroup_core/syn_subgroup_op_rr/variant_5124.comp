#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << 0u, uint(uint((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + (54297u & 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> (0u ^ 0u))))))), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id, workgroup_id)))), 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) | (uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(subgroup_id, subgroup_size, subgroup_local_id)) : workgroup_id)), 1u)))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)), (false ? _GLF_FUZZED(uvec2(99827u, 140318u)) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))))) / uvec2(1u, 1u), uvec2(0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)), (false ? _GLF_FUZZED(uvec2(99827u, 140318u)) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))))) / uvec2(1u, 1u))))), uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u)), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (uvec2(workgroup_id, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * uvec2(1u, 1u))) / uvec2(1u, 1u))) / uvec2(1u, 1u), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u)), (false ? _GLF_FUZZED(uvec2(59502u, 8448u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), ((uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))) | ((uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))))) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u))))) / uvec2(1u, 1u))))), uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u), (_GLF_IDENTITY((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u), min(_GLF_IDENTITY((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u), ((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)) >> uvec2(0u, 0u)), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)))) | ((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))))) / uvec2(1u, 1u), clamp((_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u), uvec2(uvec4((uvec2(workgroup_id, 1u)) * uvec2(1u, 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / uvec2(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)), 1u)))))))), min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)))), 0u ^ (max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) ^ 0u), workgroup_id, workgroup_id)))), 1u)) * uvec2(1u, _GLF_IDENTITY(1u, (1u) - (0u | 0u))))) / uvec2(1u, 1u))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(1u, min(1u, 1u))), (uvec2(workgroup_id, 1u)) | (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) | uvec2(0u, 0u))))) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)), (false ? _GLF_FUZZED(uvec2(99827u, 140318u)) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, log(1.0))), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, log(1.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, log(1.0)))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))))) / _GLF_IDENTITY(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2(uvec2(1u, 1u)), (uvec2(uvec2(1u, 1u))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))) / uvec2(1u, 1u))) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), uvec2(0u, 0u) + ((_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) + (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)))), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) * uvec2(1u, 1u))) / uvec2(1u, 1u)))))))), min(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) | (workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) * 1u) + 1)) | ((subgroup_local_id + 1))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) * 1u) + 1)) | ((subgroup_local_id + 1))) % subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))), max(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))), ~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false)), false)), true && (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false)), false)))))))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), bool(bool(false))))))))), false || (true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec3((! (_GLF_IDENTITY(false, bool(bool(false))))), true, true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))))))), (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), true && ((_GLF_IDENTITY(! (false), false || (! (false))))))) || false)), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true), bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), false))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec4(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), false, true, false)))) || false)))))))) && _GLF_IDENTITY(true, ! (! (true))))))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, ! (! (true)))) && true))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))))))), ! (! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(false)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), ! (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), ! (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))))))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true), bool(bool(false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(false, true, true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true))))))), ! (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true))))))))))), (bool(bool(false))) || false)), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), true && ((bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) || (bool(bool(_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) || (bool(bool(_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && ((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false), false || (false))))))))))))))), _GLF_IDENTITY((bool(bool(false))) || false, true && ((bool(bool(false))) || false)))), bool(bool(false))))))))))))))) && true))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 0 ^ (64)), 64)), 1, 0)), 0 ^ (_GLF_IDENTITY(int(ivec3(64, 1, 0)), (int(ivec3(64, 1, 0))) << 0)))), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64))))))), _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64, 64))), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64))))))), _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64, 64))), min(clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64))))))), _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64, 64))), clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, ~ (~ (64))))))), _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64, 64)))))))))), 0);
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) | 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), ~ (~ (max(64, 64)))))), (true ? (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), ~ (~ (max(64, 64)))))) : _GLF_FUZZED(26700)))), min(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, max(64, 64)))))), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4((! ((false))), false, true, true)), (bool(bvec4((! ((false))), false, true, true))) || false)))) || false))), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || false))), _GLF_IDENTITY(false, ! (! (false))), true, false)))))))), (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false)), ! _GLF_IDENTITY((! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(bool(bvec4(true && _GLF_IDENTITY((false), ((false)) || false), false, true, true)), bool(bvec4(bool(bvec4(true && _GLF_IDENTITY((false), ((false)) || false), false, true, true)), false, false, false)))))), _GLF_IDENTITY(false, true && (false)), true, false))))), false || (bool((_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false))), ! (! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false))), false || (! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ((false)) || false))), false, true, false))))), false || (bool((! (bool(bvec4((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false, true, false)))))))), true))))))))) || false)))), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), max(uint(uvec3(1u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), uint(uvec3(1u, 0u, 0u))))), 1u))))))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (true ? ~ (read_1) : _GLF_FUZZED(183048u)))))) / 1u), (read_1) | 0u))) == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true) && _GLF_IDENTITY(true, true && (true)))) + 1, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 0), ~ (~ (ivec4(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(ivec3(0, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) | (1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-27765) : 2))) | (2))))), 0))), 1, 0))))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), (clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2) + 1)) / 1u)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), min((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, (1) | (1))) / 1u)) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, 0u | ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (read_1 == read_2))) && true))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (read_1 == read_2))) && true)))) << 0u) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u), uint(read_1 == read_2))) + 1, _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))), ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))) * 1u) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))) + 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), clamp((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))), (_GLF_IDENTITY(max(_GLF_IDENTITY((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), clamp((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), clamp((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ (max(_GLF_IDENTITY((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), clamp((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u, ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)))) >> _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), (true ? ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) : _GLF_FUZZED((read_1)))))), (~ ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), 0u | (((_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) * 1u)))) + 0u)))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), ! (! (read_1 == read_2)))) + 1) / 1u)) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | _GLF_IDENTITY(0u, min(0u, 0u))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), max(_GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) << 0u)))) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)), clamp(~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)), ~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1u)), ~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) && true)) && true)))) + 1) / 1u))))))) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), clamp((~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) / 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 0u), ~ (~ (uvec2(read_1, 0u)))))) == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)), (((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))) | _GLF_IDENTITY((((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (read_1)), read_1)) == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), ((((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (read_1)), read_1)) == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))) | ((((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (read_1)), read_1)) == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))))), (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) + 1), 0u | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) + 1)))) / 1u) / 1u)) >> ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))))))))) << 0u)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), 0 | (_GLF_IDENTITY(4, (4) >> 0))));
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false, bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))))) || false))))), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false))), false, true))), _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}
