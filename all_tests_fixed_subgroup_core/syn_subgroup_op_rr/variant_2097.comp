#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 vec3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_29 {
 float _f0;
 _GLF_struct_28 _f1;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_24 {
 uint next_virtual_gid;
 mat2x3 _f0;
 uvec2 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 vec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_24 _f0;
 ivec3 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_22 {
 uvec2 _f0;
 mat4x2 _f1;
 mat4 _f2;
 float _f3;
 mat4x3 _f4;
 bvec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 bool _f1;
 mat4 _f2;
 mat4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 ivec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_18 {
 bool _f0;
 bvec2 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 ivec2 _f4;
 vec4 _f5;
 int _f6;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 float _f1;
 mat4x3 _f2;
 mat3 _f3;
 uvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 int _f4;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_30 {
 _GLF_struct_13 _f0;
 _GLF_struct_15 _f1;
 mat2 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_27 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_11 {
 int _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 uvec3 _f1;
 bool _f2;
 uvec3 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat2x4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 uvec4 _f1;
 uint _f2;
 bvec2 _f3;
 uint workgroup_id;
 ivec2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 vec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 int _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat2x3 _f1;
 vec3 _f2;
 vec2 _f3;
 ivec4 _f4;
 bvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_3 {
 uint _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_6 {
 uint num_workgroup;
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 mat3x4 _f2;
 int _f3;
 mat3x2 _f4;
 mat3 _f5;
 ivec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_NumWorkGroups.x, _GLF_struct_3(1u, _GLF_struct_0(uvec2(1u), ivec4(1)), _GLF_struct_1(mat3x4(1.0), bvec3(true)), _GLF_struct_2(1u, mat2x3(1.0), vec3(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-919.601)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-919.601)), (float(_GLF_FUZZED(-919.601))) / 1.0) : _GLF_FUZZED(4.1))), bool(false)))), ivec4(1), bvec4(true), vec3(1.0))), _GLF_struct_5(uvec4(1u), 1, _GLF_struct_4(mat2x3(1.0), _GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))), ivec3(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))), min(~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))), ~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))))), 1))))), mat3x4(1.0), true)), mat3x4(1.0), 1, mat3x2(1.0), mat3(1.0), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))), true), true)))), false, true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true))), false)), (bool(bvec2(bool(bvec2(false, false)), false))) && true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), bool(bvec3(bool(bvec2(bool(bvec2(false, false)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && (! (bool(bvec2(false, false))))))), false))) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(sqrt(0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(505.305)), bvec2(false, false)))).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(sqrt(0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(505.305)), bvec2(false, false)))).y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false))))), false || (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false)))))))) || false)))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), false)), ! (! (bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), false))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED(-58.90)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0), 0.0)), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 162.150))), float(0.0), bool(true))))) > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), ! (! (! (false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bvec3(! (! (! (false))), true, false), bvec3(bvec3(bvec3(! (! (! (false))), true, false)))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_10(_GLF_struct_7(uvec3(1u), uvec4(1u), 1u, bvec2(true), gl_WorkGroupID.x, _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), clamp(ivec2(ivec4(ivec2(1), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - 0)) / 1))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), clamp(_GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), (_GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), min(ivec2(ivec4(ivec2(1), 0, 1)), ivec2(ivec4(ivec2(1), 0, 1))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), (ivec2(ivec4(ivec2(1), 0, 1))) / ivec2(1, 1)), ivec2(ivec4(ivec2(1), 0, 1)))), ivec2(ivec4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(60638, -71594)) : (_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0)))), clamp(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(60638, -71594)) : (_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0)))), ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(60638, -71594)) : (_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0)))), ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(60638, -71594)) : (_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) | (1))), 1, 1)))) - ivec2(0, 0)))))))))), _GLF_IDENTITY(ivec2(0, 0) | _GLF_IDENTITY(((ivec2(1))), (((ivec2(1)))) | (((ivec2(1))))), (_GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))) | ivec2(0, 0)) | ((ivec2(1)))) ^ ivec2(0, 0)))), _GLF_IDENTITY(0, ~ (~ (0))), 1)))))), uvec4(_GLF_IDENTITY(1u, (1u) | 0u)), _GLF_struct_8(ivec3(1), mat2x4(1.0), vec3(1.0)), _GLF_struct_9(mat4x2(1.0), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), uint(6u))))), true, uvec3(1u), vec2(1.0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0), (mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(-84919)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(abs(3.8)) : 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, exp(0.0), tan(tan(0.0)), 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0))))) - 0.0))), _GLF_struct_11(1, uvec4(1u)), vec4(1.0), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12._f0._f0.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), vec2(_GLF_FUZZED(711.894), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_13(1u, uvec2(1u)), _GLF_struct_15(bvec3(true), mat3(1.0), ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))), mat4x2(1.0), _GLF_struct_14(mat3x4(1.0), mat4x2(1.0), _GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))), ivec3(1))), mat3x4(1.0), 1)), mat2(1.0), _GLF_struct_21(_GLF_struct_16(mat2x3(1.0), mat4x3(1.0)), _GLF_struct_17(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-34.17))), 1.0)), 1.0)), float(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))), 1.0, mat4x3(1.0), mat3(1.0), uvec2(1u), vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-16.22)), float(0.0), bool(true))), 0.0)) + (1.0)))), mat3x4(1.0), uvec2(1u), _GLF_struct_18(true, bvec2(true), mat2x4(1.0), mat2x3(1.0), ivec2(1), vec4(1.0), 1), _GLF_struct_19(mat2x4(1.0), mat2x3(1.0)), _GLF_struct_20(vec3(1.0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), max(_GLF_FUZZED(mix(52406, 22307, true)), _GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), (_GLF_FUZZED(mix(52406, 22307, true))) | (_GLF_FUZZED(mix(52406, 22307, true)))))) : 1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(52406, 22307, true)) : 1), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), min(_GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), (_GLF_FUZZED(mix(52406, 22307, true))) << 0)))), _GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), (_GLF_IDENTITY(_GLF_FUZZED(mix(52406, 22307, true)), (_GLF_FUZZED(mix(52406, 22307, true))) | 0)) ^ 0))) : 1)) - 0)), _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(52406, 22307, true)) : 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) * int(_GLF_ONE(1.0, injectionSwitch.y))) + (1))), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), int(_GLF_IDENTITY(ivec2(0 + (1), 1), ~ (~ (ivec2(0 + (1), 1)))))))))) | 0)), ivec4(1))), _GLF_struct_23(_GLF_struct_22(uvec2(1u), mat4x2(1.0), mat4(1.0), 1.0, mat4x3(1.0), bvec2(true), bvec3(true)), true, mat4(1.0), mat4(1.0), vec4(1.0)), _GLF_struct_27(_GLF_struct_24(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 0u, 0u)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 0u, 0u)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), 1u, 1u, 0u)), max(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 0u, 0u)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), 1u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 0u, 0u)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), 1u, 1u, 0u))))), mat2x3(1.0), uvec2(1u), mat2x3(1.0), bvec3(true), vec4(1.0), true), ivec3(1), _GLF_struct_25(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4x3(1.0)), _GLF_struct_26(mat4(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1))))))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-531.820, 8619.3912, -5932.3865, -9.7).p)), bool(false))), injectionSwitch.y))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))), ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1)))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((1), ((1)) | ((1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(ivec4(0, 0, 0, 0), min(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))) ^ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25208) : 0)) | (_GLF_IDENTITY(1, 1 * (1)))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-32485, (_GLF_IDENTITY(-32485, clamp(-32485, -32485, -32485))) - 0)) : int(ivec4(_GLF_IDENTITY(1, 1 * (1)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1))))) * 1))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((1), ((1)) | ((1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), vec3(1.0)), _GLF_struct_29(1.0, _GLF_struct_28(vec3(1.0), mat4x3(1.0), mat2x3(1.0))));
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_30._f5._f0.next_virtual_gid, (_GLF_struct_replacement_30._f5._f0.next_virtual_gid) ^ 0u)], uint(_GLF_IDENTITY(1, (1) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(924.525)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))), float(vec4(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8287.7989 - 9.7))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), 0.0 + (float(float(0.0)))))), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) ^ 0), 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))] : _GLF_IDENTITY(_GLF_FUZZED((63467u ^ 15339u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED((63467u ^ 15339u)))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), true), true)))))), bool(bvec3(bool(bvec2((false), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true))))), true, false)))), true, true))))), ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec3(bvec2((! (true)), false), true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec3(bvec2((! (true)), false), true))), true))))))))), true)), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1690.7939)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_30._f5._f0.next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, max((4) * 1, _GLF_IDENTITY((4), ((4)) << 0) * 1))), _GLF_IDENTITY(4, (4) << 0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), true, false)))) || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), true, false)))) || (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), true, false)))) || (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (false)), false, false, true)), true, false)))) || (false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(normalize(vec2(-2.3, 1211.0591))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(normalize(vec2(-2.3, 1211.0591))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(normalize(vec2(-2.3, 1211.0591))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)), false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(normalize(vec2(-2.3, 1211.0591))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(normalize(vec2(-2.3, 1211.0591))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)), false))))), true, true, false))))))))))))), false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-49.43)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_30._f5._f0.next_virtual_gid, (_GLF_struct_replacement_30._f5._f0.next_virtual_gid) << 0u)], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(829.101, 502.899, 6269.7702, -9.8, -961.991, -9013.3200))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(829.101, 502.899, 6269.7702, -9.8, -961.991, -9013.3200)))))) + vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
