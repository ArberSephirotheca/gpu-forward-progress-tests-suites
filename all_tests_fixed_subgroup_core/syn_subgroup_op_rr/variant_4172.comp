#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6875.7432) : injectionSwitch.x)), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, sqrt(1.0), 1.0))))).x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(pow(float(53087u), -6313.9024)))))), true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.38), _GLF_FUZZED(-37.21)), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, injectionSwitch.y)), (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY((0.0 + (injectionSwitch.y)) * _GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), (normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, 1.0))) * mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), 0.0), vec2(1.0, 0.0))), ((0.0 + (injectionSwitch.y)) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)))), dot(vec2(round(length(normalize(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)))) - 0.0))))), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))) + (injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8783.9923) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))))), true, false, false)), true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8080.9330)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0))).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))), 0.0 + (injectionSwitch.y)))), true)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))))))))))) || false), false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7958.4807)), vec2(_GLF_FUZZED(87.44), (injectionSwitch)[1]), bvec2(false, true))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0)))))), true)))))))))))) || false), false, false, false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[2]), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[2]), clamp(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[2]), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[2]), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[2]))))))) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), 0u, 0u)))[1], gl_NumWorkGroups[2]), (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])) | uvec3(0u, 0u, 0u)))[1], gl_NumWorkGroups[2])) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))[1], min(gl_NumWorkGroups[1], gl_NumWorkGroups[1]))) / 1u), gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | (gl_NumWorkGroups[0])), gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))), 1u * ((_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | (gl_NumWorkGroups[0])), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))), max(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))), _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))))), 1u * ((_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1))], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups[2]), 0u ^ (~ (gl_NumWorkGroups[2]))))), uint(uvec2(gl_NumWorkGroups[2], _GLF_IDENTITY(1u, (1u) << 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups[2], 1u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) ^ (uvec2(gl_NumWorkGroups[2], 1u)))))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(80528u, 99435u, _GLF_IDENTITY(72926u, 1u * (_GLF_IDENTITY(72926u, clamp(72926u, 72926u, 72926u)))))) : gl_NumWorkGroups))[2], 1u))))))) - 0u)))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uint(gl_NumWorkGroups[2]))), uint(uvec2(gl_NumWorkGroups[2], 1u))))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(gl_NumWorkGroups[1], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), clamp(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> 0)], min(_GLF_IDENTITY(gl_NumWorkGroups[1], min(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (gl_NumWorkGroups[1])))), gl_NumWorkGroups[1]))), uint(gl_NumWorkGroups[1]))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) << (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u)))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u)))), 0u + (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) | 0u) | ((_GLF_IDENTITY(uint(gl_NumWorkGroups[_GLF_IDENTITY(1, 1 * (1))]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[1]), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))) >> 0u)))))), (uint(gl_NumWorkGroups[1])) | (uint(gl_NumWorkGroups[1]))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), clamp(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> 0)], min(_GLF_IDENTITY(gl_NumWorkGroups[1], min(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (gl_NumWorkGroups[1])))), gl_NumWorkGroups[1]))), uint(gl_NumWorkGroups[1]))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) << (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u)))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u)))), 0u + (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) | 0u) | ((_GLF_IDENTITY(uint(gl_NumWorkGroups[_GLF_IDENTITY(1, 1 * (1))]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[1]), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))) >> 0u)))))), (uint(gl_NumWorkGroups[1])) | (uint(gl_NumWorkGroups[1]))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), clamp(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> 0)], min(_GLF_IDENTITY(gl_NumWorkGroups[1], min(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (gl_NumWorkGroups[1])))), gl_NumWorkGroups[1]))), uint(gl_NumWorkGroups[1]))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) << (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u)))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u)))), 0u + (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) | 0u) | ((_GLF_IDENTITY(uint(gl_NumWorkGroups[_GLF_IDENTITY(1, 1 * (1))]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[1]), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))) >> 0u)))))), (uint(gl_NumWorkGroups[1])) | (uint(gl_NumWorkGroups[1]))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), clamp(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> 0)], min(_GLF_IDENTITY(gl_NumWorkGroups[1], min(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (gl_NumWorkGroups[1])))), gl_NumWorkGroups[1]))), uint(gl_NumWorkGroups[1]))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) << (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u)))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u)))), 0u + (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (~ (_GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), 0u ^ (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) / 1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))), (((_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])))))) | 0u) | ((_GLF_IDENTITY(uint(gl_NumWorkGroups[_GLF_IDENTITY(1, 1 * (1))]), clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[1]), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(gl_NumWorkGroups[1]), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1])), (clamp(uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]), uint(gl_NumWorkGroups[1]))) >> 0u)))))), (uint(gl_NumWorkGroups[1])) | (uint(gl_NumWorkGroups[1]))))))), gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) | (1))], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), clamp(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uint(gl_NumWorkGroups[2])))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(59793) : int(ivec4(0, 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0, clamp(0, 0, 0))))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[1], max(gl_NumWorkGroups[1], gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups[1], max(_GLF_IDENTITY(gl_NumWorkGroups[1], (_GLF_IDENTITY(gl_NumWorkGroups[1], _GLF_IDENTITY(~ (~ (gl_NumWorkGroups[1])), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4014.3041), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)).x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups[1]), max(_GLF_IDENTITY(~ (gl_NumWorkGroups[1]), (~ (gl_NumWorkGroups[1])) / 1u), _GLF_IDENTITY(~ (gl_NumWorkGroups[1]), ~ (~ (~ (gl_NumWorkGroups[1]))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(~ (~ (gl_NumWorkGroups[1])), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) << 0u)) * 1u)))) << 0u), gl_NumWorkGroups[1])))), gl_NumWorkGroups[2])).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], 1u, 1u), (uvec3(gl_NumWorkGroups[0], 1u, 1u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)], _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false)))))))))) || false) ? _GLF_FUZZED(-6191) : 1))) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)]) | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))), 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)])))), gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)]), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-6191) : 1))) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0)) ^ (0)))) / 1)]) | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)])))), gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) | (0 | 0))))) / 1)])), uint(_GLF_IDENTITY(uvec2(~ (max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-6191) : 1))) << _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - (0 >> _GLF_IDENTITY(int(5), int(5)))))) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)]) | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)])))), gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))) + (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)])), 1u), min(uvec2(~ (max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-6191) : 1))) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)]) | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)])))), gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)])), 1u), uvec2(~ (max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-6191) : 1))) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)]) | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) / 1)])))), gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0)))) / 1)])), 1u)))))))), gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])))).x) >> 0u)));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)))) | (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << (0u | 0u))) | (workgroup_size), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) << (0u | 0u))) | (workgroup_size)) >> 0u), min((_GLF_IDENTITY(workgroup_size, (workgroup_size) << (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, ~ (~ (0u))), clamp(0u | _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), 1u * ((~ (0u))))), 0u | _GLF_IDENTITY(0u, ~ (~ (0u))), 0u | _GLF_IDENTITY(0u, ~ (~ (0u)))))))) | (workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) << _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u) | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))) << uvec3(0u, 0u, 0u)))) | 0u), ((_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) << 0u)) * 1u)) << 0u))) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))), max((workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) - 0u)) >> 0u))))), (workgroup_size) << _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u)))) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), clamp((_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | 0u), (0u | 0u)))), ((_GLF_IDENTITY((0u | 0u), clamp((_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | 0u), (0u | 0u))))) << 0u)), max(_GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY((0u | 0u), ((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u)) | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))), (0u | 0u), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))))) | 0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)), (subgroup_id) | (subgroup_id))) : (workgroup_size) << _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u)) | (_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((0u | 0u), (0u | 0u), (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))))))))), (workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec3(uvec2(_GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec2(~ (_GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))), 0u)))), (0u | 0u))))), max((workgroup_size) << _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), clamp((0u | 0u), (0u | 0u), (0u | 0u))))), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), clamp((0u | 0u), (0u | 0u), (0u | 0u))))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), clamp((0u | 0u), (0u | 0u), (0u | 0u))))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u)), ((0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(max(max(0u, 0u), max(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : max(max(0u, 0u), max(0u, 0u)))))) | 0u), (_GLF_IDENTITY(0u | 0u, min(0u | 0u, _GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u), 0u | 0u))))), (0u | 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))) | (uvec2(_GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))), (true ? _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))) : _GLF_FUZZED(workgroup_id))), max((workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ~ (~ (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) << (0u ^ 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))) - 0u)) >> 0u) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, clamp(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))))), (0u | 0u), (0u | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ~ (~ (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) << (0u ^ 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))) - 0u)) >> 0u) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, clamp(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))))), (0u | 0u), (0u | 0u))))) >> (0u | 0u))), (workgroup_size) << _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))), (0u | 0u), (0u | 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (workgroup_size), min((_GLF_IDENTITY(workgroup_size, (workgroup_size) << (0u | 0u))) | (workgroup_size), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << (_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0u : _GLF_FUZZED(workgroup_id))))))))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))))) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) && true))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true)))))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true))))))))))))))), false || (! (_GLF_DEAD(false)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false), false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(int(4))), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, 0u ^ (read_2))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))), uint(uvec2(uint(read_1 == read_2), 1u)))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), min(1u, 1u))))))))))) >> 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, false, true)))), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2), 1u)))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), 1u, 0u, 1u)) | (uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), 1u, 0u, 1u))))), ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) ^ 0u, ((~ (1u)) ^ 0u) ^ 0u))))))))))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(uvec2(uint(read_1 == read_2), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), uint(uvec2(uint(read_1 == read_2), 1u)))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (1u) ^ 0u)))))))))) >> 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_2, min(read_2, read_2))))), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (0u | (1u ^ 1u)) | (1u)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_2, min(read_2, read_2))))), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (0u | (1u ^ 1u)) | (1u)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))))))))) << 0u) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) >> 0u)), uint(uvec2(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), clamp(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))))))) : _GLF_FUZZED(num_workgroup)))), 1u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), (uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u)) / uvec2(1u, 1u))))) | (read_1)) == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(read_1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) || false)))))))))))), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))), ((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u)))))) | ((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), min((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)))), (bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))))) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)))), (bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))))) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)))), (bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2))))) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))) && true), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))) && true), false, false))) && true)))))) || false))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true))))))) && true)))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-132.335))))))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-132.335))))))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2)))))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u))), true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))) && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))), 1u), (_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u))), true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))) && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))), 1u), max(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u))), true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))) && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))), 1u), uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u))), true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))) && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))), 1u)))) - uvec2(0u, 0u))), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(next_virtual_gid) : read_1)) == read_2)))))))), 1u)), clamp(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u), ~ (~ (uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-64.33)), vec2(_GLF_FUZZED(vec3(-3603.9544, 3.9, -4.1).r), (injectionSwitch)[1]), bvec2(false, true))).y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0))[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0))[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && _GLF_IDENTITY((true && (read_1 == read_2)), ! (! (_GLF_IDENTITY((true && (read_1 == read_2)), false || ((true && (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), (true ? (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))))))))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), true && (true && (read_1 == read_2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))) && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false))))))))))))) || false)))), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false, true)))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6457.2435, 2.9)) : injectionSwitch))[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false, true)))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6457.2435, 2.9)) : injectionSwitch))[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))), uint(uvec4((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false, true)))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6457.2435, 2.9)) : injectionSwitch))[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))), 1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false, true)))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6457.2435, 2.9)) : injectionSwitch))[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u))))), ((_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false, true)))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6457.2435, 2.9)) : injectionSwitch))[1]))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2))))), 1u)))))) | 0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) : _GLF_FUZZED(read_1)))))))), ~ (~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)), uint(uvec2(uint(read_1 == read_2), 1u)))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2))))))), true, false)), true, true, false))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) / 1u)) + 0u), _GLF_IDENTITY(true && (read_1 == read_2), (_GLF_IDENTITY(true && (read_1 == read_2), true && (_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && (read_1 == read_2), true, false)))))) || false))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) << 0u), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(1u * (read_1), min(_GLF_IDENTITY(1u * (read_1), (1u * (read_1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u * (read_1), (1u * (read_1)) | (1u * (read_1)))))) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u))), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(8u)))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), _GLF_IDENTITY((false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) && true, ((false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true && (read_1 == read_2))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true && (read_1 == read_2))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true && (read_1 == read_2))), false, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))) && true) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), _GLF_IDENTITY(true, ! (! (true))), false)), true && (bool(bvec3(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), true, false)))))), true, false)), true, true, false))))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(_GLF_IDENTITY(bvec2(true && (read_1 == read_2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(true && (read_1 == read_2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), true)))))))))))))), 1u)), ~ (~ (uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(_GLF_IDENTITY(bvec2(true && (read_1 == read_2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(true && (read_1 == read_2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), false))))))))), 1u))))), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))), false)))))))), 1u)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), true && (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), false))))) || false))))))), 1u), uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2, (read_1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2)))))), false, true), true))))))))), false))))) || false))))))), 1u))))), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (read_1)), (_GLF_IDENTITY(read_1, 1u * (read_1))) - 0u) == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, true), bvec3(bvec4(bvec3(read_1 == read_2, true, true), true))))), _GLF_IDENTITY(true, ! (! (true))) && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(8u))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(uvec2(uint(read_1 == read_2), 1u)), (uint(uvec2(uint(read_1 == read_2), 1u))) | (uint(uvec2(uint(read_1 == read_2), 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(uvec2(uint(read_1 == read_2), 1u)), (uint(uvec2(uint(read_1 == read_2), 1u))) | (uint(uvec2(uint(read_1 == read_2), 1u))))), uint(uvec4(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(uvec2(uint(read_1 == read_2), 1u)), (uint(uvec2(uint(read_1 == read_2), 1u))) | (uint(uvec2(uint(read_1 == read_2), 1u))))), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(uvec2(uint(read_1 == read_2), 1u)), (uint(uvec2(uint(read_1 == read_2), 1u))) | (uint(uvec2(uint(read_1 == read_2), 1u))))), uint(uvec4(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(uvec2(uint(read_1 == read_2), 1u)), (uint(uvec2(uint(read_1 == read_2), 1u))) | (uint(uvec2(uint(read_1 == read_2), 1u))))), 1u, 0u, 0u))))) | 0u)))))))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size)))))), ! (! (_GLF_IDENTITY(true, false || (true)) && (read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size))))))))))))), 1u), clamp(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2))))))), 1u), (uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), false), false)))))))))), 1u)) | _GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), ((uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, (0u) << 0u) | (read_1)), read_1)) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))) | (_GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) * (1u | 1u)) == read_2))))), 1u)), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), ((uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))) >> uvec2(0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, true && (true)) && (read_1 == read_2))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) >> 0u))), (uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, true && (true)) && (read_1 == read_2))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) >> 0u)))) >> (uvec2(147043u, 10274u) & uvec2(0u, 0u))), uvec2(uvec4(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))), 1u), 0u, 0u)))))), _GLF_IDENTITY(clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), min(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))), max(clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, false, true))), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), _GLF_IDENTITY(clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), _GLF_IDENTITY(clamp(clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) && true))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) && true))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)))), (clamp(clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) && true))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) && true))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u))))))))))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), (0u | 0u) | (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) == _GLF_IDENTITY(read_2, min(read_2, read_2)), false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, true && (true)) && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), max(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) : _GLF_FUZZED(next_virtual_gid))) == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), (0u | 0u) | (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! ((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) == _GLF_IDENTITY(read_2, min(read_2, read_2)), false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, true && (true)) && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), max(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) : _GLF_FUZZED(next_virtual_gid))) == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == read_2), false))))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 0u + (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), uint(uvec2(uint(read_1 == read_2), 1u)))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(true && (read_1 == read_2), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && (read_1 == read_2), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && (read_1 == read_2), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) >> 0u), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, 1u * (read_1)))) == read_2), ! (! (true && (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u)) : _GLF_IDENTITY(read_1, 1u * (read_1)))) == read_2)))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))) || false)) || false)))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), 1u))), (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), 1u)))) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), false || (_GLF_IDENTITY(true && (read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), ((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false))))) && true)) && true))) || false))))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) >> 0u), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false))), true && (read_1 == read_2))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, false)))))))) || false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, bool(bool(false))))))))))) || false)) || false)))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, false)))))))) || false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, bool(bool(false))))))))))) || false)) || false))))))) >> (176022u & 0u)), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2, bool(bvec4(read_1 == read_2, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), uint(read_1 == read_2))), 1u))))))))))), 0u | ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(true && (read_1 == read_2), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && (read_1 == read_2), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && (read_1 == read_2), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) >> 0u), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_1, 1u * (read_1)))) == read_2), ! (! (true && (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u)) : _GLF_IDENTITY(read_1, 1u * (read_1)))) == read_2)))))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))) || false)) || false)))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), 1u))), (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), 1u)))) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), false || (_GLF_IDENTITY(true && (read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false)))), ((_GLF_IDENTITY(true && (read_1 == read_2), bool(bvec3(true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) == read_2)) || false)) || _GLF_IDENTITY(false, (false) && true)), false, false))))) && true)) && true))) || false))))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))) >> 0u), 1u)), clamp(uint(uvec2(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false))), true && (read_1 == read_2))))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, false)))))))) || false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, bool(bool(false))))))))))) || false)) || false)))))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, false)))))))) || false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), true, false)), ! (! (bool(bvec3((read_1 == read_2), true, _GLF_IDENTITY(false, bool(bool(false))))))))))) || false)) || false))))))) >> (176022u & 0u)), 1u)), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), 1u))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2, bool(bvec4(read_1 == read_2, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), uint(read_1 == read_2))), 1u)))))))))))))))))))) >> 0u))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(uvec2(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) : read_1)) == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 1u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2), 1u), max(_GLF_IDENTITY(uvec2(uint(read_1 == read_2), 1u), _GLF_IDENTITY(clamp(uvec2(uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2), 1u), _GLF_IDENTITY(uvec2(uint(read_1 == read_2), 1u), max(uvec2(uint(read_1 == read_2), 1u), uvec2(uint(read_1 == read_2), 1u))), uvec2(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floatBitsToUint(vec2(-204.444, -1.1))) : clamp(uvec2(uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, 0u | (read_1)), read_1)) == read_2), 1u), _GLF_IDENTITY(uvec2(uint(read_1 == read_2), 1u), max(uvec2(uint(read_1 == read_2), 1u), uvec2(uint(read_1 == read_2), 1u))), uvec2(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), 1u))))), uvec2(uint(read_1 == read_2), 1u))))))))))) >> 0u)), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u)))) >> 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (1u) | 0u))))), ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (1u) | 0u)))))) | ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(1u, (1u) | 0u))))))) >> 0u)) << _GLF_IDENTITY(0u, (0u) - 0u)))))) ^ 0u) + _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) ? _GLF_FUZZED(findMSB((read_2 >> 187718u))) : 1)), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(next_virtual_gid)), (false ? _GLF_FUZZED(num_workgroup) : uint(uint(next_virtual_gid)))), uint(uvec2(uint(uint(next_virtual_gid)), 1u))))) << 0u), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) << 0u, ~ (~ ((next_virtual_gid) << 0u))))) - 0u)))], _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY(0u, (0u) | (0u))) == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   subgroupAll(true);
  }
}
