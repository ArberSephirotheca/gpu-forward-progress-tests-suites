#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base;
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz = GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 + (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.z = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), uint(uvec2(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), 1u)))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-269.877)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(604.276)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.1)))) > injectionSwitch.y)))))), true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         break;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 else
  {
   GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z = subgroup_size;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-28.36) : injectionSwitch.x)), injectionSwitch.x)), 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(-89.12, 3.4, -2.9), vec3(19.39, 6136.1908, -6.4))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y)) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)) && true))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(2.9, -1.5)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || false))))
  barrier();
 GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.z = _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.w, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.w) << 0u)) | ((0u & 95936u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), _GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(~ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(~ (gl_NumWorkGroups))))), (true ? _GLF_IDENTITY(uvec3(uvec3(~ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(~ (gl_NumWorkGroups))))) : _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id)))))))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-68063) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, true)))) && true))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false, false))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) << 0u))) : _GLF_FUZZED(clamp(subgroup_local_id, 138386u, 15023u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 1.0)), float(mat4x2(float(vec3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8)))))), 1.0, 0.0, 0.0, length(0.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w = workgroup_base;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-364.711)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w) - 0u) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) : GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid)).z)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, uint(uint(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - 0u) + _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z)), (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))) | (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z)))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w))))) - _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) / 1u))) + GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (true ? GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z : _GLF_FUZZED((floatBitsToUint(-68.86) % num_workgroup)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, clamp(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, clamp(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).z, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, clamp(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).z))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, clamp(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).z, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, clamp(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).z) * 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, uvec3(0u, 0u, 0u) + (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)).y) ^ 0u) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z) | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, uint(uvec3(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 0u, 0u)))))) >> _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) : GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)), GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))).xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).y) >> 0u, 0u | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) >> 0u))), _GLF_IDENTITY((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u, ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u))) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u), (uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u)) * uvec2(1u, 1u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) : GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)), GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))).xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).y) >> 0u, 0u | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) >> 0u))), _GLF_IDENTITY((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u, ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u))) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u), (uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u)) * uvec2(1u, 1u))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) : GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)), GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))).xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).y) >> 0u, 0u | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) >> 0u))), _GLF_IDENTITY((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u, ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u))) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u), (uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) : GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)), GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))).xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz), (uvec3(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)) ^ uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).y) >> 0u, 0u | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) >> 0u))), _GLF_IDENTITY((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u, ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) | ((GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u))) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u), (uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.y) ^ 0u) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z, 1u)) * uvec2(1u, 1u))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, min(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, min(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz.z, 1u * (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, min(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz.z))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1), clamp((false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1), (false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1), (false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1))), (false ? _GLF_FUZZED(mix(35179, 88170, true)) : 1))))) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z);
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid));
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x), ~ (~ ((GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x)))) | 0u);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0 ^ ((1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0 ^ ((1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0 ^ _GLF_IDENTITY(((1) / int(_GLF_ONE(1.0, injectionSwitch.y))), (((1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)))) ^ 0), _GLF_IDENTITY(1, ~ (~ (1))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(0), int(0))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.w], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true)))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true, true), true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y = read_1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y = read_1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y = _GLF_IDENTITY(read_1, uint(uvec4(read_1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))), (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y = read_1) / 1u)) * 1u)) | 0u);
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))))) && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! ((false)))), false))))) || false)))))), false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_2, 0u)), 0u + (uint(uvec2(read_2, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(read_2, 0u))), 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(read_2, 0u))), 1u, 0u)))))), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_2, 0u)), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u)))))))) | 0u))), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_2, 0u)), 0u + (uint(uvec2(read_2, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(read_2, 0u))), 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(read_2, 0u))), 1u, 0u)))))), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_2, 0u)), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u)))))))) | 0u)))), ~ (~ (~ (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), 0u), (false ? _GLF_FUZZED(uvec2(162960u, 128659u)) : uvec2(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), 0u)))), 0u + (uint(uvec2(read_2, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(6u), uint(6u)))), 1u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 122725u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, uaddCarry(workgroup_size, virtual_gid, subgroup_size), -54729, 48632)) : _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_local_id))))), 0u))), 1u, 0u), _GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicMin(workgroup_base, workgroup_base)))), _GLF_IDENTITY(1u, (1u) / 1u))), 1u, 1u), ~ (~ (uvec4(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicMin(workgroup_base, workgroup_base)))), _GLF_IDENTITY(1u, (1u) / 1u))), 1u, 1u)))) * (uvec4(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(119293u, 54217u)) : uvec2(read_2, 0u))), 1u, 0u)))))), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))))))), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_2, 0u)), 0u + (uint(uvec2(read_2, 0u)))), _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), _GLF_IDENTITY((uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u))), 0u ^ ((uint(uvec2(read_2, 0u))) | (uint(uvec2(read_2, 0u)))))))))) | 0u)))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) | (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, ((1) + 0) ^ (0 | 0)))) >> _GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, ((1) + 0) ^ 0)), _GLF_IDENTITY(1, (1) + 0))) < GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.z)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(injectionSwitch.y, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x, (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x) | 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))), max(_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))), 0u ^ (_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))), min(clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))), clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))))))), clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid) | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid)).y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))) == GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)) == _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id) | (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)), GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz.x), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)) == GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x), bool(bvec3(bool(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))) << 0u, max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))) << 0u, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))) << 0u))))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)))) == GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz.x), true, true)))))))) + 1, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(mix(7.2, -7.1, false)))))), (bool((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -74.42))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (bool((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-849.934)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(7.3) : abs(0.0))), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(7.3) : abs(0.0))), 1.0, 1.0)))) * 1.0) > injectionSwitch.y))) && true))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6099.6940))) > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)) && true))), ! (! ((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), float(mat4(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)) && true)))))))) && true))))))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x, float(mat2(injectionSwitch.x, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(963.427)), bool(false)))) / 1.0), 1.0))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(3.2, _GLF_IDENTITY(3.2, (3.2) - 0.0)))), _GLF_FUZZED((-804.344 / _GLF_IDENTITY(-6497.5391, mix(float(-6497.5391), float(_GLF_FUZZED(4.5)), bool(false)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true))), ((! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.2), _GLF_IDENTITY(float(mat4x3(_GLF_FUZZED(3.2), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0) + (float(mat4x3(_GLF_FUZZED(3.2), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / -6497.5391))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2916.7224) : injectionSwitch.y))))) && true)))) && true)) || false))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0)))))) && true, bool(bvec3((bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0)))))) && true, false, false)))), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / _GLF_IDENTITY(-6497.5391, (_GLF_IDENTITY(-6497.5391, clamp(-6497.5391, -6497.5391, _GLF_IDENTITY(-6497.5391, max(-6497.5391, -6497.5391))))) - 0.0)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-205.445)), bool(false)))), bvec2(true, true))))).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0)))))) && true, bool(bvec3((bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0)))))) && true, false, false)))), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-804.344 / _GLF_IDENTITY(-6497.5391, (_GLF_IDENTITY(-6497.5391, clamp(-6497.5391, -6497.5391, _GLF_IDENTITY(-6497.5391, max(-6497.5391, -6497.5391))))) - 0.0)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-205.445)), bool(false)))), bvec2(true, true))))).x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), false, false, false)))))))))), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y) || false)))) && true)))))))))), false, false)))), false || (bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)))).y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))) && true, ((bool((injectionSwitch.x > injectionSwitch.y))) && true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))) && true, ((bool((injectionSwitch.x > injectionSwitch.y))) && true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))) && true, ((bool((injectionSwitch.x > injectionSwitch.y))) && true) || false)), false, false, false))), true, true, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), false, false)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), false, false)))) && true)), ! (! ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y)), false, false)))) && true))))))))))))))), bool(bvec3(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (bool((injectionSwitch.x > injectionSwitch.y)))), (bool((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))).x, abs(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, 868.252)) : injectionSwitch)).y))) && true)))))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  return;
                 barrier();
                }
               else
                {
                }
              }
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, true, true)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, true, true)))))))))))))), bool(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), bool(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))), false)))) && true) && true))) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acosh(4.7))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             subgroupAll(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x, (GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.x) / 1u)], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y), ~ (~ ((GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y))))), GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_1subgroup_sizevirtual_gid.y)) == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz)), (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id.xyz, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_65_3_1_17GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_idsubgroup_local_id)).xyz))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - (-65824 & 0)), 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(588.110), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9786.3592)), bvec2(true, false))).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(588.110), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9786.3592)), bvec2(true, false))).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(588.110), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9786.3592)), bvec2(true, false))).y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(588.110), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9786.3592)), bvec2(true, false))).y)) || false))))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
            barrier();
           barrier();
          }
         subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, false || (false)), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false)))) || false))));
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(373.611)) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x)))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(atan(373.611), max(atan(373.611), _GLF_IDENTITY(atan(373.611), (atan(373.611)) - 0.0)))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x, (false ? _GLF_FUZZED(45.41) : false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x, (false ? _GLF_FUZZED(45.41) : false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x)), _GLF_IDENTITY(false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x, (false ? _GLF_FUZZED(45.41) : false ? _GLF_FUZZED(8016.0280) : injectionSwitch.x)))))))) > injectionSwitch.y))))) || false), _GLF_IDENTITY(true, ! (! (true))), true)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true), true, false))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = (51029 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-282.409)))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-282.409)))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_WRAPPED_IF_FALSE(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_WRAPPED_IF_FALSE(false)))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_WRAPPED_IF_FALSE(false))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, abs(1.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (false ? _GLF_IDENTITY(_GLF_FUZZED(99815), 0 ^ (_GLF_FUZZED(99815))) : ~ (_injected_loop_counter ++))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(704.872, 335.217, 71.73, -8.0).t)), bool(false)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false, false))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-75.20, -801.276)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_FUZZED(301.748)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-75.20, -801.276), mix(vec2(_GLF_FUZZED(vec3(7.8, 3.2, 72.69).g), _GLF_FUZZED(float(-34775))), vec2((vec2(-75.20, -801.276))[0], (vec2(-75.20, -801.276))[1]), bvec2(true, true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-75.20, -801.276), mix(vec2(_GLF_FUZZED(vec3(7.8, 3.2, 72.69).g), _GLF_FUZZED(float(-34775))), vec2((vec2(-75.20, -801.276))[0], (vec2(-75.20, -801.276))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(true, true))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-75.20, _GLF_IDENTITY(-801.276, _GLF_IDENTITY(float(float(_GLF_IDENTITY(-801.276, (false ? _GLF_FUZZED(6.7) : -801.276)))), max(float(float(_GLF_IDENTITY(-801.276, (false ? _GLF_FUZZED(6.7) : -801.276)))), float(float(_GLF_IDENTITY(-801.276, (false ? _GLF_FUZZED(6.7) : -801.276)))))))), mix(vec2(_GLF_FUZZED(vec3(7.8, 3.2, 72.69).g), _GLF_FUZZED(float(-34775))), vec2((vec2(-75.20, -801.276))[0], (vec2(-75.20, -801.276))[1]), bvec2(true, true)))))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - vec2(0.0, 0.0)).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - vec2(0.0, 0.0)).y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - vec2(0.0, 0.0)).y)), false, true), true)))))))
  barrier();
}
