#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.2) : 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false || _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (! (_GLF_IDENTITY(false, false || (false)))) || false))), true, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), false, true)))) && true)) || false), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))), true, false, true)), true, false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true, false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true, false, _GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true)), ! (! (bool(_GLF_IDENTITY((false) || false, ((false) || false) && true)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true)), ! (! (bool(_GLF_IDENTITY((false) || false, ((false) || false) && true))))))) && true))))))))), true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, true)))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, true)))), true, false, false)))))))), bool(bvec4(! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), true, true, true)))))))) || false))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(7877.0815), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))[0], _GLF_FUZZED((-1.2 * -245.552))), bvec2(true, false))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((float(141841u)))), float(0.0), bool(true))), injectionSwitch.x)))))) >> 0)])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3025.0529), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false))).y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false, false)))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true)))), (false ? _GLF_FUZZED(injectionSwitch) : abs(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5764.0761)), bool(false))), 0.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)), clamp(vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)), mix(vec2((vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)))[0], _GLF_FUZZED(float(-71185))), vec2(_GLF_FUZZED((789.291 - 5.3)), (vec2(_GLF_FUZZED((-3279.1598 - 9.2)), _GLF_FUZZED(8.2)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true)))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)) && true) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))) && true)) && true)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-22.57), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-22.57), true ? injectionSwitch.y : _GLF_FUZZED(-22.57), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-22.57), (true ? injectionSwitch.y : _GLF_FUZZED(-22.57)) / 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(32.77) : injectionSwitch.y)))))), true)), (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))), ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) && true)) || false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), false || ((! (_GLF_IDENTITY(true, true && (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) || false) ? _GLF_FUZZED(vec2(-95.39, -3280.1660)) : injectionSwitch)).x, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) || false) ? _GLF_FUZZED(vec2(-95.39, -3280.1660)) : injectionSwitch)).x : _GLF_FUZZED(1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), sqrt(0.0), 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (~ (clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))) : _GLF_FUZZED(184131u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, 0 + (1))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u)))))) | 0u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec2(1, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), max(int(int(_GLF_IDENTITY(1, 0 + (1)))), int(int(_GLF_IDENTITY(1, 0 + (1)))))))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 0u))), (subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, 0 + (1))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size))) | 0u), (subgroup_local_id + 1) % subgroup_size)))) - 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), max(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(184131u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (_GLF_IDENTITY(1, 0 + (1))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u), (subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 + (64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (bool(bvec2(false, true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || ((! (! (bool(bvec2(false, true)))))))), ! (! (! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || ((! (! (bool(bvec2(false, true)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || ((! (! (bool(bvec2(false, true)))))))), ! (! (! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || ((! (! (bool(bvec2(false, true)))))))))))), true))))), false || (_GLF_IDENTITY(! (! (! (! (bool(bvec2(false, true)))))), bool(bvec3(! (! (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), _GLF_IDENTITY(! (! (! (! (bool(bvec2(false, true)))))), false || (! (! (! (! _GLF_IDENTITY((bool(bvec2(false, true))), ! (! (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) || false)))))))))))), false, false))))))), (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(false, true))))), (! (! (! (bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))) || false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), _GLF_IDENTITY(false || ((! (! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), ! (! ((! (! (bool(bvec2(false, true)))))))))))))), (false || ((! (! (bool(bvec2(false, true))))))) || false)) || false))), ! (! (! (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))), false || ((! (! (bool(bvec2(false, true)))))))))))))), false || (_GLF_IDENTITY(! (! (! (! (bool(bvec2(false, true)))))), bool(bvec3(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, true)))), bool(bvec4((! (bool(bvec2(false, true)))), false, true, false))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))) || false), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))), true && (bool(bvec2(false, true))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(num_workgroup))), 4, _GLF_IDENTITY(64, (64) | 0), 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (_GLF_IDENTITY(64, (64) << 0)), (false ? _GLF_FUZZED(-98817) : (64) | (_GLF_IDENTITY(64, (64) << 0))))), _GLF_IDENTITY(64, (64) ^ 0))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4082.5161, -9148.2986)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true))))), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), _GLF_IDENTITY(((~ (read_2))) << 0u, (((~ (read_2))) << 0u) * 1u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1, (read_1) + 0u) == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))) + 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (0u | 0u) ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), _GLF_IDENTITY((_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | ((~ (read_2))))), (true ? (_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | ((~ (read_2))))) : _GLF_FUZZED(166490u))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), (true ? _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)), clamp(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)), _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)), ~ (~ (_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))))) << 0u)))) : _GLF_FUZZED(next_virtual_gid))))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (read_2)), (~ (~ (read_2))) >> 0u))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))) + 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, 0u | (read_2)))))))), min(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 1u, 0u)), (uint(uvec3(read_2, 1u, 0u))) | (uint(uvec3(read_2, 1u, 0u))))), ~ (~ (read_2))), (0u | 0u) ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | ((~ (read_2))))) << 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), (uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) + 0u), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u), ~ (~ (~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))))))) + 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (0u | 0u) ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | ((~ (read_2))))) << 0u))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)) ^ 0u))))))), uint(uvec4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))), 0u ^ (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))))) + 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (0u | 0u) ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))), uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | ((~ (read_2))))) << 0u))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) + 0u)), uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) << 0u)))))), 1u, 1u, 1u)))))) + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), (0u & 174344u) ^ (_GLF_IDENTITY((~ (read_2)), max((~ (read_2)), (~ (read_2))))))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)) || false)), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | _GLF_IDENTITY(((~ (read_2))), ~ (~ (((~ (read_2))))))))), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))) + 1), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), min(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))) | (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), min(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))) | (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), min(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))) | (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))))))))) | 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), min(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), _GLF_IDENTITY(min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u))))))))))), (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))) | (min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))))))))), clamp(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((~ (read_2))) | (_GLF_IDENTITY((~ (read_2)), ((~ (read_2))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) >> 0u)), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u))) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))))))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))))) << 0u), read_2, _GLF_IDENTITY(read_2, min(read_2, read_2)))), ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, (1u & 1u), 0u))), _GLF_IDENTITY((read_1) | (read_1), ((read_1) | (read_1)) * 1u))) >> 0u) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))))), max((~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))))), (~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))))))))))))))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u))), false)))), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u), uint(uvec2(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u), 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read_1), ~ (~ ((read_1)))), (_GLF_IDENTITY((read_1), ~ (~ ((read_1))))) - 0u)))))) >> 0u, uint(uvec4((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u), 1u, 0u)))))) / 1u)) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))))))))) + 1))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)) || false)), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, ~ (~ (read_2)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_2, ~ (~ (read_2))))), (~ ((_GLF_IDENTITY(read_2, ~ (~ (read_2)))))) | (~ ((_GLF_IDENTITY(read_2, ~ (~ (read_2))))))))) / 1u), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)) || false)), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))))) << 0u) + 1), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))), clamp(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u))), (read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), _GLF_IDENTITY(((read_2)) * 1u, clamp(((read_2)) * 1u, ((read_2)) * 1u, ((read_2)) * 1u)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((read_1), ((read_1)) | ((read_1))))) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u)) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (read_1))) | (read_1))) >> 0u))) == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), uint(uvec3(read_2, 0u, 1u)))))))))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)) | (_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), clamp(read_2, read_2, read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), read_2, _GLF_IDENTITY(read_2, min(read_2, read_2)))), ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(166132u))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, (read_2) / 1u), read_2)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2, _GLF_IDENTITY(read_2, 0u ^ (read_2)))), _GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), clamp(uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u))))) >> 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2, _GLF_IDENTITY(read_2, 0u ^ (read_2)))), _GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), clamp(uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u))))) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2, _GLF_IDENTITY(read_2, 0u ^ (read_2)))), _GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), clamp(uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u))))) >> 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2, _GLF_IDENTITY(read_2, 0u ^ (read_2)))), _GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, 1u)), clamp(uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u)), uint(uvec3(read_2, 0u, 1u))))) >> 0u))))))))))))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), min(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) * 1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, min((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, uint(uvec4((_GLF_IDENTITY(read_1, (read_1) | (read_1))) >> 0u, 0u, 1u, 0u)))))) / 1u)) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, _GLF_IDENTITY(1u, (1u) << 0u))))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))))))))), max(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))))))))), _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))), ~ (~ ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))))))))) / 1u))))))))) + 1)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(859.315), _GLF_FUZZED(float(true))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false) || (_GLF_IDENTITY(false, bool(bool(false)))))))), false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}
