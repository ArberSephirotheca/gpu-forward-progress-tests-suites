#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 vec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat3 _f3;
 uint subgroup_local_id;
 vec2 _f4;
 int _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 bvec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 mat3x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 uvec3 _f1;
 uint _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_29 {
 bvec3 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 mat3 _f3;
 bvec4 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 _GLF_struct_31 _f1;
 uvec2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
 bvec4 _f1;
 ivec2 _f2;
 bvec4 _f3;
 mat2x4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 uvec2 _f1;
 uint _f2;
 ivec2 _f3;
 bvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_19 {
 float _f0;
 vec4 _f1;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 _GLF_struct_18 _f1;
 uint subgroup_id;
 _GLF_struct_19 _f2;
 mat2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 float _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 vec3 _f1;
 mat3 _f2;
 uvec4 _f3;
 bvec3 _f4;
 mat2x3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 vec2 _f1;
 int _f2;
 mat3x4 _f3;
 vec4 _f4;
 mat4x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat4x3 _f2;
 _GLF_struct_14 _f3;
 bool _f4;
 _GLF_struct_15 _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 _GLF_struct_17 _f1;
 vec2 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 bool _f1;
 vec3 _f2;
 vec2 _f3;
 ivec3 _f4;
 bvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_7 {
 bool _f0;
 bvec3 _f1;
 ivec2 _f2;
 ivec2 _f3;
 vec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 uvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 uint read_1;
 vec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 mat4 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat4 _f3;
 _GLF_struct_0 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(vec4(1.0), _GLF_struct_17(_GLF_struct_12(mat4(1.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6458.1773)), bool(false))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), 1, mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))), vec4(1.0), mat4x2(1.0), vec3(1.0)), _GLF_struct_13(mat2x3(1.0), mat2(1.0), uvec4(1u)), mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_14(ivec4(1), vec3(1.0), mat3(1.0), uvec4(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat2x3(1.0), ivec3(1)), true, _GLF_struct_15(bvec4(true), mat2x3(1.0), mat3x4(1.0), mat4x3(1.0)), _GLF_struct_16(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.0 * 689.417))), bool(false)))), mat2x4(1.0), mat3x4(1.0), mat3x4(1.0), 1.0, ivec2(1))), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.2), min(_GLF_IDENTITY(_GLF_FUZZED(0.2), 1.0 * (_GLF_FUZZED(0.2))), _GLF_IDENTITY(_GLF_FUZZED(0.2), min(_GLF_FUZZED(0.2), _GLF_FUZZED(0.2)))))), float(1.0), bool(true))), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_struct_20(mat4x2(1.0), _GLF_struct_18(uvec2(1u)), gl_SubgroupID, _GLF_struct_19(1.0, vec4(1.0)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec4(1.0)), _GLF_struct_24(uvec2(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_struct_21(mat2x3(1.0), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), mat4x2(1.0), uvec2(1u)), _GLF_struct_22(_GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u))))), clamp(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u))))), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u)))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), 0u)), (true ? uvec3(uvec4(uvec3(1u), 0u)) : _GLF_FUZZED(uvec3(187271u, 152510u, 48517u))))) | (uvec3(uvec4(uvec3(1u), 0u))))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))), uvec2(1u), 1u, ivec2(1), bvec2(true), bvec2(true)), _GLF_struct_23(mat3x4(1.0), bvec4(true), ivec2(1), bvec4(true), mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0)), uvec3(1u)), vec2(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(91.51, 6824.6230, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_29(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true), true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), true)))))), _GLF_struct_26(mat3x2(1.0), uvec3(1u), 1u, uvec4(1u)), _GLF_struct_27(mat2x3(1.0), mat3x4(1.0), ivec3(1)), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6428.2235, float(vec2(_GLF_IDENTITY(6428.2235, (false ? _GLF_FUZZED(58.17) : 6428.2235)), 1.0)))), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.66)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(mat2x3(float(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), (0.0) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) / 1.0))))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))] : _GLF_IDENTITY(_GLF_FUZZED(-4839.2520), max(_GLF_FUZZED(-4839.2520), _GLF_FUZZED(-4839.2520))))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))))), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9352.4256)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), _GLF_IDENTITY((0.0), ((0.0)) * 1.0))) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, false))) ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_IDENTITY(_GLF_FUZZED(-4839.2520), min(_GLF_IDENTITY(_GLF_FUZZED(-4839.2520), 1.0 * (_GLF_FUZZED(-4839.2520))), _GLF_IDENTITY(_GLF_FUZZED(-4839.2520), clamp(_GLF_FUZZED(-4839.2520), _GLF_FUZZED(-4839.2520), _GLF_FUZZED(-4839.2520))))))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6428.2235), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(_GLF_IDENTITY(6428.2235, float(float(6428.2235))))) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 1.0 * (_GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-38.81))))))) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6428.2235, clamp(6428.2235, 6428.2235, _GLF_IDENTITY(6428.2235, 1.0 * (6428.2235))))), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))), (_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, float(vec2((0.0) * 1.0, abs(1.0)))))))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false)))))), _GLF_IDENTITY((min((_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))), (_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), (_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(1.1), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_FUZZED(-2.7), _GLF_FUZZED(-9.1)), bvec3(true, false, false)))) / exp(vec3(0.0, 0.0, 0.0))))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))))) / 1.0, ((min((_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) * 1.0)))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))), (_GLF_IDENTITY(_GLF_FUZZED(6428.2235), (_GLF_FUZZED(6428.2235)) * cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(-9748.4106), _GLF_FUZZED(-155.272), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), min(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), (true ? vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))))) : _GLF_FUZZED(vec3(4.0, 5.0, -86.13)))), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))), (_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), mix(vec3(_GLF_FUZZED(1.1), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1], (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[2]), vec3((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.7), mix(float(_GLF_FUZZED(342.135)), float(_GLF_FUZZED(-2.7)), bool(true))), _GLF_FUZZED(-9.1)), bvec3(true, false, false)))) / exp(vec3(0.0, 0.0, 0.0))))[1], (true ? (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))[1] : _GLF_FUZZED(-4839.2520))), _GLF_FUZZED(-3.0)), bvec3(true, true, false))))))) / 1.0) * 1.0))))), float(1.0), bool(true)))) - 0.0)) + 0.0), 1.0))))))) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.8))), 0.0)))), bvec4(true), _GLF_struct_28(mat2x3(1.0), bvec2(true), vec4(1.0))), _GLF_struct_31(_GLF_struct_30(vec2(1.0), mat4x3(1.0)), ivec3(1), mat2x4(1.0), mat3(1.0), gl_SubgroupInvocationID, vec2(1.0), 1, ivec4(1)), uvec2(1u), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), _GLF_IDENTITY((gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0)], injectionSwitch[1])).x)), (gl_WorkGroupSize.x) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID)).x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x) / 1u), gl_WorkGroupID.x))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_25._f3.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))), 0u ^ (subgroup_size)) + _GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_32._f1.subgroup_local_id, 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)))), 1u, 1u)), clamp(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)))), 1u, 1u)), _GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)))), 1u, 1u)), uvec3(0u, 0u, 0u) ^ (~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)))), 1u, 1u)))), _GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (true ? _GLF_struct_replacement_32._f1.subgroup_local_id : _GLF_FUZZED(atomicMin(num_workgroup, 164725u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id))) / 1u)) - 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)), min(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_struct_replacement_32._f1.subgroup_local_id), (0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)) ^ 0u)))), 1u, 1u)), ~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_32._f1.subgroup_local_id)))), 1u, 1u))))))))), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_32._f1.subgroup_local_id, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))))), 1u), ~ (~ (uvec3(_GLF_struct_replacement_32._f1.subgroup_local_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (48311u & 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u))), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, 0u ^ (_GLF_struct_replacement_32._f1.subgroup_local_id)), 1u, 1u), ~ (~ (uvec3(_GLF_struct_replacement_32._f1.subgroup_local_id, 1u, 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_32._f1.subgroup_local_id, 1u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id, (_GLF_struct_replacement_32._f1.subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-971.232), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.6, -3.8)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-29851))), bvec2(true, false)))) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! (bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! (bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))), true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))) || false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_25._f3.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_32._f1.subgroup_local_id + 1) % subgroup_size, 0u | ((_GLF_struct_replacement_32._f1.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0))))), 1))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))))), true && (! (false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)))))) + vec2(0.0, 0.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), (true ? mat2(1.0) * (sqrt(vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(75.27, 156.667))))) * (injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true, ((true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true) || false)), ! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false))), true, false, true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) || false))), true, false, true)))))) && true)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_1(ivec2(1), uvec3(1u), mat2x4(1.0), mat4(1.0), _GLF_struct_0(bvec2(true), mat4(1.0), ivec4(1), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(8.6), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_IDENTITY(_GLF_FUZZED(218.141), (_GLF_FUZZED(218.141)) * 1.0)), vec4((vec4(1.0))[0], _GLF_FUZZED(-3.9), _GLF_FUZZED(179.519), (vec4(1.0))[3]), bvec4(true, false, false, true)))), ivec3(1)), _GLF_struct_4(ivec3(1), _GLF_struct_2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) / 1), 0), vec2(1.0), mat4(1.0)), _GLF_struct_3(mat4(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-54.08) : 1.0))), min(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-54.08) : 1.0))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-54.08) : 1.0))))))), 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), uvec2(1u), mat2x3(1.0))), mat4x3(1.0), _GLF_struct_6(true, _GLF_struct_5(bvec2(true), ivec4(1))), _GLF_struct_10(_GLF_struct_7(true, bvec3(true), ivec2(1), ivec2(1), vec4(1.0), bvec4(true)), _GLF_struct_8(bvec2(true), true, vec3(1.0), vec2(1.0), ivec3(1), bvec4(true), uvec3(_GLF_IDENTITY(1u, (1u) | 0u))), _GLF_struct_9(uvec2(1u), ivec2(1))), mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(14.19))))) > injectionSwitch.y)))))))) || ((false))), ((false)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), ((false)) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), ((false)) && true))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(-9.2, 967.700), 4.4)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.2) : 1.0))), bool(true))), 0.0))), 1.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8735.7099))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8735.7099))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8735.7099))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2(injectionSwitch[1], 1.0, tan(0.0), 0.0)), float(mat4(float(mat2(injectionSwitch[1], 1.0, tan(0.0), 0.0)), tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))) * 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], ((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0]) / 1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(569.933) : injectionSwitch[1]))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))[1]) * 1.0))), mix(vec2(_GLF_FUZZED(5515.4264), _GLF_FUZZED(6293.2555)), vec2(((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(569.933) : injectionSwitch[1]))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))[1]) * 1.0))))[0], ((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(569.933) : injectionSwitch[1]))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))[1]) * 1.0))))[1]), bvec2(true, true)))[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], ((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0]) / 1.0), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(569.933) : injectionSwitch[1]))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))[1]) * 1.0)))[1])), mat2(1.0) * (mat2(1.0) * (vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(399.970)), bool(false)))) * 1.0)))[0], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], max(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], clamp((vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], (vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], (false ? _GLF_FUZZED(-959.553) : (vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0])))), (vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 333.672))))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0]))) / 1.0), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(569.933) : injectionSwitch[1]))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))))[1]) * 1.0)))[1]))))), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(1.0)), bvec2(false, false)))) : _GLF_FUZZED(degrees(injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(61.09), _GLF_IDENTITY(_GLF_FUZZED(8026.5785), (true ? _GLF_FUZZED(8026.5785) : _GLF_FUZZED(15.01)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[0], mix(float((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- 37479))))]), float(_GLF_FUZZED(_GLF_IDENTITY(9653.1430, max(_GLF_IDENTITY(9653.1430, (true ? 9653.1430 : _GLF_FUZZED(-5.0))), 9653.1430)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))))))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2((injectionSwitch)[0], (injectionSwitch)[1])), (vec2(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(8424.7246)))))) * mat2(1.0)), _GLF_IDENTITY((vec2(vec2((injectionSwitch)[0], (injectionSwitch)[1]))) * mat2(1.0), ((vec2(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(61.09), _GLF_FUZZED(8026.5785)), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(61.09), _GLF_FUZZED(8026.5785)), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0)), max(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0)), mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))) : _GLF_FUZZED(exp(3.7)))), exp(0.0), 0.0))))))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), dot(vec3(0.0, exp(0.0), 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0)))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), dot(vec3(0.0, exp(0.0), 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0)))[1]) * exp(0.0))), bvec2(true, true))))))))).y)), false, _GLF_IDENTITY(false, (false) || false), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(949.084)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0))))), (float(vec2(1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0)))))) - 0.0)))) / sqrt(1.0)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_struct_replacement_32._f1.subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), ! (! (_GLF_struct_replacement_32._f1.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_11._f1._f1.read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (next_virtual_gid) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (next_virtual_gid) << 0u)) - 0u)], uint(_GLF_struct_replacement_11._f1._f1.read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(! (false), false, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(! (false), false, false)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(! (false), false, false))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(! (false), false, false)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(! (false), false, false))))))), true, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
