#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(2.2 / -9.6, min(_GLF_IDENTITY(2.2 / -9.6, 0.0 + (_GLF_IDENTITY(2.2 / -9.6, min(2.2 / -9.6, 2.2 / -9.6)))), 2.2 / -9.6)))), _GLF_FUZZED(-288.601)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0 | 0) | (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 1 * (int(_GLF_ONE(1.0, injectionSwitch.y))))), ! (! (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))))))))), ((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1 * (int(_GLF_ONE(1.0, injectionSwitch.y))))), ! (! (! (_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(8.1)), bool(false))))))))))))))) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(3461.5699) : injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(55682u, 28621u, 40381u)) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))) + 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat4x3(vec2(injectionSwitch[0], injectionSwitch[1]), sqrt(1.0), 1.0, sqrt(sqrt(1.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))))))).y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), max((_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(1, (1) << 0)))) | (_GLF_IDENTITY(1, 1 * (1))))) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 | (1)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (~ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) | ((1)))))))), (~ (_GLF_IDENTITY(1, 0 | (1)))), (~ (_GLF_IDENTITY(1, 0 | (1))))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(vec2(315.780, 177.762), vec2(4910.4226, -461.791))) : injectionSwitch)))).x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u)), clamp(uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u)), uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u)), uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u)))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u)) + 0u)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u)) + 0u)))), max(0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u)) + 0u)))), 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (~ (read_1)) >> 0u)) + 0u))))))) >> ((0u ^ 0u) << _GLF_IDENTITY(uint(4u), uint(4u))))) == read_2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_size)), min(~ (_GLF_FUZZED(workgroup_size)), ~ (_GLF_FUZZED(workgroup_size))))))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))))) - _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u) << 0u))))) >> 0u)) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u), (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u)) && true)), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))), (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u)))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((read_1), ((read_1)) * 1u), (~ (read_1)) >> 0u))))), ~ (~ (_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u)))))))) : _GLF_FUZZED(read_2)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) << 0u))) == read_2), (_GLF_IDENTITY(true, ! (! (true))) ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))) - 0u)), (max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u)), (true ? uint(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), _GLF_IDENTITY((~ (read_1)) >> 0u, min(_GLF_IDENTITY((~ (read_1)) >> 0u, ((~ (read_1)) >> 0u) | (_GLF_IDENTITY((~ (read_1)) >> 0u, ((~ (read_1)) >> 0u) | 0u))), (~ (read_1)) >> 0u))))))) == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bool(! (read_1 == read_2))), true && (bool(bool(! (read_1 == read_2))))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u)), (max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size)), uint(uint((true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2)))), ! (! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2)))))))))) : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u)), (true ? uint(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))))) == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u)), (max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), 0u), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), 0u), (uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), 0u)) | uvec2(0u, 0u))))))) - 0u))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-9.2))), injectionSwitch.x))))) | 0u, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u)), (true ? uint(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))))) == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u)), (max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)), ~ (~ (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) ^ 0u)), (true ? uint(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))))) == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, false), bvec3(bvec4(bvec3(read_1 == read_2, false, false), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, false), bvec3(bvec4(bvec3(read_1 == read_2, false, false), true)))), false))))), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u)), (max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(workgroup_size)))) - 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u))))))))))) >> 0u)) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_id)))), uint(5u)))) + 0u)) + 1, 4, 64, 4);
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), 0.0, sqrt(0.0), sqrt(1.0), 1.0)), clamp(float(mat2x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_IDENTITY((sqrt(0.0)), ((sqrt(0.0))) - 0.0) - tan(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))), 1.0)), float(mat2x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6445.7412)), float(1.0), bool(true))), 0.0)), 0.0, sqrt(0.0), sqrt(1.0), 1.0)), float(mat2x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, sqrt(0.0), sqrt(1.0), 1.0))))))), injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) & -74740, int(ivec2(0 & -74740, _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), max((0 ^ 0), (0 ^ 0))), min(_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) ^ 0), (0 ^ 0))))))), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((_GLF_IDENTITY(0 & -74740, ~ (~ (0 & -74740)))), max(_GLF_IDENTITY((0 & -74740), ((0 & -74740)) << 0), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, clamp(_GLF_IDENTITY(-74740, ~ (~ (-74740))), _GLF_IDENTITY(-74740, min(-74740, -74740)), -74740))), int(int((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(1), int(1)))) & -74740)))), 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70638) : max(_GLF_IDENTITY((0 & -74740), 0 ^ ((0 & -74740))), (0 & -74740))))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)))), max(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))), 0)) & -74740), (0 & -74740))), 0)))), _GLF_IDENTITY((ivec3(1, _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), clamp(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), (_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740)))) / 1))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), clamp(max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740))))), 0)))))) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), _GLF_IDENTITY((0 & -74740), (0 | (0 << _GLF_IDENTITY(int(0), int(0)))) ^ ((0 & -74740))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0 & -74740, (0 & -74740) | 0)), (_GLF_IDENTITY(0 & -74740, (false ? _GLF_FUZZED(31439) : _GLF_IDENTITY(0, (0) | 0) & -74740))))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))))) >> _GLF_IDENTITY(int(1), int(1))))))))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)))), int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)), ~ (~ (int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)))))))) / 1), 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, min(-74740, -74740))), max((0 & -74740), (_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-74740, int(ivec2(_GLF_IDENTITY(-74740, clamp(-74740, -74740, -74740)), 1)))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((_GLF_IDENTITY(0 & -74740, ~ (~ (0 & -74740)))), max(_GLF_IDENTITY((0 & -74740), ((0 & -74740)) << 0), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, clamp(_GLF_IDENTITY(-74740, ~ (~ (-74740))), _GLF_IDENTITY(-74740, min(-74740, -74740)), -74740))), int(int((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(1), int(1)))) & -74740)))), 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70638) : max(_GLF_IDENTITY((0 & -74740), 0 ^ ((0 & -74740))), (0 & -74740))))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)))), max(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))), 0)) & -74740), (0 & -74740))), 0)))), _GLF_IDENTITY((ivec3(1, _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), clamp(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), (_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740)))) / 1))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), clamp(max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740))))), 0)))))) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), _GLF_IDENTITY((0 & -74740), (0 | (0 << _GLF_IDENTITY(int(0), int(0)))) ^ ((0 & -74740))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0 & -74740, (0 & -74740) | 0)), (_GLF_IDENTITY(0 & -74740, (false ? _GLF_FUZZED(31439) : _GLF_IDENTITY(0, (0) | 0) & -74740))))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))))) >> _GLF_IDENTITY(int(1), int(1))))))))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)))), int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)), ~ (~ (int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)))))))) / 1), 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, min(-74740, -74740))), max((0 & -74740), (_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-74740, int(ivec2(_GLF_IDENTITY(-74740, clamp(-74740, -74740, -74740)), 1)))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((_GLF_IDENTITY(0 & -74740, ~ (~ (0 & -74740)))), max(_GLF_IDENTITY((0 & -74740), ((0 & -74740)) << 0), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, clamp(_GLF_IDENTITY(-74740, ~ (~ (-74740))), _GLF_IDENTITY(-74740, min(-74740, -74740)), -74740))), int(int((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(1), int(1)))) & -74740)))), 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70638) : max(_GLF_IDENTITY((0 & -74740), 0 ^ ((0 & -74740))), (0 & -74740))))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)))), max(_GLF_IDENTITY((ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))), 0)) & -74740), (0 & -74740))), 0)))), _GLF_IDENTITY((ivec3(1, _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), clamp(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), _GLF_IDENTITY(_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), (_GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740)))) / 1))), 0)), ivec3(0, 0, 0) | ((ivec3(1, _GLF_IDENTITY((0 & -74740), _GLF_IDENTITY(max((0 & -74740), (0 & -74740)), clamp(max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740)), max((0 & -74740), (0 & -74740))))), 0)))))) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), _GLF_IDENTITY((0 & -74740), (0 | (0 << _GLF_IDENTITY(int(0), int(0)))) ^ ((0 & -74740))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((_GLF_IDENTITY(0 & -74740, (0 & -74740) | 0)), (_GLF_IDENTITY(0 & -74740, (false ? _GLF_FUZZED(31439) : _GLF_IDENTITY(0, (0) | 0) & -74740))))), 0)) - ivec3(0, 0, 0)))))), 1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(0, 0, 0))))))))) >> _GLF_IDENTITY(int(1), int(1))))))))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1))) << 0)))), int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & -74740), max((0 & -74740), (0 & -74740))), 0)) - ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)), ~ (~ (int(ivec2(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), int(ivec3(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), 0, 1))), 1)))))))) / 1), 0, 0))))))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 & -74740), 0), (ivec3(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(-74740, min(-74740, -74740))), max((0 & -74740), (_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-74740, int(ivec2(_GLF_IDENTITY(-74740, clamp(-74740, -74740, -74740)), 1)))))), 0)) - ivec3(0, 0, 0))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))))))))))), false, false, true))))))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, ~ (~ (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0)))), min(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0)))), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0))))))))) > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
               atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) ^ 0), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(~ _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((4))), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) ^ 0)), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (_GLF_IDENTITY(4, (4) << 0))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), _GLF_IDENTITY(~ (4), (~ (4)) + 0)))) | 0), 0 + (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)), int(ivec3(_GLF_IDENTITY((~ (4)), min((~ (4)), _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4)))))), 1, 0))) | 0)))) - 0)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), max((4), (4)))) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), int(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), max(0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), min(0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))))))))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))), ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))))) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | 0, int(ivec3((~ (4)) | 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | 0)))))), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 ^ (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), int(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))), int(ivec3(_GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 ^ (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), int(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))), (max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 ^ (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), int(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))))) | (max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 ^ (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), int(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), min(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(~ (4), (~ (4)) | 0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), ((4)) ^ 0), 0, 0, 0)))) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)), 0 | ((~ (4)))) | 0), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (4)) | 0)))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), min(~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2(_GLF_IDENTITY((4), ((4)) | ((4))), 0))), _GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY((4), clamp((4), (4), (4))))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) ^ 0), int(int(~ (4))))))) | 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | 0, max((~ (4)) | 0, _GLF_IDENTITY((~ (4)) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY((~ (4)) | 0, (true ? (~ (4)) | 0 : _GLF_FUZZED(ivec4(84141, -15098, -9616, -77592)[1])))) | (_GLF_IDENTITY((~ (4)) | 0, ((~ (4)) | 0) / 1)))))), 0 + (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), 0 ^ (~ (~ (4))))))))) | 0)))), (max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0))))) >> 0), max(_GLF_IDENTITY(~ (4), (~ (4)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), ~ (~ (~ (4))))) / 1), (~ (4)) | 0), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) | 0)))))))))) >> 0))));
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0))), ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), ! (! (! (_injected_loop_counter < 1)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), _GLF_IDENTITY(! (! (! (_injected_loop_counter < 1))), false || (! (_GLF_IDENTITY(! (! (_injected_loop_counter < 1)), (! (! (_injected_loop_counter < 1))) || false))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))));
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, 1.0 * (1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) | (1 << _GLF_IDENTITY(int(0), int(0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) | (1 << _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) | (1 << _GLF_IDENTITY(int(0), int(0)))))) * 1), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) | (1 << _GLF_IDENTITY(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (((0 | int(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
    }
  }
}
