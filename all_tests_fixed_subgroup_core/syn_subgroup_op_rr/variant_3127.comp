#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), (! (! _GLF_IDENTITY((false), false || ((false))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), (! (! _GLF_IDENTITY((false), false || ((false))))) || false)))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), (! (! _GLF_IDENTITY((false), false || ((false))))) || false)))))))), true)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | 1)))) != (2670 & 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))))))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true), false, false, false)))), (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true), false, false, false)))), (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)) || false)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), true, true, false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7)))))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))));
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(ivec4(~ (~ (1)), 0, (44564 & 0), 1))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((875.914 * vec4(-82.19, 7454.2114, -3029.9823, -2.7).t))), vec2(_GLF_FUZZED(vec3(-8.2, 0.3, 38.55).y), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0), vec2(0.0, 0.0) + _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))))).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((875.914 * vec4(-82.19, 7454.2114, -3029.9823, -2.7).t))), vec2(_GLF_FUZZED(vec3(-8.2, 0.3, 38.55).y), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0), vec2(0.0, 0.0) + _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((875.914 * vec4(-82.19, 7454.2114, -3029.9823, -2.7).t))), vec2(_GLF_FUZZED(vec3(-8.2, 0.3, 38.55).y), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0), vec2(0.0, 0.0) + _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true))))))), true && (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.24, -8.2)) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)))).y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec3((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? vec2(vec3((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec2(-77.11, -77.80))))) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true))))))), (bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec3((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? vec2(vec3((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec2(-77.11, -77.80))))) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y)), true)))))))) && true), true && (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.24, -8.2)) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)))).y))))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), (false ? _GLF_FUZZED(uvec3(152347u, _GLF_IDENTITY(50448u, clamp(_GLF_IDENTITY(50448u, 1u * (50448u)), _GLF_IDENTITY(_GLF_IDENTITY(50448u, (_GLF_IDENTITY(50448u, (50448u) - 0u)) / 1u), (50448u) | (50448u)), 50448u)), 55512u)) : gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_IDENTITY(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), min(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)))))), _GLF_FUZZED((true ? -2281.0136 : 0.8))), bvec2(false, false))).y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true, true)))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))), bvec2(bvec4(bvec2(false, false), true, false))))), (injectionSwitch.x > injectionSwitch.y)))), true && ((bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))), bvec2(bvec4(bvec2(false, false), true, false))))), (injectionSwitch.x > injectionSwitch.y)))))), (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y))))) || false)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), bool(false)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), bool(false)))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), bool(false)))))))) || false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true && (_GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), bool(false)))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), bool(false)))))))) || false), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? -5.7 : 8270.0427))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true)))))))) || false)))))))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((ivec2(73226, -15033) != ivec2(34100, 19114)) ? -4.1 : -8739.4478)), _GLF_FUZZED(_GLF_IDENTITY((true ? -2281.0136 : 0.8), (_GLF_IDENTITY((true ? -2281.0136 : 0.8), clamp((true ? -2281.0136 : 0.8), (true ? -2281.0136 : 0.8), (true ? -2281.0136 : 0.8)))) / 1.0))), bvec2(false, false))).y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))))) || false)), ! (! ((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))))) || false)))))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) >> (1 ^ 1)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 ^ 0))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, 0 | (0))), ((0 ^ 0)) / 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 ^ 0))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > (0 | (0 ^ 0)))))) && true)))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), 0u, 0u, 0u))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(uvec4(60566u, 65078u, 52821u, 68572u).p))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) || false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false))), 0.0 + (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(_GLF_IDENTITY(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(_GLF_FUZZED(-3.4)), bool(false)))))), float(_GLF_FUZZED((-2.6 - 5383.0299))), bool(false)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.y, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.4), float(vec2(_GLF_FUZZED(-3.4), 1.0)))), bool(false)))), 1.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(mat3x2(7209.4545, 141.211, _GLF_IDENTITY(-9466.8885, mix(float(-9466.8885), float(_GLF_FUZZED(-3.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 3013.1106, 94.88, -0.6)) : mat3x2(injectionSwitch.y, cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_FUZZED(-1.6)), float(length(normalize(1.0))), bool(true))), length(normalize(1.0))))), 1.0, 0.0, 0.0), (mat2x3(0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0)) * mat2(1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false)))), 1.0))))))))) || false)))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false))), 0.0 + (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(_GLF_IDENTITY(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(0.0, 1.0))))), float(_GLF_FUZZED(-3.4)), bool(false)))))), float(_GLF_FUZZED((-2.6 - 5383.0299))), bool(false)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.y, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.4), float(vec2(_GLF_FUZZED(-3.4), 1.0)))), bool(false)))), 1.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(mat3x2(7209.4545, 141.211, _GLF_IDENTITY(-9466.8885, mix(float(-9466.8885), float(_GLF_FUZZED(-3.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 3013.1106, 94.88, -0.6)) : mat3x2(injectionSwitch.y, cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(1.0), (true ? _GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), _GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-88.97)), float(normalize(1.0)), bool(true))), normalize(1.0))) : _GLF_FUZZED(exp2(6.5))))), min(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_FUZZED(-1.6)), float(length(normalize(1.0))), bool(true))), length(normalize(1.0))))), 1.0, 0.0, 0.0), (mat2x3(0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0)) * mat2(1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false)))), 1.0))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), false)), true && (bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), false)))))) && true)), true, false, false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), bool(bvec2((_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false)))));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(0.0), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.66) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-49726 - _injected_loop_counter)) : int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++))) >> 0))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y)) & int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) : _GLF_FUZZED(63056)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
              }
            }
          }
         atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) << 0), 64, 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 1))))), 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, _GLF_IDENTITY(0, 0 ^ (0)))));
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(workgroup_size))) : subgroup_local_id)), subgroup_local_id, subgroup_local_id))) / 1u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-481.688), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-893.480, -1.5).y)), bvec2(true, false))).y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-5.7, 51.56, -30.86).y)), vec2(_GLF_FUZZED((false ? vec2(-789.718, -71.06).g : float(-37797))), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) && true); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true)), bool(bvec3(bool(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true)), true, false))))), bool(bvec3((read_1 == read_2), true, false))))))))) + 1, 4, _GLF_IDENTITY(64, (64) | 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))) || false)) || false) && true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true)))), false, false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > injectionSwitch.y))))))))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19280) : 0))))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 0, 0))) : _GLF_FUZZED(-23288)))); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), false))))), (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
                          barrier();
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (- 33493))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false || (false)))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))) && true))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))) && true), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))));
      }
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1))) >> (0 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, 29823))) ^ 0)) : 1), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, 29823))) ^ 0)) : 1)))))) / 1))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, 29823))) ^ 0)) : 1), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, 29823))) ^ 0)) : 1)))))) / 1)))) | (0 | 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, 29823))) ^ 0)) : 1))) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(29823) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(29823, (_GLF_IDENTITY(29823, max(29823, _GLF_IDENTITY(29823, (29823) / 1)))) ^ 0)) : 1))) / 1))))))) >> (0 << _GLF_IDENTITY(int(4), int(4)))) + 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) + 0)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), sqrt(1.0), 0.0, 0.0)))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(true);
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), false || (false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) || false))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) && true), true), true, false))))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
             for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))
                barrier();
               do
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false)))) && true))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
