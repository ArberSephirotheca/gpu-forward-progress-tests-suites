#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 vec4 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 mat4 _f3;
 float _f4;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 mat2 _f3;
 _GLF_struct_11 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 uvec4 _f1;
 ivec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 vec2 _f3;
 ivec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 bvec2 _f1;
 ivec2 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_12 _f4;
 uint next_virtual_gid;
} ;

struct _GLF_struct_4 {
 uint workgroup_id;
 ivec4 _f0;
} ;

struct _GLF_struct_3 {
 bool _f0;
 ivec4 _f1;
 ivec4 _f2;
 int _f3;
 uint subgroup_local_id;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uint read_2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 uint _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 mat3 _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true)))))), (! (! (false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(true, ivec4(1), ivec4(1), 1, gl_SubgroupInvocationID, vec4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(569.107), _GLF_FUZZED(2.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))) && true)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), 0u | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), (_GLF_FUZZED(num_workgroup)) / 1u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), (_GLF_FUZZED(num_workgroup)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), (_GLF_FUZZED(num_workgroup)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), (_GLF_FUZZED(num_workgroup)) / 1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), (_GLF_FUZZED(num_workgroup)) / 1u))))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, min(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x) | (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x) ^ 0u)))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), 1u * ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(num_workgroup), 0u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))), ~ (~ (_GLF_FUZZED(num_workgroup)))), 0u, 1u), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))), 0u, 1u) : _GLF_FUZZED(uvec3(56447u, 41934u, 20695u)), min(true ? uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))), 0u, 1u) : _GLF_FUZZED(uvec3(56447u, 41934u, 20695u)), true ? uvec3(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))), 0u, 1u) : _GLF_FUZZED(uvec3(56447u, 41934u, 20695u)))))))), 0u)), uint(uvec2(_GLF_FUZZED(num_workgroup), 0u))))))) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(158821u, 79297u, 122433u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(29315u, 145243u, 22357u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))).x))))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), max((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, max(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), max((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, max(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, max(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))))) << 0u) + 0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, max(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x) | (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, ~ (~ (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))))) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))) ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), max((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(num_workgroup)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))))) + (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, (112280u & 0u), 1u)), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x) | (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, (112280u & 0u), 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((_GLF_IDENTITY(+ subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (+ subgroup_size)))) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, (112280u & 0u), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), 1u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), _GLF_IDENTITY(clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)), min(clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)), _GLF_IDENTITY(clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)), (clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))) | (clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), uint(uvec2(~ ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), min(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), uint(uint((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), max((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))))) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) << 0u), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : gl_WorkGroupID.x), clamp((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x)))))) | ((false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))))) << 0u) + _GLF_IDENTITY(0u, max(0u, 0u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 1u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(71816u, 108116u, 36726u)) : gl_WorkGroupID)).x)) | ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))))))))), gl_WorkGroupID.x)), ivec4(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4.workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, clamp(_GLF_struct_replacement_3.subgroup_local_id, _GLF_struct_replacement_3.subgroup_local_id, _GLF_struct_replacement_3.subgroup_local_id))) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, uint(uvec4(_GLF_struct_replacement_3.subgroup_local_id, 1u, 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))) | (workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(ivec4(1), bvec2(true), ivec2(1), _GLF_struct_8(_GLF_struct_5(bvec2(true), mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6526.2358)), float(1.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-6526.2358)), float(1.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-6526.2358)), float(1.0), bool(true)) : _GLF_FUZZED(3583.2773))), mix(float(_GLF_FUZZED(-6526.2358)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-6526.2358)), float(1.0), bool(true))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 55.88, 25.71, -84.12).t), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec4(0.0, 55.88, 25.71, -84.12).t), (_GLF_FUZZED(vec4(0.0, 55.88, 25.71, -84.12).t)) / 1.0), _GLF_FUZZED(vec4(0.0, 55.88, _GLF_IDENTITY(25.71, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(25.71, min(_GLF_IDENTITY(25.71, min(_GLF_IDENTITY(25.71, 0.0 + (25.71)), _GLF_IDENTITY(25.71, min(25.71, 25.71)))), 25.71)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(25.71, max(_GLF_IDENTITY(25.71, (true ? 25.71 : _GLF_FUZZED(72.37))), 25.71)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(25.71, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-241.538) : 1.0))))), (mat4x2(25.71, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(25.71, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(25.71, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))))), _GLF_IDENTITY(-84.12, 0.0 + (_GLF_IDENTITY(-84.12, _GLF_IDENTITY(float(mat3(-84.12, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat3(-84.12, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float((true ^^ true)))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0, 1.0))) / 1.0))))).t), _GLF_FUZZED(vec4(0.0, 55.88, 25.71, -84.12).t)))), float(1.0), bool(true)))))), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true), false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))))), false)))))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec4(1), mat3(1.0)), _GLF_struct_6(bvec2(true), 1, _GLF_IDENTITY(true, (true) || false)), _GLF_struct_7(ivec2(1), uvec4(1u), ivec2(1), ivec2(1))), _GLF_struct_12(ivec3(1), _GLF_struct_9(vec3(1.0)), _GLF_struct_10(bvec4(true), uvec3(1u), mat2x3(1.0), ivec2(1), mat3x4(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9030.8841) : 1.0))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9030.8841) : 1.0))))), mat2(mat3x4(transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9030.8841) : 1.0))))))))), _GLF_struct_11(vec4(1.0), mat4x3(1.0), uvec2(1u), mat4(1.0), 1.0), vec4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u))))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u))))), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u))))))))) + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-47419)))), (_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) * ivec2(1, 1))) ^ ivec2(0, 0))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, 0)))], _GLF_FUZZED(_GLF_IDENTITY(-919.011, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -919.011 : _GLF_FUZZED(distance(623.933, -3435.3330)))))), bvec2(true, false)))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(-919.011)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), true, false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), true, false)))))))), false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011))) + abs(vec2(0.0, 0.0))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))) || (true))) || false), false)))))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false)))))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) && true) || false), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false)))))) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.9, 513.017)))))), min((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-65.95, 1.0 * (-65.95))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-2.0), (mix(vec2(_GLF_FUZZED(-65.95), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(-65.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-919.011)), bvec2(true, false)))[0], _GLF_FUZZED(vec2(41.13, 3.3).x)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.5), (_GLF_IDENTITY(_GLF_FUZZED(-4.5), mix(float(_GLF_FUZZED(-70.26)), float(_GLF_FUZZED(-4.5)), bool(true)))) + 0.0)), bvec2(true, false)))) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-5.2))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(bvec2(true), 1u, _GLF_struct_0(ivec2(1), atomicLoad(buf[virtual_gid], 4, 64, 0)), _GLF_struct_1(uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(1.0, 1.0)), 1.0))), uvec2(1u)), mat3(1.0), mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_struct_replacement_3.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_struct_replacement_2._f2.read_2) + 1, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (uint(read_1 == _GLF_struct_replacement_2._f2.read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_struct_replacement_2._f2.read_2), max(uint(read_1 == _GLF_struct_replacement_2._f2.read_2), _GLF_IDENTITY(uint(read_1 == _GLF_struct_replacement_2._f2.read_2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(read_1 == _GLF_struct_replacement_2._f2.read_2), max(uint(read_1 == _GLF_struct_replacement_2._f2.read_2), uint(read_1 == _GLF_struct_replacement_2._f2.read_2))) : _GLF_FUZZED(subgroup_size))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.6))) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-67.94)), bool(false)))), float(_GLF_FUZZED(3.8)), bool(false))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (injectionSwitch) * mat2(1.0)))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
