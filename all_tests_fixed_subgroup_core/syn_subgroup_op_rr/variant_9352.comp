#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_46 {
 int _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat4x3 _f3;
 bool _f4;
 mat2x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_47 {
 _GLF_struct_46 _f0;
 uvec3 _f1;
 uvec3 _f2;
 uint read_2;
} ;

struct _GLF_struct_48 {
 _GLF_struct_47 _f0;
} ;

struct _GLF_struct_43 {
 vec4 _f0;
 ivec3 _f1;
 int _f2;
 vec2 _f3;
 vec4 _f4;
 ivec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_44 {
 mat3x2 _f0;
 _GLF_struct_43 _f1;
 uint virtual_gid;
 mat3x2 _f2;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
} ;

struct _GLF_struct_40 {
 mat3x4 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 vec4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_39 {
 ivec3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_38 {
 ivec2 _f0;
 mat2 _f1;
 uint _f2;
 float _f3;
 ivec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_37 {
 bvec2 _f0;
 vec4 _f1;
 vec2 _f2;
 mat2x4 _f3;
 mat3 _f4;
 mat3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_41 {
 mat4 _f0;
 mat2x3 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 ivec2 _f4;
 _GLF_struct_39 _f5;
 _GLF_struct_40 _f6;
} ;

struct _GLF_struct_35 {
 float _f0;
 float _f1;
 uvec3 _f2;
 mat4x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_34 {
 ivec2 _f0;
} ;

struct _GLF_struct_33 {
 mat4 _f0;
 uint _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_32 {
 mat2 _f0;
 vec4 _f1;
 bool _f2;
} ;

struct _GLF_struct_31 {
 mat4 _f0;
 ivec3 _f1;
 vec2 _f2;
 vec2 _f3;
 float _f4;
 ivec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_36 {
 mat2 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_29 {
 mat4 _f0;
 ivec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
} ;

struct _GLF_struct_27 {
 uvec2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
 ivec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 uvec3 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat3x2 _f3;
 bvec4 _f4;
 float _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_23 {
 bool _f0;
 bool _f1;
 vec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_22 {
 bool _f0;
 mat4x2 _f1;
 vec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 bvec2 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 ivec2 _f1;
 bool _f2;
 mat2x4 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 vec4 _f1;
 ivec4 _f2;
 uvec3 _f3;
 bvec4 _f4;
 uvec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 mat2 _f3;
 uvec4 _f4;
 mat2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 vec4 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_42 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_30 _f4;
 _GLF_struct_36 _f5;
 _GLF_struct_41 _f6;
 uint workgroup_id;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 vec2 _f1;
 uvec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 _GLF_struct_11 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_9 {
 bool _f0;
 uvec4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 vec4 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 _GLF_struct_9 _f4;
 mat3x4 _f5;
 int _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 uint subgroup_local_id;
 _GLF_struct_12 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 vec3 _f4;
 mat4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 int _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 uint read_1;
 bool _f0;
 mat2 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 _GLF_struct_4 _f2;
 uvec3 _f3;
 _GLF_struct_5 _f4;
 ivec4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 uint _f1;
 bool _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uint subgroup_id;
 _GLF_struct_0 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.y), bool(true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))) && true))), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec4(1u), _GLF_struct_1(uvec2(1u), gl_SubgroupID, _GLF_struct_0(mat4x3(1.0), 1u, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), mat2x3(1.0)), mat3(1.0)));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : _GLF_FUZZED(vec2(-76.84, -810.337)))).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : _GLF_FUZZED(vec2(-76.84, -810.337)))).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : _GLF_FUZZED(vec2(-76.84, -810.337)))).x < injectionSwitch.y))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_10(mat2(1.0), vec4(1.0), mat3x4(1.0), bvec3(true), _GLF_struct_9(true, uvec4(1u), bvec2(true), bvec4(true), bvec2(true)), mat3x4(1.0), 1), gl_SubgroupInvocationID, _GLF_struct_12(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), _GLF_struct_11(ivec2(1), vec2(1.0), uvec2(1u), mat2x3(1.0)), mat2x3(1.0)), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))))))), true, true, true))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y = _GLF_struct_replacement_13.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.x = num_workgroup, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.x = num_workgroup));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_42 _GLF_struct_replacement_42 = _GLF_struct_42(_GLF_struct_17(_GLF_struct_14(_GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (ivec2(1))), ivec2(1), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)))), uvec4(1u), mat2x3(1.0), mat2(1.0), uvec4(_GLF_IDENTITY(1u, max(1u, 1u))), mat2(1.0), ivec3(1)), _GLF_struct_15(mat2(1.0), vec4(1.0), ivec4(1), uvec3(1u), bvec4(true), uvec3(1u), vec2(1.0)), vec4(1.0), _GLF_struct_16(mat2x3(1.0), bvec3(true))), _GLF_struct_18(mat4x2(1.0)), _GLF_struct_21(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ivec2(1), true, mat2x4(1.0), _GLF_struct_19(mat3x2(1.0), vec4(1.0), mat2x4(1.0), mat4x2(1.0)), _GLF_struct_20(bvec4(true))), _GLF_struct_25(_GLF_struct_22(true, mat4x2(1.0), vec2(1.0), uvec3(1u)), bvec2(true), _GLF_struct_23(true, true, vec3(1.0), ivec3(1)), _GLF_struct_24(vec3(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-497.421)))), uvec4(1u), mat3x2(1.0), bvec4(true), 1.0, mat3x2(1.0)), mat4x2(1.0)), _GLF_struct_30(_GLF_struct_26(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ivec3(1), mat3x2(1.0)), _GLF_struct_27(uvec2(1u), mat3(1.0)), uvec3(1u), _GLF_struct_28(mat2(1.0)), _GLF_struct_29(mat4(1.0), ivec2(1), ivec4(1), ivec2(1)), vec2(1.0)), _GLF_struct_36(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), _GLF_struct_31(mat4(1.0), ivec3(1), vec2(1.0), vec2(1.0), _GLF_IDENTITY(1.0, float(vec4(1.0, abs(0.0), 0.0, 0.0))), ivec2(1), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.8)), bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))))))), _GLF_struct_32(mat2(1.0), vec4(1.0), true), _GLF_struct_33(mat4(1.0), 1u, bvec3(true)), _GLF_struct_34(ivec2(1)), _GLF_struct_35(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0), uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(176335u)))), mat4x3(1.0), vec2(1.0))), _GLF_struct_41(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2x3(1.0), _GLF_struct_37(bvec2(true), vec4(1.0), vec2(1.0), mat2x4(1.0), mat3(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), vec4(1.0)), _GLF_struct_38(ivec2(1), mat2(1.0), 1u, 1.0, ivec4(1), mat2x3(1.0)), ivec2(1), _GLF_struct_39(ivec3(1), mat3x4(1.0), mat2x3(1.0)), _GLF_struct_40(mat3x4(1.0), mat4x2(1.0), mat2x3(1.0), mat4x3(1.0), vec4(1.0), ivec2(1))), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (~ (gl_WorkGroupID.x)) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.z = _GLF_struct_replacement_42.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size[3])).z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, ! (! (false))))))))), (bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false))))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.z = workgroup_base, (GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.z = workgroup_base) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(mat3x2(1.0), _GLF_struct_43(vec4(1.0), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), (~ (_GLF_IDENTITY(1, max(1, 1)))) / 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), 1 * (~ (_GLF_IDENTITY(1, max(1, 1))))), ~ (_GLF_IDENTITY(1, max(1, 1))))))))), 0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(39878))), 0))), (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(1, 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (_GLF_IDENTITY(1, max(1, 1)))) : _GLF_FUZZED(-24945)))), _GLF_IDENTITY(1, max(1, 1)))))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)))))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))) | 0), int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(1, max(1, 1)))))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)))))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), (false ? _GLF_FUZZED(33754) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), 1)))))), 0, 0, 0))) | 0), int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) + 0), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(1, max(1, 1)))))), 0, _GLF_IDENTITY(0, max(0, 0)), 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (_GLF_IDENTITY(1, max(1, 1)))))))), 0, 0, 0)))))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))) | 0), int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) >> 0), (_GLF_IDENTITY(1, max(1, 1)))))))))), _GLF_IDENTITY(1, max(1, 1)))))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)))))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-93645, (-93645) | 0)) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))) | 0), int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(1, max(1, 1)))))), 0, 0, 0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)))))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))) ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0))) | 0), int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93645) : _GLF_IDENTITY(1, max(1, 1)))), 0, 0, 0)))))))) - 0), vec2(1.0), vec4(1.0), ivec4(1), mat4x3(1.0)), GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.z + _GLF_struct_replacement_2._f1.subgroup_id * subgroup_size + GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y, mat3x2(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-581.054)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2489.5277) : injectionSwitch.y)), injectionSwitch.y)))), true, false, false)))))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.z + _GLF_struct_replacement_2._f1.subgroup_id * subgroup_size + ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1, clamp(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1, (GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), false, false)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), false, false)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), false, false))))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.x, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.x, 0u ^ (GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.x))) ^ 0u)], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1)))) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_struct_3(atomicLoad(buf[_GLF_struct_replacement_45._f0.virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, 0))), true, mat2(1.0), 1, vec3(1.0)), mat4x3(1.0), _GLF_struct_4(1, 1.0), uvec3(1u), _GLF_struct_5(vec2(1.0), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-734.070) : 1.0))) + 0.0)), mat2(1.0), mat3x2(1.0), vec3(1.0), mat4(1.0), ivec4(1)), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) | (ivec4(1))), ivec4(1))), _GLF_struct_6(ivec2(1), ivec3(1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_48 _GLF_struct_replacement_48 = _GLF_struct_48(_GLF_struct_47(_GLF_struct_46(1, bvec4(true), bvec3(true), mat4x3(1.0), true, mat2x3(1.0), mat4x3(1.0)), uvec3(1u), uvec3(1u), atomicLoad(buf[_GLF_struct_replacement_45._f0.virtual_gid], 4, 64, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.y = _GLF_struct_replacement_48._f0.read_2;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(GLF_merged4_0_1_13_1_1_17_2_1_12_3_1_14num_workgroupsubgroup_local_idworkgroup_idworkgroup_size.y + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.x], uint(_GLF_struct_replacement_8._f0._f0.read_1 == GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.y) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4819.5214) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), 1.0 * (mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)))))), (false ? _GLF_FUZZED(1992.2016) : float(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), 1.0 * (mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false))))))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-8.8)), bool(false))), float(_GLF_FUZZED(-6.5)), bool(false)))))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.56), _GLF_FUZZED(-4.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))), cos(0.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.56), _GLF_FUZZED(-4.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))), cos(0.0))))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false))), false)))))))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base))).x], uint(_GLF_struct_replacement_8._f0._f0.read_1 == GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base.y) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
