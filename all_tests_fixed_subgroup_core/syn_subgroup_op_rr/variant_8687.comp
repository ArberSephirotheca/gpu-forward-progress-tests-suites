#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 uint read_1;
 bvec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_22 {
 uint subgroup_id;
 uvec2 _f0;
 int _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
} ;

struct _GLF_struct_20 {
 vec2 _f0;
 vec4 _f1;
 uint _f2;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 mat4 _f1;
 float _f2;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat3 _f3;
 mat4x2 _f4;
 ivec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_15 {
 float _f0;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 uvec3 _f1;
 uint _f2;
 mat2x3 _f3;
 vec3 _f4;
 mat3x4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
 _GLF_struct_13 _f1;
 mat2x3 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_24 {
 float _f0;
 _GLF_struct_17 _f1;
 bvec3 _f2;
 ivec3 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_23 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat3 _f1;
 vec2 _f2;
 mat3 _f3;
 uvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 int _f1;
 uvec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 vec2 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 bool _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 int _f1;
 bvec3 _f2;
 uvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 vec4 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
 vec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_12 {
 uint workgroup_base;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_8 _f2;
 mat3x4 _f3;
 _GLF_struct_11 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_struct_17(mat3x2(1.0), _GLF_struct_13(vec2(1.0), uvec3(1u), 1u, mat2x3(1.0), vec3(1.0), mat3x4(1.0), ivec2(1)), mat2x3(1.0), _GLF_struct_14(_GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(_GLF_IDENTITY(true && (true), bool(bvec3(true && (true), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), mat2x4(1.0), bvec3(true), ivec4(1)), _GLF_struct_15(1.0), _GLF_struct_16(ivec2(_GLF_IDENTITY(1, (1) << 0)), mat3(1.0), ivec4(1), _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat3(mat3(1.0))), (mat3(mat3(mat3(1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(110.898))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.6)), float(1.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, true))))))), 1.0)), 1.0, 1.0, 1.0, 1.0))))), mat4x2(1.0), ivec2(1), bvec2(true))), bvec3(true), ivec3(1), _GLF_struct_21(ivec3(_GLF_IDENTITY(1, (1) + 0)), _GLF_struct_18(ivec4(1), mat4(1.0), 1.0), _GLF_struct_19(ivec4(1), bvec2(true)), _GLF_struct_20(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), vec2(mat3(vec2(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, 0.0, 1.0))), vec2(1.0))), vec4(1.0), 1u)), _GLF_struct_23(_GLF_struct_22(gl_SubgroupID, uvec2(1u), 1)), mat4x3(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(asin(injectionSwitch)))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))))))) || false))), _GLF_IDENTITY(false, false || (false)), false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false, false))) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4(mat3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), (mat4(mat3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false))))))))))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false)))))))))))), ! (! (! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))), (bool(bvec3(false, true, true))) || false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), false || (true && (_GLF_IDENTITY(false, (false) && true))))))))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(false, (false) && true)), true), false, true))))))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))))))), false))))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))), false))))))), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.9, 489.218)) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))), true))), true))))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)), 0.0))) > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(54.34)), bool(false))) > injectionSwitch.y)))) && true), true), true, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(40482u, 158730u, 146385u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))).x, 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false))))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-75.74)), float(injectionSwitch.y), bool(true)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, false))))))), true && _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(9.0)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(9.0)), bvec2(false, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(9.0)), bvec2(false, false))).x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.0, 5530.8297, -11.28, -3671.7832).q)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.0, 5530.8297, -11.28, -3671.7832).q)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.0, 5530.8297, -11.28, -3671.7832).q)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) || false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))), false))), true, false)))))))), false, false)))))))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, determinant(mat2(log(1.0), 1.0, 0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0))))) || (true)))) && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(workgroup_size * workgroup_id, _GLF_struct_1(_GLF_struct_0(uvec4(1u), bvec3(true), mat2x4(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))) - 0u)), vec4(1.0), ivec4(1))), _GLF_struct_3(_GLF_struct_2(mat3x2(1.0), vec4(1.0), mat2x3(1.0), mat4x2(1.0), vec2(1.0), bvec2(_GLF_IDENTITY(true, (true) || false)))), _GLF_struct_8(vec2(1.0), _GLF_struct_4(mat3(1.0), 1, bvec3(true), uvec2(1u), 1u), _GLF_struct_5(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-7034.7279)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), uvec2(1u)), _GLF_struct_6(1u), _GLF_struct_7(ivec4(1), true, uvec3(1u))), mat3x4(1.0), _GLF_struct_11(mat2x4(1.0), vec2(1.0), _GLF_struct_9(mat4x3(1.0), 1, uvec4(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), _GLF_struct_10(1, mat3(1.0), vec2(1.0), mat3(1.0), uvec2(1u), uvec4(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_struct_replacement_12.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_24._f5._f0.subgroup_id * subgroup_size, (_GLF_struct_replacement_24._f5._f0.subgroup_id * subgroup_size) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_12.workgroup_base, min(_GLF_struct_replacement_12.workgroup_base, _GLF_struct_replacement_12.workgroup_base)) + _GLF_struct_replacement_24._f5._f0.subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) ^ 0u), (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2((subgroup_local_id + 1) % subgroup_size, 0u))), (subgroup_local_id + 1) % subgroup_size))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1148.7823, 2261.8929)) : injectionSwitch)))).y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(atomicLoad(buf[virtual_gid], 4, 64, 0), bvec4(true), bvec2(true));
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)), clamp(4, 4, 4))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-84028))) : _GLF_FUZZED(-48233))), 4), (clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 | (int(int(4))))), 4, 4))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-84028))) : _GLF_FUZZED(-48233))), 4)) | 0), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_25.read_1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(62521), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(62521), (_GLF_FUZZED(62521)) | (_GLF_FUZZED(62521))), 1, 1)), clamp(int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(62521), (_GLF_FUZZED(_GLF_IDENTITY(62521, (62521) | 0))) | (_GLF_FUZZED(_GLF_IDENTITY(62521, 0 | (62521))))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)), 1)), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(62521), (_GLF_FUZZED(62521)) | (_GLF_IDENTITY(_GLF_FUZZED(62521), (_GLF_IDENTITY(_GLF_FUZZED(62521), min(_GLF_FUZZED(62521), _GLF_FUZZED(62521)))) >> 0))), 1, 1)), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(62521), (_GLF_IDENTITY(_GLF_FUZZED(62521), min(_GLF_FUZZED(62521), _GLF_FUZZED(62521)))) | (_GLF_FUZZED(62521))), 1, 1))))) : _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(max(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), clamp(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), (clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4)) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), min(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), (true ? _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), max(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4))) : _GLF_FUZZED(56582)))))))))) ^ 0)))), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (max(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), ~ (~ (clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4)))), clamp(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 4))), clamp(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1), 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4), _GLF_IDENTITY((clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4)) | (clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4)), ((clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4)) | (clamp(4, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 4))) - 0))))) ^ 0)))), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))) + 0))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, determinant(mat2(abs(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 0.0), (mat3(injectionSwitch.x, determinant(mat2(abs(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec3((false), true, false)))))), ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_25.read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))))), max(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))))), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, sqrt(1.0), 1.0, sqrt(0.0), abs(0.0), 1.0, length(vec2(0.0, 0.0))))))))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) || false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), length(0.0), 1.0), min(_GLF_IDENTITY(vec3(0.0, length(0.0), 1.0), vec3(mat2x4(vec3(0.0, length(0.0), 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), vec3(0.0, length(0.0), 1.0)))), _GLF_IDENTITY((float(vec3(0.0, length(0.0), 1.0))), mix(float((float(vec3(0.0, length(0.0), 1.0)))), float(_GLF_FUZZED(5.2)), bool(false))) - 0.0)))).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false), true, true), true)))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, length(0.0), 1.0), min(_GLF_IDENTITY(vec3(0.0, length(0.0), 1.0), vec3(mat2x4(vec3(0.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), vec3(0.0, length(0.0), 1.0)))), (float(vec3(0.0, length(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0))) - 0.0)))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   return;
  }
}
