#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.1) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, false))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 0.0 : _GLF_FUZZED(11.28))), 1.0), transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(mat3(mat4x3(transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), (mat3(mat4x3(transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3573.9375)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec2(-168.703, 3567.0913).y)), mix(float(_GLF_FUZZED(-95.05)), float(float(_GLF_FUZZED(vec2(-168.703, 3567.0913).y))), bool(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(1.0)), mix(vec2(_GLF_FUZZED(14.67), (vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(1.0)))[1]), vec2((vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(1.0)))[0], _GLF_FUZZED(11.86)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(false, false))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y)), true, false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), vec2(vec2(injectionSwitch)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat3(vec2(vec2(injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(1.0)), bvec2(false, false))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y)), true, false, true))))) && true) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true, false)), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.4) : injectionSwitch.x)) > injectionSwitch.y, true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), true))))))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(183466u, (183466u) | (183466u)), 123095u, 158611u)))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(183466u, _GLF_IDENTITY(uint(uvec2(183466u, (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (3u))))))), (uint(_GLF_IDENTITY(uvec2(183466u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), uint(3u)))), (uvec2(183466u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), uint(3u))))) >> uvec2(0u, 0u)))) - 0u)), (_GLF_IDENTITY(183466u, _GLF_IDENTITY(uint(uvec2(183466u, (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (3u))))))), (uint(_GLF_IDENTITY(uvec2(183466u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), uint(3u)))), (uvec2(183466u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), uint(3u))))) >> uvec2(0u, 0u)))) - 0u))) / 1u), (183466u) | (183466u)), 123095u, 158611u)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(183466u, _GLF_IDENTITY((183466u), (_GLF_IDENTITY((183466u), ((183466u)) ^ 0u)) << (0u ^ 0u)) | (183466u)), 123095u, 158611u)))).x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id, workgroup_id))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u)))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u)))), (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u)))), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, max((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u), clamp((subgroup_id * subgroup_size) >> 0u, (subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) >> 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), clamp(uint(uint(workgroup_base)), uint(uint(workgroup_base)), uint(uint(workgroup_base))))), (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup)))) >> 0u), subgroup_id * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (0u & 1783u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(-2.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - ((0u | 0u) & 67942u)), max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)) << 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))) >> (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << 0u)) | (8u)))))), uint(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(0u, (0u) * 1u)))) * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((0u | 0u) & 183882u) | (subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u), (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u))))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup)) : _GLF_FUZZED(num_workgroup)))), subgroup_id * subgroup_size))) - 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))), true, true, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (subgroup_id * subgroup_size) - 0u) : _GLF_FUZZED(num_workgroup))), subgroup_id * subgroup_size))) - 0u)))))))))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), false)), (bool(bvec3(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), false))) && true))) && true))))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), true && _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false)) && true))))))), true && _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), max((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), min((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, 1u * (1u)) * (workgroup_base))))))))))))) | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))))) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) / 1), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))), (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))), (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))), (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2502.0441, 0.0 + (2502.0441))) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true)))))))) + 0.0)) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))), (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))) - 0.0)), (true ? max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2502.0441) : injectionSwitch.x))), _GLF_IDENTITY((true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2502.0441, 0.0 + (2502.0441))) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true))))), (false ? _GLF_FUZZED(-86.95) : (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2502.0441, 0.0 + (2502.0441))) : injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(-52.27, mix(float(_GLF_FUZZED(vec2(1.4, -5.1).r)), float(-52.27), bool(true)))))))))) + 0.0)) / 1.0) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-26.35), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9787.9035)), bvec2(true, false))), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) | (virtual_gid))) ^ 0u)])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid)), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid])), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) | (virtual_gid))) ^ 0u)])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid)), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) | (virtual_gid))) ^ 0u)])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid)), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid]))) | 0u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 0u ^ (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))))), virtual_gid), max(max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), (virtual_gid) ^ 0u))), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))), virtual_gid)))), virtual_gid))], 0u + _GLF_IDENTITY((buf[virtual_gid]), ~ (_GLF_IDENTITY(~ ((buf[virtual_gid])), 0u + (~ ((buf[virtual_gid])))))))) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(num_workgroup, virtual_gid, num_workgroup)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(num_workgroup, virtual_gid, num_workgroup))), ~ (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(atomicCompSwap(num_workgroup, virtual_gid, num_workgroup)))), (~ (~ (_GLF_FUZZED(atomicCompSwap(num_workgroup, virtual_gid, num_workgroup))))) / 1u))))) : 0u))), buf[virtual_gid]))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))))) ^ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid]), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid]), (max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid])) << 0u)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid]), (max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid])) | (max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))), virtual_gid))], 0u + (buf[virtual_gid]))) >> 0u), buf[virtual_gid]))))))))) / ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u)) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, (7u) - 0u), 7u))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id)))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), mix(vec2((mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))[1]), vec2(_GLF_FUZZED(-275.955), _GLF_FUZZED(vec3(-6.4, 4.5, 3.3).x)), bvec2(false, false)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), int(ivec2(int(int(~ (1))), 0))))))]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5485.6292), _GLF_FUZZED(-69.60)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), false)))[1]), vec2(_GLF_FUZZED(-275.955), _GLF_FUZZED(vec3(-6.4, 4.5, 3.3).x)), bvec2(false, false)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true && (false || ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))), true && (_GLF_DEAD(false))), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (false), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))) && (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), true), false)))))))))))) && (false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ((true)) || false)), (! (_GLF_IDENTITY((true), ((true)) || false))) && true))), true))))) && (false)))), true, false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(true && (true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (true && (false)), false || (true && (true && (false)))))), true && (! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (true && (false)))))))))))), true && (_GLF_DEAD(false))), false, false, false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (true && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))), true && (true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(false))), false, false, false))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), false || _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))), ! (_GLF_IDENTITY(! (((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), bool(bvec2(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), false))))), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))), false || (! (((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), ! (! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))))) && true))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid))))))], _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * _GLF_IDENTITY(1u, (1u) / 1u)) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)))))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
