#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), false || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false, false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(997.732) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED((+ -5.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))), _GLF_FUZZED(_GLF_IDENTITY(8.6, float(mat3x4(_GLF_IDENTITY(8.6, mix(float(8.6), float(_GLF_FUZZED((-7.3 / -0.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, log(1.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2705.9539)), float(1.0), bool(true))))))))))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))[1]), bvec2(false, true)))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_DEAD(false)), true), false), bvec3(bvec3(bvec3(bvec2(! (_GLF_DEAD(false)), true), false))))))), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((_GLF_IDENTITY(! (false), true && (! (false)))), true, false, false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false))))))), ! (! ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false)))))))))), ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false)))))))) && true)))))), false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((_GLF_IDENTITY(! (false), true && (! (false)))), true, false, false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false))))))), ! (! ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false)))))))))), ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, (false) || false)))))))) && true)))))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))))))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), ! (! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))))))))), _GLF_IDENTITY(true, ! (! (true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), ! (! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))))))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4((! (false)), true, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), ! (! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))))))))))))))), _GLF_IDENTITY(true, ! (! (true))))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false)))))))))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))))))))), _GLF_IDENTITY(true, ! (! (true))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false)))))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false))))))))), (bool((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, _GLF_IDENTITY(false, ! (! (false)))))))))) && true)))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))), true && (! ((! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))))))))))))))))))), _GLF_IDENTITY(true, ! (! (true))))))), true))), false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, true)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), true))), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) || ((_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x), float(_GLF_FUZZED(7.9)), bool(false))) > injectionSwitch.y)) || ((_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / exp(vec2(0.0, 0.0)))).x > injectionSwitch.y)) || ((_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), abs(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-52.87)), bool(false))))), float(mat2(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), abs(0.0), 1.0, 1.0)), 0.0, 1.0, 1.0)))) > injectionSwitch.y)) || ((_GLF_DEAD(false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))) || false), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), true, false, true)), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), true, false, true))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true))) || false, bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY((false), ((false)) && true)), true, true, true)), (bool(bvec4(! (! _GLF_IDENTITY((false), ((false)) && true)), true, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), clamp(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u))), uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, 0u | (0u)))))), min(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), max(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), clamp(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u))), uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, 0u | (0u)))))), min(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), max(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, 0u))))))))), (false ? _GLF_FUZZED(uvec3(48147u, 69851u, 189224u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), clamp(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u))), uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, 0u | (0u)))))), min(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), max(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, 0u)))))))))))) * uvec3(1u, 1u, 1u)), uvec3(uvec4(gl_NumWorkGroups, 0u)), uvec3(uvec4(gl_NumWorkGroups, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1363.4111))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, sqrt(1.0)), min(vec3(injectionSwitch.x, 0.0, sqrt(1.0)), vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 0.0, sqrt(1.0)))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.5, 8369.5136)) : injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.6)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), bool(bvec4(bool(bvec3(bool(false), false, false)), true, true, false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, true, false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true)))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED((-998.529 + -303.448)), clamp(_GLF_FUZZED((-998.529 + -303.448)), _GLF_FUZZED((-998.529 + -303.448)), _GLF_IDENTITY(_GLF_FUZZED((-998.529 + -303.448)), (_GLF_FUZZED((-998.529 + -303.448))) * 1.0))), _GLF_FUZZED(-722.699)), bvec2(false, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))))), (_GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))))), (true ? (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))))) : _GLF_FUZZED(uvec3(152571u, 88976u, 190467u))))) >> uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), gl_WorkGroupID)), gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2164.5063)), float(injectionSwitch.x), bool(true)))) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), min(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(64, (64) << 0)))) - 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) < subgroup_size) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))) >> 0u), _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), clamp(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 0u))))))) / 1u))) + 1, _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u))) + 1) / 1u, ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (read_2)), 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u, 0u))))), clamp((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u, 0u))))), (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u, 0u))))), (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u, 0u)))))))), ((read_2) / _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))), min((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))), ((~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))) ^ 0u))))) / 1u)), _GLF_IDENTITY(bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), false)), true && (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)), clamp((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) / 1u)))) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) | ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) / 1u)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), clamp((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) | ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) / 1u)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), clamp((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) | ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) / 1u)), false), bvec2(bvec3(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), clamp((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), (read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) | ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))))) / 1u)), false), true))), true, true)))), true && (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)) >> 0u)), _GLF_IDENTITY(bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(1u, 1u) * (uvec2(read_2, 1u))))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), false)), true && (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), (read_2) * 1u), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u)))))), ((read_2) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 0u))))))) / 1u)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) + 1) / 1u) - 0u)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, exp(0.0), 0.0, 1.0, 0.0)))))), false, false, true))))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(1.0 * (injectionSwitch[0]), min(1.0 * (injectionSwitch[0]), 1.0 * (injectionSwitch[0])))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, false, true))))))))) && true)), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true)))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bool(true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, false, true)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (false), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true, false))))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(((vec4(-917.808, 1.2, 8.0, -1987.6173) * -8.5) * mat2x4(4861.7122, 3.7, -3778.7586, 8.3, 7.2, -6.3, -0.5, 4.5))))).x > injectionSwitch.y))), bool(bvec4(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-968.632) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-968.632) : injectionSwitch.y, 0.0, 0.0)))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-968.632) : injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-968.632) : injectionSwitch.y))))))))))), false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4(true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), float(_GLF_IDENTITY(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0), mat3(mat3x4(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0))))))), injectionSwitch[1])).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), float(_GLF_IDENTITY(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0), mat3(mat3x4(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0))))))), injectionSwitch[1])).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), float(_GLF_IDENTITY(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0), mat3(mat3x4(mat3(min(injectionSwitch[0], injectionSwitch[0]), sin(0.0), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0))))))), injectionSwitch[1])).y)))))), false, false, true))))), bool(bool(_GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bvec4(bool(! (true)), true, true, true)))))))) && true) && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1689.0355)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))), false, false, true))))))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-493.087) : injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-493.087) : injectionSwitch.y)))))), bool(bvec3(! (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-493.087) : injectionSwitch.y)))))), true, true))))), false, false, true)))))))) && true))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))))) * mat2(1.0))).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))))) * mat2(1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))))) * mat2(1.0))).y))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))))) * mat2(1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 729.236)) : injectionSwitch)))))) * mat2(1.0))).y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))))) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u), false || (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u), (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) && true)))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) * 1u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(read_1 == read_2) + 1) | (uint(read_1 == read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false), (_GLF_IDENTITY(false, true && (false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false)), bool(bvec4(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, true))))), (_GLF_IDENTITY(false, true && (false))) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(-54828)))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0), max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(616.080, 6229.1413)))))).x, injectionSwitch.x))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(345.489), _GLF_FUZZED(-940.717)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
