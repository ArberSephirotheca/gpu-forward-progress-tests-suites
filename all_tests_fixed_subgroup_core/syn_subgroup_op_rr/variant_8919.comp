#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), 0u)))), (_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), 0u), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u & 12328u), 1u))), 0u, 0u) + (uvec4(gl_WorkGroupSize, 0u)))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(((-2220.5559) + -8.2))), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)))), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-88.71), _GLF_FUZZED(81.07)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))))) | _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))) - uvec3(0u, 0u, 0u)))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ((uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)) | (uvec4(gl_WorkGroupSize, 0u)))))), min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (0u) >> 0u))))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(0u, 0u, 0u) ^ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), uvec3(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), (~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), (~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), (~ (~ (uvec3(uvec3(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)))))), min(max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) : _GLF_FUZZED(uvec3(149507u, 119396u, 107831u)))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) - uvec3(0u, 0u, 0u))))), 0u), uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(gl_WorkGroupSize, 0u)))))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) - uvec3(0u, 0u, 0u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (true ? uvec4(gl_WorkGroupSize, 0u) : _GLF_FUZZED(uvec4(34079u, 43768u, 27249u, 154121u))))) ^ uvec4(0u, 0u, 0u, 0u))))))))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))))))), 0u), ~ (~ (uvec4(min(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), min(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), 0u)))))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), 0u)))))))))) | uvec3(0u, 0u, 0u))), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), min(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_id)))), (workgroup_size * workgroup_id) + 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (uint(uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (0u) : _GLF_FUZZED(85857u)))))))) | (uint(uvec4(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-559.925)), float(injectionSwitch[0]), bool(true))), (_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-559.925)), float(injectionSwitch[0]), bool(true)))) / 1.0), injectionSwitch[1])).y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))) * 1.0)))), 0u, 0u))))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (0u ^ 0u) ^ (subgroup_size))))) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(-64299))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), ~ (~ (_GLF_IDENTITY(4, 1 * (4)))))) | (_GLF_IDENTITY(4, 1 * (4)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / 1.0), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1))))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(134015u))), vec2(_GLF_FUZZED(-876.981), (max(injectionSwitch, injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), (mat3(1.0) * (vec3(0.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0))) * exp(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0)))))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1))))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(134015u))), vec2(_GLF_FUZZED(-876.981), (max(injectionSwitch, injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, log(1.0)), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), (mat3(1.0) * (vec3(0.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0))) * exp(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0)))))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false)))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ 0) << 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-94693))), 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-94693))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, round(length(normalize(1.0))), 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat3x2(injectionSwitch, 1.0, round(length(normalize(1.0))), 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-8.3, -9.3), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(vec2(-8.3, -9.3), (vec2(-8.3, -9.3)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-5.6, 12.86)))))))).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7085.2007)), vec2(_GLF_FUZZED(-83.48), (injectionSwitch)[1]), bvec2(false, true))))).x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5465.3245)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-84.67)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) : _GLF_IDENTITY(_GLF_FUZZED(1.4), mix(float(_GLF_FUZZED((-4.9 / _GLF_IDENTITY(vec4(673.383, 6.1, -7.6, -3.4), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(673.383, 6.1, -7.6, -3.4))).x))), float(_GLF_IDENTITY(_GLF_FUZZED(1.4), min(_GLF_IDENTITY(_GLF_FUZZED(1.4), (_GLF_FUZZED(1.4)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(1.4), min(_GLF_FUZZED(1.4), _GLF_FUZZED(1.4)))))), bool(true)))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6426.9148))), float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(1.4), max(_GLF_FUZZED(1.4), _GLF_IDENTITY(_GLF_FUZZED(1.4), mix(float(_GLF_FUZZED(-67.11)), float(_GLF_FUZZED(1.4)), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.4), (false ? _GLF_FUZZED(0.8) : _GLF_FUZZED(1.4)))), min((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.4), (false ? _GLF_FUZZED(0.8) : _GLF_FUZZED(1.4)))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.4, (1.4) - 0.0)), (false ? _GLF_FUZZED(0.8) : _GLF_FUZZED(1.4)))))), ((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(min(vec2(-8289.1408, 3.0), vec2(-7.9, -7.3)), (min(vec2(-8289.1408, 3.0), vec2(-7.9, -7.3))) * mat2(1.0))))).x, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_ZERO(0.0, injectionSwitch.x), max((1.0) - _GLF_ZERO(0.0, injectionSwitch.x), (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.4), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), max(_GLF_FUZZED(1.4), _GLF_FUZZED(1.4)))), float(_GLF_FUZZED(526.591)), bool(false)))), float(_GLF_FUZZED(vec2(3.0, _GLF_IDENTITY(3685.5751, max(_GLF_IDENTITY(3685.5751, min(_GLF_IDENTITY(3685.5751, mix(float(3685.5751), _GLF_IDENTITY(float(_GLF_FUZZED(511.824)), max(float(_GLF_FUZZED(511.824)), float(_GLF_FUZZED(511.824)))), bool(false))), 3685.5751)), 3685.5751))).y)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), max(_GLF_FUZZED(1.4), _GLF_FUZZED(1.4)))), float(_GLF_FUZZED(526.591)), bool(false)))), float(_GLF_FUZZED(vec2(3.0, _GLF_IDENTITY(3685.5751, max(_GLF_IDENTITY(3685.5751, min(_GLF_IDENTITY(3685.5751, mix(float(3685.5751), _GLF_IDENTITY(float(_GLF_FUZZED(511.824)), max(float(_GLF_FUZZED(_GLF_IDENTITY(511.824, clamp(511.824, 511.824, 511.824)))), float(_GLF_IDENTITY(_GLF_FUZZED(511.824), float(mat2x3(_GLF_FUZZED(511.824), 0.0, log(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), bool(false))), 3685.5751)), 3685.5751))).y)), bool(false))) * 1.0)))) + _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))))))))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.9, float(mat4(-3.9, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) : _GLF_FUZZED(-5.8))))))), 1.0, 1.0, 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), vec2(sin(0.0), sqrt(1.0))), dot(vec2(0.0, cos(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0))))), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0))))), sqrt(1.0)))), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0)))), _GLF_FUZZED(9.5)), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec3(-8.3, 3563.8634, 770.702) * mat2x3(-430.890, -4959.0372, 26.22, 1261.0641, 570.106, -105.008))) : injectionSwitch)))[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98898) : 0))))], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[_GLF_IDENTITY(1, max(1, 1))]))), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))))), _GLF_IDENTITY((true), ! (! ((true)))) && true)))).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), min(_GLF_IDENTITY((read_1), _GLF_IDENTITY(min(_GLF_IDENTITY((read_1), ((read_1)) - 0u), (read_1)), clamp(min(_GLF_IDENTITY((read_1), ((read_1)) - 0u), (read_1)), min(_GLF_IDENTITY((read_1), ((read_1)) - 0u), (read_1)), _GLF_IDENTITY(min(_GLF_IDENTITY((read_1), ((read_1)) - 0u), (read_1)), uint(uvec3(min(_GLF_IDENTITY((read_1), ((read_1)) - 0u), (read_1)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), (read_1))) | (read_1)) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(ivec4(~ (~ (1)), 1, (0 | 0), 1))))), clamp(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), (true ? _GLF_IDENTITY((uint(read_1 == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))) : _GLF_FUZZED(max(read_2, next_virtual_gid)))))), _GLF_IDENTITY((uint(read_1 == read_2) + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ ((uint(read_1 == read_2) + 1))), 0u ^ ((~ ((uint(read_1 == read_2) + 1))))))), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ ((uint(read_1 == read_2) + 1))), 0u ^ ((~ ((uint(read_1 == read_2) + 1)))))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1))))), min((~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1))))), (~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), uint(read_1 == read_2))) + _GLF_IDENTITY(1, min(1, 1))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1))))), min((~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1))))), (~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min(_GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u | ((uint(read_1 == read_2) + 1))), (uint(read_1 == read_2) + 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), uint(read_1 == read_2))) + _GLF_IDENTITY(1, min(1, 1)))))))))) - 0u), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + _GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(~ ((uint(read_1 == read_2) + 1)), (~ ((uint(read_1 == read_2) + 1))) >> 0u)))))) >> 0u), (uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) == _GLF_IDENTITY(read_2, uint(uint(read_2)))) + 1))), (true ? _GLF_IDENTITY((uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1)))), clamp((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1))))) + (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54743))), 1))))) << 0))))), clamp((uint(read_1 == read_2) + 1), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1))))), min((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), _GLF_IDENTITY(~ (~ ((uint(read_1 == read_2) + 1))), max(~ (~ ((uint(read_1 == read_2) + 1))), ~ (~ ((uint(read_1 == read_2) + 1))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) >> 0u), read_1)) == read_2, false, true, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1)) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) >> 0u), read_1)) == read_2, false, true, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1)) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3((~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) >> 0u), read_1)) == read_2, false, true, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1)) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1))))), 1u, 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uvec3((~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) >> 0u), read_1)) == read_2, false, true, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1)) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3((~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1))))), _GLF_IDENTITY(read_1, (read_1) >> 0u), read_1)) == read_2, false, true, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1)) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true)))) + 1))))), 1u, 0u)))) : _GLF_FUZZED(read_2)))))))) >> 0u), (_GLF_IDENTITY((uint(read_1 == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), (false ? _GLF_FUZZED(((_GLF_IDENTITY(next_virtual_gid + 67434u, max(next_virtual_gid + 67434u, next_virtual_gid + 67434u))) - 5250u)) : uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2))) + 1), ~ (~ ((uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) >> 0), (0 << _GLF_IDENTITY(int(5), int(5))))))))))), min((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))), 1))), ~ (~ ((uint(read_1 == read_2) + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, ! (! (_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2)))) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), max((uint(read_1 == read_2) + 1), (uint(read_1 == read_2) + 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ ((173061u & 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ ((173061u & 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2)) >> 0u) + 1), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))), uint(read_1 == read_2) + 1)))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2) + 1), min((uint(read_1 == read_2) + 1), (uint(read_1 == read_2) + 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1))))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1), _GLF_IDENTITY(uint(uvec2((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1), 0u)), (uint(uvec2((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1), 0u))) | (uint(uvec2((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1), 0u))))))))))))))) >> 0u)) | (_GLF_IDENTITY((uint(read_1 == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), max(read_1, read_1)) == read_2) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), max(read_1, read_1)) == read_2) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), max(read_1, read_1)) == read_2) + 1) - 0u)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), max(read_1, read_1)) == read_2) + 1)) | 0u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), max(read_1, read_1)) == read_2) + 1))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), false || (! (read_1 == read_2)))) || false)))) + 1))), uint(uvec4(~ (~ ((uint(read_1 == read_2) + 1))), 0u, 0u, 1u))))), min((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ (~ ((uint(read_1 == read_2) + 1))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1), ~ _GLF_IDENTITY((~ ((uint(read_1 == read_2) + _GLF_IDENTITY(1, int(ivec4(1, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)))))))), max((~ ((uint(read_1 == read_2) + _GLF_IDENTITY(1, int(ivec4(1, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)))))))), (~ ((uint(read_1 == read_2) + _GLF_IDENTITY(1, int(ivec4(1, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)))))))))))))) >> 0u))), (uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) == read_2) + 1))) : _GLF_FUZZED(read_2))) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-680.880, -74.07)))).x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0))[1], float(mat3x4((vec2(injectionSwitch.x, 1.0))[1], 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0)))), vec2(_GLF_FUZZED(float(29061)), _GLF_FUZZED(9.7)), bvec2(false, false))), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))) < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0), min(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0))), vec2(injectionSwitch.x, 1.0))))) < injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), max(vec2(injectionSwitch.x, 1.0), _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), max(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))), vec2(injectionSwitch.x, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), injectionSwitch)).x, 1.0))))) < injectionSwitch.y))))))))))) && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
