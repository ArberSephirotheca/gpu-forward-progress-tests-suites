#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-607.508), _GLF_FUZZED(28.38)), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || _GLF_IDENTITY(false, false || (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(sin(0.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(sin(0.0)) : _GLF_FUZZED(-603.876))), determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9693.5070)), float(0.0), bool(true))))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(723.980)), float(0.0), bool(true))) + (log(1.0))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2.5))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)) * mat2(1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3(vec2(1.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0))))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(sin(0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-603.876, max(_GLF_IDENTITY(-603.876, (-603.876) - 0.0), -603.876))))), determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? _GLF_IDENTITY(length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))), min(length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(-603.876))), determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))))), dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- mat3(-21.10, -149.669, -1955.1946, 8.9, -4.6, 9.0, -301.818, 5.7, -0.1))) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(sin(0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-603.876, max(_GLF_IDENTITY(-603.876, (-603.876) - 0.0), -603.876))))), determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-3918.5542)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-621.262)))))), (_GLF_ZERO(0.0, injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), clamp(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), _GLF_IDENTITY(float(mat3(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat3(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3(true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))))))))))), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(44.60))), (_GLF_IDENTITY(0.0, sqrt(0.0) + (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false))), 0.0))))) * 1.0))), vec2(1.0, 0.0)), dot(vec2(1.0, sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8422.3426, 2.6)))).x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(1.7, 50.50, 6.5, 572.631, -989.932, 6510.9400, 5343.7811, 69.35, -63.46)) : mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(sin(0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-603.876, max(_GLF_IDENTITY(-603.876, (-603.876) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ -3.5))), bool(false)))), -603.876))))), _GLF_IDENTITY(determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-3918.5542)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))))))))), min(determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-3918.5542)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))))))))), determinant(mat4(determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-3918.5542)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(90.62, -7.2, 48.25), vec3(1.2, 345.517, -54.46))))))))))), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) * 1.0))), vec2(1.0, 0.0)), dot(vec2(1.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(89.57)), bool(false))), false ? _GLF_FUZZED(-715.153) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) - 0.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-603.876))), determinant(mat4(determinant(mat4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(9.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))), max(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))))))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)), mix(vec2(_GLF_FUZZED(float(33884)), _GLF_FUZZED(-445.093)), vec2((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[1], float(mat2x4((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[1], 0.0, 1.0, 1.0, 0.0, sqrt(0.0), sin(0.0), 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose((mat3(_GLF_IDENTITY(length(sin(0.0)), (true ? length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-603.876))), determinant(mat4(determinant(mat4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(9.8))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))), max(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(cos(0.0)), 1.0))))))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)), mix(vec2(_GLF_FUZZED(float(33884)), _GLF_FUZZED(-445.093)), vec2((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[1], float(mat2x4((vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.86) : 1.0)))), sin(0.0)))[1], 0.0, 1.0, 1.0, 0.0, sqrt(0.0), sin(0.0), 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) + mat3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(roundEven(dot(vec2(-271.433, -260.825), injectionSwitch))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-721.604) : 0.0)), 0.0)))), 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-77.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(1.0, 1.0))), bool(true))))))), 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, true)))))), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, true))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, true))), true))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, tan(abs(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)), max(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)), ~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))))), workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-96.18)), bool(false))), _GLF_FUZZED(-478.955)), vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(intBitsToFloat(ivec2(-61552, -3091))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(intBitsToFloat(ivec2(-61552, -3091))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(intBitsToFloat(ivec2(-61552, -3091))), mix(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(intBitsToFloat(ivec2(-61552, -3091))))[0], _GLF_FUZZED(-30.33)), vec2(_GLF_FUZZED((-6682.0545 / -868.540)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(intBitsToFloat(ivec2(-61552, -3091))))[1]), bvec2(false, true))))))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), bool(bvec2(! (_GLF_IDENTITY((false), false || ((false)))), true))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-583.038)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (subgroup_local_id + 1))))) % subgroup_size), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size))), (true ? ~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size))) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) + 1) % subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)))), (((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | (0u | 0u)), ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size)), max(clamp(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) + 1) % subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)))), (((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | (0u | 0u)), ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) + 1) % subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)))), (((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | (0u | 0u)), ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_size ^ workgroup_base)) : subgroup_size)), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) / 1u)), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((subgroup_size), min((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))), (subgroup_size))) / 1u))) | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) / 1u)))), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) - 0u)))) >> 0u))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) - 0u)))) >> 0u))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) - 0u)))) >> 0u))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)) - 0u)))) >> 0u))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))) - 0u), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) + (uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) + (uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (((subgroup_local_id + 1)) << 0u) | 0u), max(_GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (((subgroup_local_id + 1)) << 0u) | 0u), _GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (((subgroup_local_id + 1)) << 0u) | 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) ^ (157796u & 0u))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))))) >> 0u) % subgroup_size)), _GLF_IDENTITY(uint(uint(clamp(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_size))), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) >> 0u), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) + 1)) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), min(subgroup_size, subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))) || false), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))) || false), false, true, false)))) ? uint(uint(clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id)))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2((subgroup_local_id + 1) % subgroup_size, 0u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))), uint(uvec2((subgroup_local_id + 1) % subgroup_size, 0u))))) - 0u)))) : _GLF_FUZZED(subgroup_local_id), (0u | 0u) ^ (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))) || false), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))) || false), false, true, false)))) ? uint(uint(clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id)))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2((subgroup_local_id + 1) % subgroup_size, 0u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))), uint(uvec2((subgroup_local_id + 1) % subgroup_size, 0u))))) - 0u)))) : _GLF_FUZZED(subgroup_local_id)))))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) - (0 << _GLF_IDENTITY(int(4), int(4)))) - 0), 1, 1))), 4)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true, true, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), false || (bool(bvec3(_GLF_DEAD(false), false, true)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))), (true ? _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))), (true ? 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), max((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))) : _GLF_FUZZED(176846u))) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), buf[virtual_gid])), (buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))) << 0u), virtual_gid))]) | 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, 1u, 1u)))))) | 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)), (0u | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) | 0u))) * 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, 1u, 1u)))))) | 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)), (0u | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) | 0u))) * 1u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, 1u, 1u)))))) | 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)), (0u | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) | 0u))) * 1u))))))) - 0u), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))) / 1u, (((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))) / 1u) >> 0u)), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)))) + 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true))) || false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || false), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))) || false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false), false)))))))))))))))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size))), _GLF_IDENTITY(true, true && (true)) && ((subgroup_local_id + 1 < subgroup_size))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size))), true && ((subgroup_local_id + 1 < subgroup_size))))), ! (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)))))), true && ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < subgroup_size)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) / 1u)) - 0u), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u)) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)) ? 1 : _GLF_FUZZED(-8377)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)) ? 1 : _GLF_FUZZED(-8377))) - 0)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), max(_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size))) | 0u)))), true && ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)), uint(uvec4((true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)), 1u, 0u, 1u)))), ((_GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))))), (1u & 1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (4u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (6u))), (uint(6u)) ^ 0u))))), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), (_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)) ^ 0u)))))), max(~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))))), ~ (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))))) + 1 < subgroup_size))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size))), true && ((subgroup_local_id + 1 < subgroup_size))))), ! (! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (1u | 1u)), ~ (~ (uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (1u | 1u))))))) * (subgroup_size))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < subgroup_size)), bool(bvec3(true && ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < subgroup_size)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))), ! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))), ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)))) || false)))), true && ((subgroup_local_id + 1 < subgroup_size))))), ! (! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (1u | 1u)), ~ (~ (uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (1u | 1u))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (1u | 1u)), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) ^ 0u), (1u | 1u)))))) / uvec2(1u, 1u)))) * (subgroup_size))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), bool(bvec3(true && ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < subgroup_size)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? (0.0) : _GLF_FUZZED(343.340)))) / 1.0) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, true)), false || (bool(bvec4(bool(false), false, false, true)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, true)), false || (bool(bvec4(bool(false), false, false, true)))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, true)), false || (bool(bvec4(bool(false), false, false, true)))))), false, true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bvec3(true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), true, true))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0, determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)), 0.0))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1115.1015) : injectionSwitch.y)), injectionSwitch.y))))), min((injectionSwitch.y), (injectionSwitch.y))) / exp(0.0))) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (false), false || (true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) | ((read_2))) | (read_2)), 0u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, false)), true, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(false, false), true, false))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(false, false), true, false))), true, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(false, false), true, false))), true, false)))), true, false)))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false)))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))), false), true, true))), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false)))))))), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(true, (true) || false), true))), false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(true, (true) && true))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(false, ! (! (false))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, true)), _GLF_IDENTITY(false, false || (false)), true)))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true))))))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), false || ((_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, _GLF_IDENTITY(true, ! (! (true))), true))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / vec3(1.0, 1.0, 1.0))), (true ? float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(66.22))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false, false, true)), _GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), false, true))))))), ! (! (false))), true))) || false)))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), true), true)))))))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), true)), true, false))))))), true), false, false)), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), true), true)))))))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), true)), true, false))))))), true), false, false)), false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
      barrier();
     barrier();
    }
  }
}
