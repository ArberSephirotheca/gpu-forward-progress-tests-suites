#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) | ((1)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), int(int(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))))))), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) / 1)))) >> 0) > _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, int(int(0)))), (int(_GLF_IDENTITY(0, int(int(0))))) | (int(_GLF_IDENTITY(0, int(int(0))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, int(int(0)))), (int(_GLF_IDENTITY(0, int(int(0))))) | (int(_GLF_IDENTITY(0, int(int(0)))))))) | 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), max(int(2), int(2))))), int(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) + 0))))))) - _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(-57605, 70966, -52035, -58031)[3]))), 0)), min((_injected_loop_counter) - 0, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))))), _GLF_IDENTITY(bool(bvec2(_injected_loop_counter > 0, false)), true && (bool(bvec2(_injected_loop_counter > 0, false))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       return;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), uint(_GLF_IDENTITY(uvec2((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u), (_GLF_IDENTITY(uvec2((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u), (true ? uvec2((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u) : _GLF_FUZZED(uvec2(6244u, 10093u))))) | (uvec2((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u))))))))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) + 0u))) - 0u), (true ? _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))) - 0u) : _GLF_FUZZED(79452u)))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupSize)).x), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupSize)).x)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u | ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), 0u | ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))) | 0u)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))), _GLF_IDENTITY(uint(uvec3((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) >> 0u))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) | (gl_WorkGroupSize.x)))))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))), 1u, 1u)), (true ? uint(uvec3((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), 0u + (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), 0u + (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x)))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x), 0u + (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), gl_WorkGroupSize.x))))))) | (gl_WorkGroupSize.x))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY((gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u))), (false ? _GLF_FUZZED(3364u) : (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) >> 0u), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)))))), (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x)))))))))))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))), 1u, 1u)) : _GLF_FUZZED(124498u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, max(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x))))))), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), uint(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) & 113017u)), (uvec3((~ (gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) & 113017u))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ~ (~ ((~ (gl_WorkGroupSize.x))))))))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))) - 0u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), min((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) | (~ (gl_WorkGroupSize.x)), 1u * ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), min((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) | (~ (gl_WorkGroupSize.x)), 1u * ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)))))))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), min((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) | (~ (gl_WorkGroupSize.x)), 1u * ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x))))))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), min((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) | (~ (gl_WorkGroupSize.x)), 1u * ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x), (~ (gl_WorkGroupSize.x)) / 1u)))) | (~ (gl_WorkGroupSize.x)))))))))) : _GLF_FUZZED(subgroup_size))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) - 0u) : _GLF_FUZZED(subgroup_local_id)))))))))) << 0u)))) - 0u) : _GLF_FUZZED(79452u)))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x) | (gl_WorkGroupSize.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x) + 0u)) ^ 0u)))) | (gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))[1])), gl_WorkGroupSize[2])).x) | (gl_WorkGroupSize.x))))))) - _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))))) | (gl_WorkGroupSize.x))))) - 0u), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), 0u | ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))) - 0u) : _GLF_FUZZED(79452u)))) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x) | (gl_WorkGroupSize.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1]))) << 0u), gl_WorkGroupSize[2])).x) + 0u)) ^ 0u)))) | (gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))[1])), gl_WorkGroupSize[2])).x) | (gl_WorkGroupSize.x))))))) - _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))))) | (gl_WorkGroupSize.x))))) - 0u), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), 0u | ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))) - 0u) : _GLF_FUZZED(79452u)))) ^ 0u))) | 0u)) - 0u)) - 0u);
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), max(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ (gl_WorkGroupID))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), ~ (~ (gl_WorkGroupID))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), 0u ^ (workgroup_size * workgroup_id))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)), clamp((((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)), ~ (~ ((((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) >> (0 >> _GLF_IDENTITY(int(0), int(0))))) % subgroup_size)))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0)))))) != (0 | 1)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) >> 0), int(1))) >> _GLF_IDENTITY(int(1), int(1))), false || (_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (false ? _GLF_FUZZED((_injected_loop_counter | _injected_loop_counter)) : _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (int(int(_GLF_IDENTITY(1, 0 + (1))))) * 1))))), _GLF_IDENTITY((int(1)), ((int(1))) | 0) >> 0), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, 1))))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (false ? _GLF_FUZZED((_injected_loop_counter | _injected_loop_counter)) : _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (int(int(_GLF_IDENTITY(1, 0 + (1))))) * 1))))), _GLF_IDENTITY((int(1)), ((int(1))) | 0) >> 0), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, 1)))))) | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (false ? _GLF_FUZZED((_injected_loop_counter | _injected_loop_counter)) : _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 + (1)))), (int(int(_GLF_IDENTITY(1, 0 + (1))))) * 1))))), _GLF_IDENTITY((int(1)), ((int(1))) | 0) >> 0), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, 1)))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))), max(_GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))), _GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))))), _GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))), _GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))))), (_GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(5, int(int(5))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))) | (_GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))))), int(5)))); _injected_loop_counter ++)
          {
           do
            {
             atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0))), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(64, (64) | 0))), 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), (max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0)))) * 1), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))), 0 ^ (~ (~ (0)))), ~ (~ (0))))))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) : _GLF_FUZZED(bitfieldInsert(10073, _GLF_IDENTITY(_GLF_IDENTITY(-67886, min(_GLF_IDENTITY(-67886, (false ? _GLF_FUZZED(-86588) : -67886)), -67886)), (_GLF_IDENTITY(_GLF_IDENTITY(-67886, min(_GLF_IDENTITY(-67886, (false ? _GLF_FUZZED(-86588) : -67886)), -67886)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(-67886, min(_GLF_IDENTITY(-67886, (false ? _GLF_FUZZED(-86588) : -67886)), -67886))))) | 0), _injected_loop_counter, 68161)))) < (_GLF_IDENTITY(1 | _GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1 | 1, (1 | 1) | _GLF_IDENTITY((1 | 1), _GLF_IDENTITY((_GLF_IDENTITY((1 | 1), ((1 | 1)) | ((1 | 1)))), (true ? (_GLF_IDENTITY((1 | 1), ((1 | 1)) | ((1 | 1)))) : _GLF_FUZZED(_injected_loop_counter))) << 0))) ^ 0))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(num_workgroup))) ^ (uint(uvec2(subgroup_local_id, 1u))))), (subgroup_local_id) << _GLF_IDENTITY(0u, (0u) ^ 0u)))) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) * 1u, ((read_2) * 1u) >> 0u))))), 1u * _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 0u, 0u, 0u), ~ (~ (uvec4(read_1, 0u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 0u, 0u, 0u), ~ (~ (uvec4(read_1, 0u, 0u, 0u))))), min(uint(_GLF_IDENTITY(uvec4(read_1, 0u, 0u, 0u), ~ (~ (uvec4(read_1, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec4(read_1, 0u, 0u, 0u), ~ (~ (uvec4(read_1, 0u, 0u, 0u)))))))))) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))))), ~ _GLF_IDENTITY((~ ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), bool(bvec3(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), true, false))))))), 0u ^ ((~ ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), false), bvec2(bvec4(bvec2(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), false), false, true)))))))), true, false))))))))))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, (1u) / 1u))))), 1u * (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 1u * (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))))) + 1) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 1u * (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.0) : 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))), _GLF_IDENTITY(1u, ~ (~ (1u))) * (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))))) + 1) / 1u)) << 0u), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uint(925.185)))))))))), _GLF_IDENTITY(1u, (1u) | (1u)) * (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))))) + 1)), _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-954.111), _GLF_FUZZED(3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     subgroupAll(false);
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), false, false)))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), false, false)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), false)), false, false)))), false)), false, true))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), true)))))) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))), true))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, false, false))))), false || ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))) && true)))), false, false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), true, true))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), true && ((bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))) || false, false || ((bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))) * mat2(1.0)), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-7926.0850)), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(863.890, (true ? 863.890 : _GLF_FUZZED(-65.89)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(863.890, (true ? 863.890 : _GLF_FUZZED(-65.89)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(863.890, (true ? 863.890 : _GLF_FUZZED(-65.89)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(863.890, (true ? 863.890 : _GLF_FUZZED(-65.89)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true, true))) || false))))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (_GLF_WRAPPED_IF_FALSE(false))))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | 0u)), ((_GLF_IDENTITY(read_2, (read_2) | 0u))) - 0u))), bool(bool(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | 0u)))))))) + 1, (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | 0u)), ((_GLF_IDENTITY(read_2, (read_2) | 0u))) - 0u))), bool(bool(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | 0u)))))))) + 1) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 4, 64, 4);
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_LOOP(false)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
        }
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) & 26814); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) < (_GLF_IDENTITY(((-37520 & 0) | 0), _GLF_IDENTITY(int(ivec2(((-37520 & 0) | 0), 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(ivec2(((_GLF_IDENTITY(-37520, ~ (_GLF_IDENTITY(~ (-37520), (~ (-37520)) - 0))) & 0) | 0), 1)), 1), (ivec2(_GLF_IDENTITY(int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)), 0 | (int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)))), 0, 0), min(ivec3(_GLF_IDENTITY(int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)), 0 | (int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)))), 0, 0), ivec3(_GLF_IDENTITY(int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)), 0 | (int(ivec2(((_GLF_IDENTITY(-37520 & 0, clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(-37520 & _GLF_IDENTITY(0, ~ (~ (0))), (true ? -37520 & _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-9959))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))), -37520 & _GLF_IDENTITY(0, ~ (~ (0))))), -37520 & 0, -37520 & 0))) | 0), 1)))), 0, 0))))), 1)) | ivec2(0, 0)), _GLF_IDENTITY((true ? ivec2(int(ivec2(((-37520 & 0) | 0), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))))), 1) : _GLF_FUZZED(ivec2(-2380, 66517))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? ivec2(int(ivec2(((-37520 & 0) | 0), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))))), 1) : _GLF_FUZZED(ivec2(-2380, 66517))) : _GLF_FUZZED(ivec2(-79933, -50567)))))))) ^ 1)); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != (1 ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), mix(float(_GLF_FUZZED(9.7)), float(float(vec2(injectionSwitch.y, 1.0))), bool(true))), float(mat3(float(vec2(injectionSwitch.y, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))) * 1.0), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat3(float(vec2(injectionSwitch.y, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat3(float(vec2(injectionSwitch.y, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat3(float(vec2(injectionSwitch.y, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat3(float(vec2(injectionSwitch.y, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat4(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat3(float(vec2(injectionSwitch.y, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))) || false)))), false || ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))) || false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))) || false))))) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(true);
    }
  }
}
