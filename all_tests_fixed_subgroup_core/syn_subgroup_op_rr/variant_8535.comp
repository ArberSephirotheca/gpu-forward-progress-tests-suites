#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), mix(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), float(_GLF_FUZZED(-1262.8720)), bool(false))) : _GLF_FUZZED(-9.1)))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(97.91)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bvec4(_GLF_IDENTITY((! (bool(false))), false || ((! (bool(false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))))), false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bvec4(_GLF_IDENTITY((! (bool(false))), false || ((! (bool(false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))))), false, false))))), false, false))), ! (! (bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, false)))), bool(bool((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, false))))))))))))), false), true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bvec4(_GLF_IDENTITY((! (bool(false))), false || ((! (bool(false))))), false, false, false)))), ! (! (_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bvec4(_GLF_IDENTITY((! (bool(false))), false || ((! (bool(false))))), false, false, false)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (! (! (bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false), true, true))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) ^ 0u), _GLF_IDENTITY((workgroup_size) ^ 0u, uint(_GLF_IDENTITY(uvec3((workgroup_size) ^ 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) >> 0u), 1u), min(uvec3((workgroup_size) ^ 0u, 0u, 1u), uvec3((workgroup_size) ^ 0u, 0u, 1u)))))) * workgroup_id, 1u * (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(189562u, ~ (~ (189562u)))))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)))))))) | 0u)) % subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)))))) | _GLF_IDENTITY(0u, (0u) / 1u))) % subgroup_size), uint(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | _GLF_IDENTITY(0u, max(0u, 0u)))) % subgroup_size), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) ^ (subgroup_local_id)) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(-148.931, -68.34, 4.4, -1008.6953))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))))))) ^ 0u) | 0u)) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((num_workgroup >> subgroup_local_id)))) ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), _GLF_IDENTITY(uint(uint(((subgroup_local_id)))), 0u ^ (uint(uint(((subgroup_local_id))))))) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u)) % subgroup_size))), 0u, 1u, 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u)))) / 1u)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (true ? uint(uint(subgroup_size)) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), 0u)) ^ (subgroup_local_id)) + 1)))))) | 0u)) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), (0u & 61971u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), (0u & 61971u), 1u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (false ? _GLF_FUZZED(uvec2(72239u, 80916u)[1]) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u)) % subgroup_size)) + 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract(32.04, 159.838, 5242.8982)) : 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asin(6142.4596)))), 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-951.403) : 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6801.7524)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(uint(1), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)))))) << 0u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))])), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-55408) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))))));
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))) + 0u)) | (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid)))) | 0u)))))]) << 0u), (true ? _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))]) << 0u) : _GLF_FUZZED(uvec3(164912u, 15074u, 87034u)[2]))))), max(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))) + 0u)) | (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid)))) | 0u)))))]) << 0u), (true ? _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))]) << 0u) : _GLF_FUZZED(uvec3(164912u, 15074u, 87034u)[2]))))), _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))) + 0u)) | (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid)))) | 0u)))))]) << 0u), (true ? _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))]) << 0u) : _GLF_FUZZED(uvec3(164912u, 15074u, 87034u)[2]))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(64, 0 | (64))) / 1)) | (0 & -66614)), 1, 0, 0))), clamp(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, min(64, 64)), 64))))) >> 0), 0);
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false), false, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))))), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true))))))) || false), true, true, false)))))), false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(29.45)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.2)), bool(false)))), bool(true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ (_GLF_IDENTITY(86717, (true ? _GLF_IDENTITY(86717, clamp(86717, 86717, 86717)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter))))) & 0)), ! (! (_injected_loop_counter != _GLF_IDENTITY((0 ^ (_GLF_IDENTITY(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (~ ((0))))) ^ (-9020 & int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))) | (0)))), clamp(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), _GLF_IDENTITY(86717, clamp(86717, 86717, _GLF_IDENTITY(86717, clamp(86717, _GLF_IDENTITY(86717, clamp(86717, 86717, 86717)), 86717)))) & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(2), int(2))) + (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))))), 0)), 86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)))))), int(ivec2((0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), clamp(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), 86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), 86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)))), ~ (~ (_GLF_IDENTITY(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), clamp(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), _GLF_IDENTITY(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), clamp(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), _GLF_IDENTITY(86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), ~ (~ (86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0))))), 86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)))), 86717 & _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0))))))))), 0))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) / 1u))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))) + 1, clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, true), bvec3(bvec4(bvec3(read_1 == read_2, true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(read_1 == read_2, true, true), bvec3(bvec4(bvec3(read_1 == read_2, true, true), true))), bvec3(bvec4(bvec3(read_1 == read_2, true, true), true)))), false))))), (_GLF_IDENTITY((read_1 == read_2), bool(bvec2((read_1 == read_2), true)))) && true)) && true)))) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u)) * 1u) + 1)), uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) + 1, min(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, false)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false || (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), clamp(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))))))) || false)) + 1)))), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) - sin(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), float(vec3(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), 1.0, 1.0)))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_IDENTITY(_GLF_FUZZED(3.7), (_GLF_FUZZED(3.7)) / 1.0), _GLF_FUZZED(3.7)))), bool(false)))), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3949.0787) : 1.0))), (clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(-3949.0787) : 1.0)))) + 0.0)), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4(_GLF_FUZZED(59.08), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], _GLF_FUZZED(-1.6), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4((vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(6.5), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], _GLF_FUZZED(92.52)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, 0.0)), 0.0, sqrt(1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), min(vec2(mat4(vec2(mat4x2(injectionSwitch, log(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-29.49)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-8179.5711)), bool(false))), abs(0.0)), vec3(0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), 0.0, 0.0, sqrt(1.0))), 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0)), vec2(mat4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(log(1.0), float(vec4(log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-9.1)), max((true ? 0.0 : _GLF_FUZZED(-9.1)), (true ? 0.0 : _GLF_FUZZED(-9.1))))), 0.0, 0.0)), injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0)), (mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec3(0.0, cos(0.0), 1.0)), float(float(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))))), dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, -6.7)))) - 0.0)), bool(false))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), (true ? vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), mix(vec4((vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[0], (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[1], _GLF_FUZZED(-31.95), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(831.944), _GLF_FUZZED(-8.8), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[2], _GLF_FUZZED(6.8)), bvec4(false, false, true, false))), vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))), (false ? _GLF_FUZZED(8.3) : float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))))), float(_GLF_FUZZED(-95.01)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))) : _GLF_FUZZED(tan(injectionSwitch)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0))), 0.0 + (float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0)))))), 1.0, 0.0, 1.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.012)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-869.665)), float(_GLF_FUZZED(-4.2)), bool(true)))), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat2x4(float(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))), float(0.0))), bool(true))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) - sin(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), float(vec3(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), 1.0, 1.0)))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_IDENTITY(_GLF_FUZZED(3.7), (_GLF_FUZZED(3.7)) / 1.0), _GLF_FUZZED(3.7)))), bool(false)))), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3949.0787) : 1.0))), (clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(-3949.0787) : 1.0)))) + 0.0)), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4(_GLF_FUZZED(59.08), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], _GLF_FUZZED(-1.6), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4((vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(6.5), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], _GLF_FUZZED(92.52)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, 0.0)), 0.0, sqrt(1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), min(vec2(mat4(vec2(mat4x2(injectionSwitch, log(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-29.49)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-8179.5711)), bool(false))), abs(0.0)), vec3(0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), 0.0, 0.0, sqrt(1.0))), 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0)), vec2(mat4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(log(1.0), float(vec4(log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-9.1)), max((true ? 0.0 : _GLF_FUZZED(-9.1)), (true ? 0.0 : _GLF_FUZZED(-9.1))))), 0.0, 0.0)), injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0)), (mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec3(0.0, cos(0.0), 1.0)), float(float(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))))), dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, -6.7)))) - 0.0)), bool(false))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), (true ? vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), mix(vec4((vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[0], (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[1], _GLF_FUZZED(-31.95), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(831.944), _GLF_FUZZED(-8.8), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[2], _GLF_FUZZED(6.8)), bvec4(false, false, true, false))), vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))), (false ? _GLF_FUZZED(8.3) : float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))))), float(_GLF_FUZZED(-95.01)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))) : _GLF_FUZZED(tan(injectionSwitch)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0))), 0.0 + (float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0)))))), 1.0, 0.0, 1.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.012)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-869.665)), float(_GLF_FUZZED(-4.2)), bool(true)))), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat2x4(float(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))), float(0.0))), bool(true))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, sqrt(1.0), 1.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) - sin(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), float(vec3(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), 1.0, 1.0)))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_IDENTITY(_GLF_FUZZED(3.7), (_GLF_FUZZED(3.7)) / 1.0), _GLF_FUZZED(3.7)))), bool(false)))), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3949.0787) : 1.0))), (clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(-3949.0787) : 1.0)))) + 0.0)), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4(_GLF_FUZZED(59.08), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], _GLF_FUZZED(-1.6), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4((vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(6.5), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], _GLF_FUZZED(92.52)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, 0.0)), 0.0, sqrt(1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), min(vec2(mat4(vec2(mat4x2(injectionSwitch, log(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-29.49)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-8179.5711)), bool(false))), abs(0.0)), vec3(0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), 0.0, 0.0, sqrt(1.0))), 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0)), vec2(mat4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(log(1.0), float(vec4(log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-9.1)), max((true ? 0.0 : _GLF_FUZZED(-9.1)), (true ? 0.0 : _GLF_FUZZED(-9.1))))), 0.0, 0.0)), injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0)), (mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec3(0.0, cos(0.0), 1.0)), float(float(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))))), dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, -6.7)))) - 0.0)), bool(false))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), (true ? vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), mix(vec4((vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[0], (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[1], _GLF_FUZZED(-31.95), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(831.944), _GLF_FUZZED(-8.8), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[2], _GLF_FUZZED(6.8)), bvec4(false, false, true, false))), vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))), (false ? _GLF_FUZZED(8.3) : float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))))), float(_GLF_FUZZED(-95.01)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))) : _GLF_FUZZED(tan(injectionSwitch)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0))), 0.0 + (float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0)))))), 1.0, 0.0, 1.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.012)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-869.665)), float(_GLF_FUZZED(-4.2)), bool(true)))), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat2x4(float(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))), float(0.0))), bool(true))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, sqrt(1.0), 1.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) - sin(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), float(vec3(dot(vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), 1.0, 1.0)))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_IDENTITY(_GLF_FUZZED(3.7), (_GLF_FUZZED(3.7)) / 1.0), _GLF_FUZZED(3.7)))), bool(false)))), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3949.0787) : 1.0))), (clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(-3949.0787) : 1.0)))) + 0.0)), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4(_GLF_FUZZED(59.08), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], _GLF_FUZZED(-1.6), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4((vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(6.5), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], _GLF_FUZZED(92.52)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, 0.0)), 0.0, sqrt(1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), min(vec2(mat4(vec2(mat4x2(injectionSwitch, log(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-29.49)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-8179.5711)), bool(false))), abs(0.0)), vec3(0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), 0.0, 0.0, sqrt(1.0))), 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0)), vec2(mat4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(log(1.0), float(vec4(log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-9.1)), max((true ? 0.0 : _GLF_FUZZED(-9.1)), (true ? 0.0 : _GLF_FUZZED(-9.1))))), 0.0, 0.0)), injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0)), (mat2(_GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), mix(vec3((vec3(1.0, 0.0, abs(0.0)))[0], _GLF_FUZZED(7340.3334), _GLF_FUZZED(-5.3)), vec3(_GLF_FUZZED(-5269.1541), (vec3(1.0, 0.0, abs(0.0)))[1], (vec3(1.0, 0.0, abs(0.0)))[2]), bvec3(false, true, true))), tan(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec3(0.0, cos(0.0), 1.0)), float(float(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))))), dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, -6.7)))) - 0.0)), bool(false))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))), (true ? vec2(mat4x2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0), mix(vec4((vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[0], (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[1], _GLF_FUZZED(-31.95), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(831.944), _GLF_FUZZED(-8.8), (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))[2], _GLF_FUZZED(6.8)), bvec4(false, false, true, false))), vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) : _GLF_FUZZED(-6.5))), 1.0, 1.0))), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))), (false ? _GLF_FUZZED(8.3) : float((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))) ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(_GLF_FUZZED(-6.7)), bool(false))))))), float(_GLF_FUZZED(-95.01)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, abs(0.0)), vec3(0.0, cos(0.0), 1.0))), 0.0, 0.0, sqrt(1.0))) : _GLF_FUZZED(tan(injectionSwitch)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0))), 0.0 + (float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0)))))), 1.0, 0.0, 1.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.012)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-869.665)), float(_GLF_FUZZED(-4.2)), bool(true)))), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat2x4(float(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))), float(0.0))), bool(true))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, sqrt(1.0), 1.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(880.516), _GLF_FUZZED(-666.775)), bvec2(false, false))).x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(-2606.9000)), bool(false))) > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(-2606.9000)), bool(false))) > injectionSwitch.y))))))))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-509.836, 5521.4312)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).y))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-49.12) : injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-49.12) : injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-49.12) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-49.12) : injectionSwitch.y))) && true)))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) >> 0u)))) + 1, 4, 64, _GLF_IDENTITY(4, (4) + (0 & -49200)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)) > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
