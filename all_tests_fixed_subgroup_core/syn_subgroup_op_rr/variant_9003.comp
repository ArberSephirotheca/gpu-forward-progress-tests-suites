#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0))) > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8886.6095))), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(2.8, 5.3).s), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6963.5237)), mix(vec2(_GLF_FUZZED(-555.373), _GLF_FUZZED(float((mat3x2(4.0, -5.9, 6.9, -5.1, 3.1, -5.0) == mat3x2(0.5, 1500.5415, -278.347, 3.8, 2.6, 30.85))))), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(6963.5237)))[0], _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(6963.5237)))[1], ((vec2((injectionSwitch)[0], _GLF_FUZZED(6963.5237)))[1]) * 1.0)), bvec2(true, true))), bvec2(true, false))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5851.2561)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2242.0397)), float(injectionSwitch.y), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-2242.0397)), float(injectionSwitch.y), bool(true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2242.0397)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2242.0397)), float(injectionSwitch.y), bool(true)))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.y = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.0)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6216.0110, 8.3)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.44)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED((453.912 * -3765.6189)), (injectionSwitch)[1]), bvec2(false, true))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.44)), bool(false))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.44)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85.64) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2768.9997))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false)))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3])))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3])))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) * uvec4(1u, 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3])))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) * uvec4(1u, 1u, 1u, 1u)))))) >> uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base), ((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)) + uvec4(0u, 0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u)).w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (false ? _GLF_FUZZED(uvec4(59720u, 141449u, 54870u, _GLF_IDENTITY(128101u, 0u ^ (128101u)))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) << uvec4(0u, 0u, 0u, 0u)).w)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ! (! (((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0))), ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true))))) * (injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(float(22808))), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-8.5))), mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true))))), bool(true)))))) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1526.3750)), float(injectionSwitch.y), bool(true))))) * (injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1526.3750)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(32.80)), bool(false)))))), bool(true))))) * (injectionSwitch)).x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), clamp(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), injectionSwitch.y), (_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) * exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))[0], _GLF_FUZZED(124.402), _GLF_FUZZED(-60.03)), vec3(_GLF_FUZZED(-41.15), (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))[2]), bvec3(false, true, true))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.58), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-45.99)), bvec2(true, false))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0)))), 1.0, 0.0, 0.0)))), true && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-863.617), _GLF_FUZZED(-3.0)), bvec2(false, false))), 1.0, 0.0, length(0.0), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))) && true)))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.218), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-720.490)), bool(false))), _GLF_FUZZED(4349.7266)), bvec2(true, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1568.1576))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.218), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-720.490)), bool(false))), _GLF_FUZZED(4349.7266)), bvec2(true, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(1568.1576, min(1568.1576, _GLF_IDENTITY(1568.1576, clamp(1568.1576, _GLF_IDENTITY(1568.1576, (1568.1576) + 0.0), 1568.1576))))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))))))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))) || false)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), clamp(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), injectionSwitch.y), (_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) * exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))[0], _GLF_FUZZED(124.402), _GLF_FUZZED(-60.03)), vec3(_GLF_FUZZED(-41.15), (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))[2]), bvec3(false, true, true))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.58), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-45.99)), bvec2(true, false))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0)))), 1.0, 0.0, 0.0)))), true && (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-863.617), _GLF_FUZZED(-3.0)), bvec2(false, false))), 1.0, 0.0, length(0.0), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))) && true)))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.218), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-720.490)), bool(false))), _GLF_FUZZED(4349.7266)), bvec2(true, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1568.1576))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-660.218), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-720.490)), bool(false))), _GLF_FUZZED(4349.7266)), bvec2(true, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(1568.1576, min(1568.1576, _GLF_IDENTITY(1568.1576, clamp(1568.1576, _GLF_IDENTITY(1568.1576, (1568.1576) + 0.0), 1568.1576))))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))))))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))) || false))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(38.33)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-74.03, -569.815)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false))) || false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z = _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), false, true, false)), (bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), false, true, false))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base))) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)))).w + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))) - 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))) | 0u)) - 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, (0u) >> 0u)) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_local_id + 1))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), subgroup_local_id)), (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), min(_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (~ (uint(subgroup_local_id + 1))) | (~ (uint(subgroup_local_id + 1)))), ~ (uint(subgroup_local_id + 1)))))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), min(~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), ~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))), uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) << 0u))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))))))), (true ? uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))))))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), (~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))) | 0u)))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), max((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), (~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), max(~ (uint(subgroup_local_id + 1)), ~ (uint(subgroup_local_id + 1))))) - 0u)), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (true ? ~ (uint(subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_size))))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))), max(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))) + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - _GLF_IDENTITY(0u, min(0u, 0u))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))), uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), 0u + (~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))) : _GLF_FUZZED(subgroup_id))))))))), uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), min(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), uint(uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), min(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ _GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), (_GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u))), uint(uint(subgroup_local_id + 1))))) >> 0u))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), min(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (uint(subgroup_local_id + 1)))), ((_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u ^ (uint(subgroup_local_id + 1))))) * 1u)), (_GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base ^ virtual_gid)) : _GLF_IDENTITY((~ (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), (_GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u), ~ (~ (false ? _GLF_FUZZED((workgroup_base ^ virtual_gid)) : _GLF_IDENTITY((~ (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), (_GLF_IDENTITY((~ (uint(subgroup_local_id + 1))), ((~ (uint(subgroup_local_id + 1)))) | 0u)) - 0u)))))))), uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) << 0u))))))))) - 0u) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) || false)), true && (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))), true, false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false))), false, true))))))) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, true))) && true))))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false)), false), true, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z) - 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base[3]))))) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base)).z : _GLF_FUZZED(workgroup_size), (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z : _GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z : _GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z : _GLF_FUZZED(workgroup_size), true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.z : _GLF_FUZZED(workgroup_size)))))))], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x], uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) | (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, 0 + (64)) : _GLF_FUZZED(51516))))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3((! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x) >> 0u), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_base.x))], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) << 0), 64))), min(~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) << 0), 64))), ~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) << 0), 64))))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3300.1399))), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)), false, false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.3, max(_GLF_IDENTITY(1.3, max(1.3, 1.3)), _GLF_IDENTITY(1.3, float(mat2x3(1.3, 0.0, 0.0, 1.0, 0.0, 0.0))))), -0.5), vec2(0.0, 0.0) + (vec2(1.3, -0.5)))) : injectionSwitch)).x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4843.5355), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[0]), float(_GLF_FUZZED(-613.739)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), mix(float(_GLF_FUZZED(-53.00)), float(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), (false ? _GLF_FUZZED(7.1) : _GLF_FUZZED(-4749.5210)))), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), mix(float(_GLF_FUZZED(-53.00)), float(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), (false ? _GLF_FUZZED(7.1) : _GLF_FUZZED(-4749.5210)))), bool(true))), float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), mix(float(_GLF_FUZZED(-53.00)), float(_GLF_IDENTITY(_GLF_FUZZED(-4749.5210), (false ? _GLF_FUZZED(7.1) : _GLF_FUZZED(-4749.5210)))), bool(true))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(375.351)), bool(false)))), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
