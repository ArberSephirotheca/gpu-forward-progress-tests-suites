#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))));
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), false || ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true, true && ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), true, true, false))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], abs(_GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch[1])))))).y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || ((injectionSwitch.x > injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0)) - tan(vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))) && true)))))))))) && _GLF_IDENTITY(true, false || (true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))) && true)); _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = (0 & _GLF_IDENTITY(-16235, min(-16235, _GLF_IDENTITY(-16235, clamp(-16235, -16235, -16235))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
      return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))))).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) / 1u) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size) | 0u) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (1u ^ 1u) | (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) * 1u)), (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) * 1u))) | (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) * 1u))))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id)))))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976)))), (false ? _GLF_FUZZED(refract(510.021, dot(vec3(-12.15, -88.33, -4748.4208), vec3(8.8, -8.2, 7249.7626)), 5.0)) : (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.23) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-256.976)))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(794.212)), float(0.0), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0)), (true ? float(vec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((8.3 / 4.2))), float(injectionSwitch.y), bool(true)))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, -7.9)) : injectionSwitch)))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, -7.9)) : injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, -7.9)) : injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(702.448) : float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, -7.9)) : injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, -7.9)) : injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0))))))), exp(0.0) * (injectionSwitch.x))), 0.0)) : _GLF_FUZZED(acos(-9.8))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u))), 0u ^ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u))))) + subgroup_local_id) << 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u), ~ (workgroup_base))))) + subgroup_id * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(94817u) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((true ? workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u), (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) ^ 0u))))) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (0u | 0u), 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY(~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))), 0u | (_GLF_IDENTITY(~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))), (_GLF_IDENTITY(~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))), clamp(~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))), ~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))), ~ (~ (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))))) * 1u))))) + subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size + subgroup_local_id), ~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 0u | (~ ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) * 1u), _GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u))), ~ (subgroup_local_id)), (_GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u))), ~ (subgroup_local_id)), max(clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u))), ~ (subgroup_local_id)), clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u))), ~ (subgroup_local_id))))) ^ (0u ^ 0u)))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u, ((_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u) | 0u)) << 0u)))), ~ _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)))), (1u & 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) ^ 0u))), ~ (subgroup_local_id)))), (1u & 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u)))), min(~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) ^ 0u)), subgroup_local_id)) + 1), ((subgroup_local_id + 1)) * 1u)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), clamp(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u))))))), uint(8u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), clamp(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))))))) >> 0u))))))), uint(8u)))) | 0u)) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     return;
    }
  }
 else
  {
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(25889) : 0 | 0))), 1), clamp(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (false ? _GLF_FUZZED(74972) : _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(25889) : 0 | 0))), 1), clamp(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (false ? _GLF_FUZZED(74972) : _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(25889) : 0 | 0))), 1), clamp(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (false ? _GLF_FUZZED(74972) : _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(25889) : 0 | 0))), 1), clamp(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (false ? _GLF_FUZZED(74972) : _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1), (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), 1), (false ? _GLF_FUZZED(ivec4(70384, -65528, 34718, -92839)) : _GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), 1), ~ (~ (ivec4(0, 1, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), 1)))))), ivec4(0, 1, (0 | _GLF_IDENTITY(0, (0) | (0))), 1), ivec4(0, 1, (0 | 0), 1)))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 | 0), 1), ivec4(0, 1, (_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), max(~ (0 | 0), ~ (0 | 0))))), 0 | 0))), 1), ivec4(0, 1, (0 | 0), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), _GLF_IDENTITY((int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), (ivec4(0, 1, (0 | 0), 1)) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1))), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0))) / 1, ((int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), (ivec4(0, 1, (0 | 0), 1)) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, _GLF_IDENTITY(1, (1) | (0 | 0)), 1))), clamp(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0), 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, _GLF_IDENTITY((0 | 0), max(_GLF_IDENTITY((0 | 0), max((0 | 0), (0 | 0))), (0 | 0))), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), (ivec4(0, 1, (0 | 0), 1)) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, _GLF_IDENTITY(1, (1) | (0 | 0)), 1))), clamp(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0), 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, _GLF_IDENTITY((0 | 0), max(_GLF_IDENTITY((0 | 0), max((0 | 0), (0 | 0))), (0 | 0))), 1)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)) ^ ivec3(0, 0, 0)))) / 1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED((-82607 + -38490)) : 0))))))), 0, _GLF_IDENTITY(0, (0 | 0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1, (0 | 0), 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), _GLF_IDENTITY(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), clamp(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), _GLF_IDENTITY(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(1), ivec4(1))) + (clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (_GLF_IDENTITY(0, ~ (~ (0))) | 0), 1), ivec4(0, 1, (0 | 0), 1)))), (int(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1))))) >> 0), int(_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY((0 | 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0 | 0) : _GLF_FUZZED(-22389))), 1), clamp(ivec4(0, 1, (0 | 0), _GLF_IDENTITY(1, (1) | (1))), ivec4(0, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec3(int(_GLF_IDENTITY(ivec4(0, 1, (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, 0 + (0 | 0)), (0 | _GLF_IDENTITY(0, (0) * 1)) << 0)) | (0 | 0))), 1), _GLF_IDENTITY(clamp(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) + 0)))) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))))), 1, (0 | 0), 1), ivec4(0, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (true ? int(int(1)) : _GLF_FUZZED(32681)))), (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), min(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (0)) | 0), 1), ivec4(0, 1, (0 | 0), 1)), _GLF_IDENTITY(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)), clamp(clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | _GLF_IDENTITY(0, (0) + 0)), 1)), clamp(_GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), min(ivec4(0, 1, (0 | 0), 1), _GLF_IDENTITY(ivec4(0, 1, (0 | 0), 1), (ivec4(0, 1, (0 | 0), 1)) >> ivec4(0, 0, 0, 0)))), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, _GLF_IDENTITY((0 | 0), int(_GLF_IDENTITY(ivec4((0 | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1, 0), ivec4(0, 0, 0, 0) | (ivec4((0 | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1, 0))))), 1)), clamp(ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1), ivec4(0, 1, (0 | 0), 1)))))))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(int(8), int(8)))) ^ 0), 0))) / 1)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 436.288))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-290.586)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 436.288))), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 436.288))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 436.288))), float(injectionSwitch.y), bool(true)))))), bool(true))), injectionSwitch.y))))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), (int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))) - 0)) ^ 0)) < subgroup_size)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 + (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) && true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))))))))
              continue;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) | (read_2)))), 1u), (uvec2(read_2, 1u)) << uvec2(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(1u, (1u) + 0u)), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), true && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(1u, (1u) + 0u)), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), true && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))))))))))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(1u, (1u) + 0u)), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), true && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))), ! (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (uvec2(read_2, 1u)) << uvec2(0u, 0u)))))))))))))))))), false, true)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0)))) && true) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) - (1 ^ 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) + 0), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0))))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0)))))))) >> 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))) >> 0))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), min(_GLF_IDENTITY(clamp(1, 1, 1), int(ivec2(clamp(1, 1, 1), 0))), clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(1, 1, 1))))))) << 0)))) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0)))) && true) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) - (1 ^ 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) + 0), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0))))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0)))))))) >> 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))) >> 0))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), min(_GLF_IDENTITY(clamp(1, 1, 1), int(ivec2(clamp(1, 1, 1), 0))), clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(1, 1, 1))))))) << 0)))) - 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0)))) && true) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) - (1 ^ 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) + 0), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0))))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0)))))))) >> 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))) >> 0))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), min(_GLF_IDENTITY(clamp(1, 1, 1), int(ivec2(clamp(1, 1, 1), 0))), clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(1, 1, 1))))))) << 0)))) - 0), 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88935))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0)))) && true) ? _GLF_FUZZED(-94284) : _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) - (1 ^ 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) + 0), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0))))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), max(int(ivec4(1, 1, 1, 0)), int(ivec4(1, 1, 1, 0)))))))) >> 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))) >> 0))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), min(_GLF_IDENTITY(clamp(1, 1, 1), int(ivec2(clamp(1, 1, 1), 0))), clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(1, 1, 1))))))) << 0)))) - 0), 0), 1))))))), 4, 64, 4);
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.2, (-0.2) + 0.0), -0.9)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-979.274), _GLF_FUZZED(20.42)), bvec2(false, false))))).x < injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))))))))));
                    }
                   else
                    {
                    }
                  }
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       subgroupAll(false);
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (read_1 == read_2) || false)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (read_1 == read_2) || false))) | 0u) + 1, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(22.64))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(22.64))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false))))), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
                break;
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0), min(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))), 0.0, 0.0))))))) > injectionSwitch.y))));
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false) && true) || (_GLF_DEAD(false)))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             subgroupAll(true);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))))))));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))));
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2539.5255)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0))), clamp(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2539.5255)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2539.5255)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2539.5255)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
    }
  }
}
