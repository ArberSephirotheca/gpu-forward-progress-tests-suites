#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 616.765, 9616.4059, 6704.5066))))), 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.2) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, sqrt(0.0)), (vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.2) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, sqrt(0.0))) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0))))))), (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 616.765, 9616.4059, 6704.5066))))), 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.2) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, sqrt(0.0)), (vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.2) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, sqrt(0.0))) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0)))))))) * mat2(1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.5)))) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((false), true && ((false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)) || false), true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))))), bool(bvec3((! (false)), false, true))))), (_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))) && true))))), bool(bvec3((! (false)), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))), max((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))))))))).x, 0u, 0u))), 1u, 1u, 0u)))), clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))))).x, 0u, 0u))), 1u, 1u, 0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(137228u, _GLF_IDENTITY(189502u, (189502u) | 0u), 126701u))))).x, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicXor(subgroup_id, subgroup_size)))), 0u))), 1u, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))))).x, 0u, 0u))), 1u, 1u, 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))) / 1u)))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(137228u, 189502u, 126701u)), (false ? _GLF_FUZZED(uvec3(146214u, 28697u, 14501u)) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))))))).x, 0u, 0u))), 1u, 1u, 0u)))))), (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137228u, 189502u, 126701u))))).x, 0u, 0u))), 1u, 1u, 0u)))) : _GLF_FUZZED(subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(roundEven(-770.411)))), 0.0)), mix(float(_GLF_FUZZED(8.8)), float(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0) < injectionSwitch.y)) ? determinant(mat2(1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(roundEven(-770.411)))), 0.0))), _GLF_IDENTITY(bool(true), false || (bool(true)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : workgroup_id))) | (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat2(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.3 / -8317.5748))), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (147478u & 0u))), max(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / 1u), ~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / 1u), ~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u)))) + 0u), max(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u), ~ (subgroup_size)))) / 1u), ~ (subgroup_size)))))) - (0u | 0u))) >> 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), (uint(uvec3(workgroup_base, 0u, 0u))) >> 0u)) + subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(1u, 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(1u, 1u)))))))))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), 0u ^ (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(1u, 1u)))))))) - 0u)), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) * _GLF_IDENTITY(1u, min(1u, 1u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)))))))) - 0u)))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), 0u, 0u)), 0u + (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), 0u, 0u))))))), uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(1u, (1u) * 1u)))) * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, true))), false, false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))).y, injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2.2))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2.2))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(41.55)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false), false, false, false))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4817.2465) : injectionSwitch.y)))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(41.55)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-511.003)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : injectionSwitch.y))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, abs(sqrt(0.0)), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.x, 1.0, 0.0, abs(sqrt(0.0)), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 0.0, 1.0)))), 1.0, sin(0.0), 0.0, 0.0, 1.0))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u)))))], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) >> 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) >> 0))), (~ (~ (_GLF_IDENTITY(4, (4) >> 0)))) | (~ (~ (_GLF_IDENTITY(4, (4) >> 0)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), false || ((bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(5.5, max(5.5, 5.5))) : injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) * 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((false)) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))))) && true)))))) && true))) || false, false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((false)) && true))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))))) && true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))))) && true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bool(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))))) && true))))))) || false))) && true))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(764.489), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4677.4606)), bvec2(true, false))).y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(vec2(-863.783, 5.1)))).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 0.0, 0.0, exp(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0)))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))), false, false))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(bvec2(bool(bool(false)), false), true)))))))), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false)))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false)))))), (bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))))) || false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false), true))))))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false), true))))))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, (false) || false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false))))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), ! (! (! (false))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, abs(0.0))), mix(vec2((vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, abs(0.0))))[0], (vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(274.471), _GLF_FUZZED(-4.2)), bvec2(false, false)))).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, false)), false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), clamp((buf[virtual_gid]) | (buf[virtual_gid]), (buf[virtual_gid]) | (buf[virtual_gid]), (buf[virtual_gid]) | (buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + (buf[virtual_gid]), (false ? _GLF_FUZZED(atomicExchange(workgroup_size, workgroup_id)) : 0u + (buf[virtual_gid])))), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u), (false ? _GLF_FUZZED(atomicExchange(workgroup_size, workgroup_id)) : 0u + _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))))))), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u), (false ? _GLF_FUZZED(atomicExchange(workgroup_size, workgroup_id)) : 0u + _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid])))))))) * 1u) | 0u), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(_GLF_IDENTITY(4, (4) | 0), 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(_GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), (_GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0)) ^ 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((_GLF_IDENTITY(4572, (4572) / 1)), min((4572), (4572)))) | 0) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(_GLF_IDENTITY(60015, ~ (~ (60015))), (_GLF_IDENTITY(_GLF_IDENTITY(60015, ~ (~ (60015))), (true ? _GLF_IDENTITY(60015, ~ (~ (60015))) : _GLF_FUZZED(64375)))) | (_GLF_IDENTITY(_GLF_IDENTITY(60015, ~ (~ (60015))), (_GLF_IDENTITY(60015, ~ (~ (60015)))) | 0)))) * 1))), ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (_GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (true ? _GLF_IDENTITY(-57311, max(-57311, -57311)) : _GLF_FUZZED(-48290)))) >> 0), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), _GLF_IDENTITY(min((4572), (4572)), (_GLF_IDENTITY(min((4572), (4572)), 0 | (min((4572), (4572))))) - 0))) | 0) - 0), 49661).p) | (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661), (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661), (false ? _GLF_FUZZED(ivec4(9471, 67712, -40876, -489)) : _GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661), max(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661), ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661)))))) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661))).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)))) | ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(23515, 0 | (23515)), _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY(_GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0), max(_GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0), _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0))) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | _GLF_IDENTITY(0, (0) | (0))) - 0), 49661).p) | (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (_GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), max(_GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(-57311, max(-57311, -57311))))) * 1), _GLF_IDENTITY(4572, _GLF_IDENTITY((_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, ~ (~ (4572))))))), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (_GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), max(_GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(-57311, max(-57311, -57311))))) * 1), _GLF_IDENTITY(4572, _GLF_IDENTITY((_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, ~ (~ (4572))))))), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) << 0)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)), int(ivec3(_GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), max(_GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (_GLF_IDENTITY(-57311, max(-57311, -57311))) | (_GLF_IDENTITY(-57311, max(-57311, -57311)))))), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min(_GLF_IDENTITY((4572), (true ? _GLF_IDENTITY((4572), int(ivec4((4572), 1, 0, 1))) : _GLF_FUZZED(-21837))), (4572)))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-56616)))) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1))), ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), max(_GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), (_GLF_IDENTITY(-57311, max(-57311, -57311))) | (_GLF_IDENTITY(-57311, max(-57311, -57311)))))), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min(_GLF_IDENTITY((4572), (true ? _GLF_IDENTITY((4572), int(ivec4((4572), 1, 0, 1))) : _GLF_FUZZED(-21837))), (4572)))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-56616)))) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)))) << 0), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, ((true) && true) && true)) && true)) ? _GLF_IDENTITY(min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4)))), 4), (true ? min(4, 4) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))), (_GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p)))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))), 0 | (_GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))))))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)) || false) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY(_GLF_IDENTITY((4572), max((4572), (4572))), min((4572), (4572)))) | 0) - 0), _GLF_IDENTITY(49661, (49661) / (1 & 1))).p, _GLF_IDENTITY((ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 | (0))), 49661).p), (_GLF_IDENTITY((ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 | (0))), 49661).p), min((ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 | (0))), 49661).p), _GLF_IDENTITY((ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 | (0))), 49661).p), ((ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 | (0))), 49661).p)) / 1)))) ^ 0) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY(_GLF_IDENTITY((4572), clamp(_GLF_IDENTITY((4572), ((4572)) << 0), (4572), _GLF_IDENTITY((4572), ((4572)) / 1))), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ _GLF_IDENTITY((~ (60015)), 0 | ((~ (60015)))))) * 1))))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY(_GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0), ~ (~ (_GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0)))))) - 0), 49661).p, (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, clamp(-57311, -57311, -57311)), max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, clamp(-57311, -57311, -57311)), max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, 0 | (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, clamp(-57311, -57311, -57311)), max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))) ^ 0)) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1))), ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4)), 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min(_GLF_IDENTITY((4572), ((4572)) / 1), (4572)))) | 0) - 0), 49661).p, (_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, max(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))) | (ivec4(_GLF_IDENTITY(23515, max(23515, 23515)), _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY(_GLF_IDENTITY((4572), min((4572), (4572))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4572), min((4572), (4572)))), 0 ^ (~ (_GLF_IDENTITY((4572), min((4572), (4572))))))))) | 0) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)))) | ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), _GLF_IDENTITY((_GLF_IDENTITY((4572), min((4572), (4572)))) | 0, ((_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) ^ 0)) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, max(-57311, -57311)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-57311, max(-57311, -57311))), int(ivec2(~ (_GLF_IDENTITY(-57311, max(-57311, -57311))), 1))))), _GLF_IDENTITY(4572, _GLF_IDENTITY((_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, min(4572, 4572)))))), (_GLF_IDENTITY((4572), min((4572), (4572)))) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1)))) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min(_GLF_IDENTITY((4572), 0 | ((4572))), (4572)))) | 0) - 0), 49661).p))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)), (_GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1))) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(23515, ((0 | 0) | 0) ^ (23515)), _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), _GLF_IDENTITY((4572), clamp((4572), (4572), (4572)))))) | 0) - 0), _GLF_IDENTITY(49661, min(49661, _GLF_IDENTITY(49661, (49661) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))).p, (ivec4(23515, _GLF_IDENTITY(_GLF_IDENTITY(-57311, (-57311) * ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)))), max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1))), ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((_GLF_IDENTITY(4572, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, max(4572, 4572)))))), ~ (~ (~ (_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, max(4572, 4572)))))))))))), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((_GLF_IDENTITY(4572, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, max(4572, 4572)))))), ~ (~ (~ (_GLF_IDENTITY(4572, ~ (~ (_GLF_IDENTITY(4572, max(4572, 4572)))))))))))), (4572)))) | 0) - 0), 49661).p) - 0), (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY(_GLF_IDENTITY((4572), min((4572), (4572))), 0 | (_GLF_IDENTITY((4572), min((4572), (4572)))))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, _GLF_IDENTITY(-57311, (-57311) / 1))), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - _GLF_IDENTITY(0, 0 ^ (0))), 49661).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1)))) | ((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(min(4, 4), (true ? min(4, 4) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p, (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, -57311)), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), 49661).p) | (ivec4(23515, _GLF_IDENTITY(-57311, max(-57311, _GLF_IDENTITY(-57311, ~ (~ (-57311))))), _GLF_IDENTITY(4572, _GLF_IDENTITY((4572), (_GLF_IDENTITY((4572), min((4572), (4572)))) | 0) - 0), _GLF_IDENTITY(49661, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (49661))).p))))) : _GLF_FUZZED(_GLF_IDENTITY(60015, (_GLF_IDENTITY(60015, ~ (~ (60015)))) * 1))))))))), 64, _GLF_IDENTITY(0, 1 * (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true), true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, 0u | (6u)), _GLF_IDENTITY(6u, (6u) | (6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u + (6u))), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), clamp(~ (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), 0u | (~ (uint(6u)))))), uint(6u)))), ~ (uint(6u)), _GLF_IDENTITY(~ (uint(6u)), 0u + (~ (uint(6u))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))), 1u, 1u)))) / 1u)))), 1u, ((_GLF_IDENTITY((0u ^ 1u) << _GLF_IDENTITY(uint(0u), uint(0u)), ((0u ^ 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-86.44)), vec2(_GLF_FUZZED(-5.5), (injectionSwitch)[1]), bvec2(false, true)), (false ? _GLF_FUZZED(vec2(-7082.1248, -3523.6588)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-86.44)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.5, max(_GLF_IDENTITY(-5.5, (true ? -5.5 : _GLF_FUZZED(round(-3.2)))), -5.5))), (injectionSwitch)[1]), bvec2(false, true)))))) - log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), ! (! (bool(bvec4(! (! (false)), false, false, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), ! (! (bool(bvec4(! (! (false)), false, false, true))))))))) && true))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), ! (! (bool(bvec4(! (! (false)), false, false, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), ! (! (bool(bvec4(! (! (false)), false, false, true))))))))) && true))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), false), false))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), false)))))), _GLF_IDENTITY(false, false || (false))))))))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) * 1), 0)))], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-456.478), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(4885.8076)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-3.6), 1.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0))), mix(float(_GLF_FUZZED(-69.43)), float(float(mat4(_GLF_FUZZED(-3.6), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0)))), bool(true)))), _GLF_FUZZED(117.762)), (false ? _GLF_FUZZED(vec2(-264.369, -8743.5829)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-3.6), 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0))), mix(float(_GLF_FUZZED(-69.43)), float(float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-3.6, float(_GLF_IDENTITY(mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mat3x2(mat4x2(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), 1.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-0.8)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-9931.4754)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0)))), bool(true)))), _GLF_FUZZED(117.762)), _GLF_IDENTITY(vec2(mat3(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-3.6), 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0))), mix(float(_GLF_FUZZED(-69.43)), float(float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-3.6, float(_GLF_IDENTITY(mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mat3x2(mat4x2(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), 1.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-0.8)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-9931.4754)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0)))), bool(true)))), _GLF_FUZZED(117.762)), sin(0.0), 0.0, 0.0, sin(0.0), 0.0, sin(0.0), 1.0)), vec2(1.0, 1.0) * (vec2(mat3(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-3.6), 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0))), mix(float(_GLF_FUZZED(-69.43)), float(float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-3.6, float(_GLF_IDENTITY(mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mat3x2(mat4x2(mat2(1.0) * (mat3x2(-3.6, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), 1.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-0.8)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-9931.4754)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, abs(1.0)))), bool(true)))), _GLF_FUZZED(117.762)), sin(0.0), 0.0, 0.0, sin(0.0), 0.0, sin(0.0), 1.0))))))), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) || false)) && true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false))))), false || (! (false)))))), false, true, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(39.59)))))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false)))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 return;
                }
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(false, true, false))), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(false, true, false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(false, true, false))), true))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec2(read_1 == read_2, false)))) + 1) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, (1u | 1u)))) == read_2, bool(bvec2(read_1 == read_2, false)))) + 1)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false)))) + 1, (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, (1u | 1u)))) == read_2, _GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(read_1 == read_2, false)), false, false), bvec3(bvec3(bvec3(bool(bvec2(read_1 == read_2, false)), false, false)))))))) + 1)) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) / 1u)) | (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false || (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))), false)))) + 1)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), bool(bvec2(read_1 == read_2, false)))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))))) + 1)) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) | (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1)) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))) ^ 0u), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(usubBorrow(workgroup_size, workgroup_base, subgroup_local_id)))) == read_2, false)))))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec4(bvec2(read_1 == read_2, false), false, false)))))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) - (0u & 48758u)))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))) == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true))), bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))) : _GLF_FUZZED(workgroup_base))))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1)))))) | 0u)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uint(54757)) : min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), bool(bvec2(read_1 == read_2, false)))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))))) + 1)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), bool(bvec2(read_1 == read_2, false)))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))))) + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), bool(bvec2(read_1 == read_2, false)))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))))) + 1)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), (false ? _GLF_FUZZED(137650u) : uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) || false)) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1)) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), false))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false))))) ^ 0u), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(usubBorrow(workgroup_size, workgroup_base, subgroup_local_id)))) == read_2, false)))))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec4(bvec2(read_1 == read_2, false), false, false)))))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) - (0u & 48758u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec4(bvec2(read_1 == read_2, false), false, false)))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec4(bvec2(read_1 == read_2, false), false, false)))))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec4(bvec2(read_1 == read_2, false), false, false)))))) + 1) * 1u)) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1) - (0u & 48758u)))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ _GLF_IDENTITY((read_1), ((read_1)) << 0u)))))) == read_2, bool(bvec2(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (read_1) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 1u))) == read_2, false)))) + 1) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false))))))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true))), bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), max((1), (1))))), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), bool(bvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4((read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), 0u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY((read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4((read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), 0u)))))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) ? (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1))) : _GLF_FUZZED(workgroup_base))))))) | ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, 0u | (read_2)))), bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, false)))) + _GLF_IDENTITY(1, 0 + (1)))))) | 0u)) : _GLF_FUZZED(subgroup_local_id))))))), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-9044) : 64)), 64, _GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), false, true))))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, true, false)), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0]), float(_GLF_FUZZED(-9.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true) && true), false || (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), bool(bool((read_1 == read_2)))) && true))), (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) && true)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec3(bvec2(true, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-81721))), bool(false))), clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(69.01)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(69.01)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(69.01)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(69.01)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x)), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-2.6), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-2.6), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(7763.1552)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(float(mat3x4(_GLF_FUZZED(-2.6), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(7763.1552)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), max(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), min(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), float(_GLF_FUZZED(-2.6)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)), 1.0, 1.0, 0.0, 1.0, 0.0)))), bool(true))))) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false)))))) || false)), bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true), false || (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(true, true), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))), (_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false)))))) || false)))) || false)), bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))), ((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))))) || false) && true), false || (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(true, true), false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false)))))) || false)), bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false || (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(true, true), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)), bool(bool(bool(bvec3(true, false, false)))))) || false)), bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(true, true), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(true, true), false))), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(true, true), false))), false, true))))))))))))))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4010.6891)), vec2(_GLF_FUZZED(-7.3), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7451.0669)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-1.6) : clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, round(length(normalize(1.0))), 0.0), transpose(transpose(mat2(1.0, 1.0, round(length(normalize(1.0))), 0.0)))))), 0.0, 0.0, abs(sin(0.0))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1914.9441)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))), bool(true))), log(1.0), 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).x), 0.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), sqrt(0.0), determinant(mat2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4010.6891)), vec2(_GLF_FUZZED(-7.3), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7451.0669)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-1.6) : clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, round(length(normalize(1.0))), 0.0), transpose(transpose(mat2(1.0, 1.0, round(length(normalize(1.0))), 0.0)))))), 0.0, 0.0, abs(sin(0.0))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1914.9441)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))), bool(true))), log(1.0), 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).x), 0.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), sqrt(0.0), determinant(mat2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
}
