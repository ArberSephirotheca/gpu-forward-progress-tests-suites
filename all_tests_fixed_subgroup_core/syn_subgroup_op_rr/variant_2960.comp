#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))], injectionSwitch[1])).x > injectionSwitch.y)))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-301.183), _GLF_FUZZED(79.60)), bvec2(false, false))).y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -101.647)) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id)), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_id), 0u ^ (_GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_id)))))))))) * subgroup_size))), uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id)), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_id), 0u ^ (_GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_id)))))))))) * subgroup_size))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u)))))), subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) >> _GLF_IDENTITY(0u, (0u) - (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) << (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) & _GLF_IDENTITY(uvec3(105884u, 76879u, _GLF_IDENTITY(182260u, (182260u) | 0u)), (uvec3(105884u, 76879u, _GLF_IDENTITY(182260u, (182260u) | 0u))) | (uvec3(105884u, 76879u, _GLF_IDENTITY(182260u, (182260u) | 0u)))).s)))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(float(workgroup_base)))) < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-3.5)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(2517.4452), _GLF_FUZZED(-8.9)), bvec2(false, false))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(float(workgroup_base)))) < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))))))))), bool(bvec3(false, true, false)))), true)))))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true) && (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), true))))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7101.9080, -11.65)) : injectionSwitch)))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))), false)))), true)))))), ! (! ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true) && (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), true))))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7101.9080, -11.65)) : injectionSwitch)))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))), false)))), true))))))))), false || ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true) && (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true) && (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), true))))))))))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-70.57)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))), false)))), true))))))))) && true)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))), (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), bool(bvec3(bool(bvec4(! (false), true, true, false)), false, true)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)))), (false) || _GLF_IDENTITY(false, ! (! (false))))))))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), log(1.0), tan(0.0), 1.0)), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? mat2x4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), log(1.0), tan(0.0), 1.0)), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-3.9, 3.9, -7.2, 8.8, -2.6, 72.35, 818.423, 8.2))))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(-704.394, -73.13, -9.5, 3.4, 968.058, 3.2, 2622.6998, 809.937, 23.60, -6.8, 58.35, -5.9)))))).x > injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (_GLF_DEAD(false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch, tan(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(-704.394, -73.13, -9.5, 3.4, 968.058, 3.2, 2622.6998, 809.937, 23.60, -6.8, 58.35, -5.9)))))).x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), false || ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ((true)) && true))), ! (! (! ((_GLF_IDENTITY((true), ((true)) && true)))))))) && true))), bool(bvec4(true && _GLF_IDENTITY((true), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), false || ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ((true)) && true))), ! (! (! ((_GLF_IDENTITY((true), ((true)) && true)))))))) && true))), true, true, false))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && _GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(true, ! (! (true)))), false), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))) || false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), (_GLF_IDENTITY((true), true && ((true)))) && true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ! (! (_GLF_IDENTITY((true), true && ((true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), true && ((true))), true)))))), false, true)), true && (bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, true && (true))))))))) && true)))), _GLF_IDENTITY(((true)) && true, true && (_GLF_IDENTITY(((true)) && true, ! _GLF_IDENTITY((! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))) && true))), false || (bool((! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))) && true)))))), ! (! (bool(_GLF_IDENTITY(bool((! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))) && true))), false || (bool((! (((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ((true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))) || false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))))))))))))))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), true && ((true))), true), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), true && ((true))), true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true)), true && (bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), true && ((true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), true && ((true))), true), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), true && ((true))), true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true)), true && (bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), true && ((true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))))))) && true))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), true && ((true))), true), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), true && ((true))), true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true)), true && (bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), true && ((true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))))))) && true))), false, false, false)))) || false)), _GLF_IDENTITY(((true)) && true, true && (_GLF_IDENTITY(((true)) && true, ! (! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false))))) && true))))))))))), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(true, (true) && true) && ((true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(true, (true) && true) && ((true))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))))), (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))))) || false)))), true && ((true))), true), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), true && ((true))), true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), true)))))), false, true)), true && (bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, (true) && true))))))), false, true))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && ((true))), _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), true && ((true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))))))) && true)))), _GLF_IDENTITY(((true)) && true, true && (_GLF_IDENTITY(((true)) && true, ! (! (((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false))))) && true)))))))))))) && true)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), (_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), max(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), _GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))))), _GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35)))))))))) + 0.0))), _GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), (_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), max(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))), _GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))))))), _GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35)))))))))) + 0.0))), _GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))), bool(true)))), float(_GLF_FUZZED(27.03)), bool(false))) < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(_GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))), clamp(float(78.35), float(78.35), float(78.35))))))), (_GLF_IDENTITY(78.35, float(_GLF_IDENTITY(_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35))))), (_GLF_IDENTITY(float(78.35), min(float(78.35), _GLF_IDENTITY(float(78.35), clamp(float(78.35), float(78.35), float(78.35)))))) - 0.0)))) + 0.0))), _GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))), bool(true))) < injectionSwitch.y))))))
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28554)))))))) < subgroup_size)
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, min(read_1, read_1)))))) / 1u) == read_2, (read_1 == read_2) && true)), 0u ^ (uint(read_1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! ((read_1 == read_2) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))), 0u ^ (uint(read_1 == read_2))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), 0u ^ (uint(read_1 == read_2))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) && true)), 0u ^ (uint(read_1 == read_2)))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), 0u ^ (uint(read_1 == read_2))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) && true)), 0u ^ (uint(read_1 == read_2)))))) << 0u) + (0u | 0u)))) >> 0u) + 1, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-82338) : _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), 1 * (64)))), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))) || false))))
        barrier();
       subgroupAll(false);
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))))))) << 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), bool(bvec2(true && (read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false))))), ~ (~ _GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))) == read_2)), 0u + (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) / 1u))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 4, 64, 4);
       subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
