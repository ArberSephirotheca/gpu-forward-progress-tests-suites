#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), float(_GLF_FUZZED(-37.30)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), vec2(vec2(injectionSwitch))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))), ! (! (true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]), 0.0 + (clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(vec3(-61.33, -89.20, -9.7)[2]))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | (0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u)))), max(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u))))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) << 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, _GLF_IDENTITY(607.086, (607.086) * abs(1.0)), _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))))), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id))))))), clamp((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id))))))), (_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))))), (_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id))))))))), (_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))) * 1u))))))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) | (workgroup_id % subgroup_id))) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id) | (subgroup_local_id)), clamp(_GLF_IDENTITY(~ ((subgroup_local_id) | (subgroup_local_id)), (true ? ~ ((subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(workgroup_base))), ~ ((subgroup_local_id) | (subgroup_local_id)), ~ ((subgroup_local_id) | (subgroup_local_id))))))) : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(176661u) : (subgroup_local_id))))) | (subgroup_local_id)) : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_id % subgroup_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, max(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : workgroup_id % subgroup_id)), (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), max(_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(virtual_gid) : subgroup_id)), uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id))))))))), 0u + (0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (_GLF_IDENTITY(workgroup_id % subgroup_id, ~ (~ (workgroup_id % subgroup_id)))) + 0u)))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, _GLF_IDENTITY(workgroup_id % subgroup_id, ~ (~ (workgroup_id % subgroup_id))))))))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY((mat2x3(-2.4, 38.61, _GLF_IDENTITY(-6.6, (false ? _GLF_FUZZED(asin(-5.8)) : -6.6)), 607.086, -387.415, -3.6) , subgroup_id), ((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)) * 1u))))) | 0u)))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, _GLF_IDENTITY(-387.415, max(-387.415, -387.415)), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % subgroup_id, min(_GLF_IDENTITY(workgroup_id % subgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id % subgroup_id, (workgroup_id % subgroup_id) + _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)))))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))))))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u)))), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))))))) + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, _GLF_IDENTITY(38.61, (_GLF_IDENTITY(38.61, (true ? 38.61 : _GLF_IDENTITY(_GLF_FUZZED(sinh(13.46)), mix(float(_GLF_FUZZED(sinh(13.46))), float(_GLF_FUZZED(4.1)), bool(false)))))) + 0.0), _GLF_IDENTITY(-6.6, clamp(-6.6, _GLF_IDENTITY(-6.6, mix(float(-6.6), float(_GLF_FUZZED(_GLF_IDENTITY(-99.92, max(-99.92, _GLF_IDENTITY(-99.92, float(vec3(_GLF_IDENTITY(-99.92, (-99.92) - 0.0), 1.0, 1.0))))))), bool(false))), -6.6)), 607.086, _GLF_IDENTITY(-387.415, max(-387.415, _GLF_IDENTITY(-387.415, clamp(-387.415, -387.415, -387.415)))), -3.6) , subgroup_id)), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED((_GLF_IDENTITY((mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-2.4, float(float(-2.4))), mix(float(-2.4), float(_GLF_FUZZED(-7.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id), (mat2x3(-2.4, 38.61, -6.6, _GLF_IDENTITY(_GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086)), _GLF_IDENTITY((607.086) + log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(607.086, _GLF_IDENTITY(clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))), (false ? _GLF_FUZZED(1.3) : clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))))))) + log(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-56.00, mix(float(-56.00), float(_GLF_FUZZED(-737.940)), bool(false)))))), injectionSwitch.y))), _GLF_IDENTITY(float(mat2x4(((_GLF_IDENTITY(607.086, _GLF_IDENTITY(clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))), (false ? _GLF_FUZZED(1.3) : clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))))))) + log(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-56.00, mix(float(-56.00), float(_GLF_FUZZED(-737.940)), bool(false)))))), injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(mat2x4(((_GLF_IDENTITY(607.086, _GLF_IDENTITY(clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))), (false ? _GLF_FUZZED(1.3) : clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))))))) + log(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-56.00, mix(float(-56.00), float(_GLF_FUZZED(-737.940)), bool(false)))))), injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-419.487)), float(float(mat2x4(((_GLF_IDENTITY(607.086, _GLF_IDENTITY(clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))), (false ? _GLF_FUZZED(1.3) : clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))))))) + log(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-56.00, mix(float(-56.00), float(_GLF_FUZZED(-737.940)), bool(false)))))), injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), bool(true))), float(mat2x4(((_GLF_IDENTITY(607.086, _GLF_IDENTITY(clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))), (false ? _GLF_FUZZED(1.3) : clamp(_GLF_IDENTITY(607.086, float(mat3x4(607.086, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(607.086, 1.0 * (607.086)), _GLF_IDENTITY(607.086, clamp(607.086, 607.086, 607.086))))))) + log(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-56.00, mix(float(-56.00), float(_GLF_FUZZED(-737.940)), bool(false)))))), injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) / 1.0)), -387.415, -3.6) , subgroup_id) - 0u))), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_id % subgroup_id, 0u | (_GLF_IDENTITY(workgroup_id % _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id % subgroup_id, clamp(workgroup_id % subgroup_id, workgroup_id % subgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u) % subgroup_id)), uint(uint(_GLF_IDENTITY(workgroup_id, (0u | 0u) ^ (workgroup_id)) % subgroup_id))), _GLF_IDENTITY(workgroup_id % subgroup_id, min(workgroup_id % subgroup_id, workgroup_id % subgroup_id)))))))) : true ? subgroup_local_id : _GLF_FUZZED((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id)))), true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED((_GLF_IDENTITY((mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id), (mat2x3(-2.4, 38.61, -6.6, 607.086, -387.415, -3.6) , subgroup_id) / 1u))))))) + 1) % _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-65512))), _GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22044) : 64)), _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(-35573)), (_GLF_IDENTITY((true ? 64 : _GLF_FUZZED(-35573)), max((true ? 64 : _GLF_FUZZED(-35573)), (true ? 64 : _GLF_FUZZED(-35573))))) >> 0)), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) / 1.0), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2) + 1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))))))) + 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))))))) + 1), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))))))) + 1))))) : _GLF_IDENTITY(_GLF_FUZZED(51700u), (_GLF_FUZZED(51700u)) | (_GLF_FUZZED(51700u))))) >> 0u, max(_GLF_IDENTITY((uint(read_1 == read_2) + 1), (true ? (uint(read_1 == read_2) + 1) : _GLF_IDENTITY(_GLF_FUZZED(51700u), uint(uvec4(_GLF_FUZZED(51700u), 1u, 0u, 0u))))) >> 0u, _GLF_IDENTITY((uint(read_1 == read_2) + 1), (true ? (uint(read_1 == read_2) + 1) : _GLF_FUZZED(51700u))) >> 0u))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
