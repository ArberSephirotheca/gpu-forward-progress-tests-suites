#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 vec4 _f0;
 int _f1;
 mat2x3 _f2;
 bool _f3;
 mat2 _f4;
 uint _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 vec3 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bool _f1;
 ivec3 _f2;
 uint _f3;
 mat3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 uint workgroup_base;
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), true))), true)))))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(706.867), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(28.33)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)))))), true, true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), 0 ^ (int(6))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(82772) : int(6)))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) | 0)) + 0)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), (0 + (4)) * 1))) ^ 0)) | 0)) + 0))) | _GLF_IDENTITY((int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) | 0)) + 0))), min(_GLF_IDENTITY((int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0)))) | 0)) + 0))), ((int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0)))) | 0)) + 0)))) - (0 << _GLF_IDENTITY(int(0), int(0)))), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) | 0)) + 0)))))), _GLF_IDENTITY(int(ivec4(int(4), 0, 1, 0)), max(int(ivec4(int(4), 0, 1, 0)), int(ivec4(int(4), 0, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(ivec4(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(9137) : _GLF_IDENTITY(1, max(1, 1)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1)))) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) >> (0 | 0)))
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(3), int(3))) | (0 >> _GLF_IDENTITY(int(3), int(3))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
          barrier();
        }
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || _GLF_IDENTITY((false || (true)), false || ((false || (true))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false || (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))) && true))) && (_GLF_IDENTITY(true, false || (true)))) && true)) || false)) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) && true)))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_IDENTITY(true, false || (true)))) && true)) || false)) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false, false)))))), false, false)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (((true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), false || (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, false, true)), (bool(bvec4((true), true, false, true))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (((true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), false || (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, false, true)), (bool(bvec4((true), true, false, true))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), false, true), bvec3(bvec4(bvec3(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (((true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), false || (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, false, true)), (bool(bvec4((true), true, false, true))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), false, true), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (true))) || false) && (_GLF_IDENTITY(true, false || (true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true, false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true && (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true && (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))))))))) && true)), true, _GLF_IDENTITY(true, (true) || false))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true, false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true && (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))), true && (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, false || (true)))))))))) && true)), true, _GLF_IDENTITY(true, (true) || false)))))))))))), true, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) || false)) && true, ((_GLF_IDENTITY((true), ((true)) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false)))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false))), true && ((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false)))))), bool(bvec2(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true)))), true, false, false)))), ! (! (bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, false, false))))))), false)))) && true)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) || false)) && true, ((_GLF_IDENTITY((true), ((true)) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false)))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false))), true && ((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false)))))), bool(bvec2(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true)))), true, false, false)))), ! (! (bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, false, false))))))), false)))) && true)))), bool(bvec2(! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) || false)) && true, ((_GLF_IDENTITY((true), ((true)) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), (false || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), false)), false, true, true))))) || false))))))), true, false, _GLF_IDENTITY(false, (false) || false)))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false))), true && ((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), (_GLF_IDENTITY((true), ((true)) || false)) && true)) && true)))), true, false, false)))))), bool(bvec2(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true)))), true, false, false)))), ! (! (bool((bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true, false, false))))))), false)))) && true)))), false))))))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-190.471, -9435.3251)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y, false, true))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec2(_injected_loop_counter, 0)), (false ? _GLF_FUZZED(45362) : int(ivec2(_injected_loop_counter, 0))))) != (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), (1 & _GLF_IDENTITY(1, max(1, 1))) / 1))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_injected_loop_counter > 0, false)), ! (! (_GLF_IDENTITY(bool(bvec2(_injected_loop_counter > 0, false)), true && (bool(bvec2(_injected_loop_counter > 0, false))))))), bool(bool(_GLF_IDENTITY(bool(bvec2(_injected_loop_counter > 0, false)), bool(bvec4(bool(bvec2(_injected_loop_counter > 0, false)), true, true, false)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))) && true))))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))) && true))))
        {
         for(int _injected_loop_counter = (0 & 35665); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), clamp(0 << _GLF_IDENTITY(int(8), int(8)), 0 << _GLF_IDENTITY(int(8), int(8)), 0 << _GLF_IDENTITY(int(8), int(8)))), 0 << _GLF_IDENTITY(int(8), int(8))))) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) | (7))) / 1))))), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0) * 1.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(sign(7.3)) : float(injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) - 0.0))) / 1.0) * 1.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))), true, false)))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))).y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(workgroup_size * workgroup_id, _GLF_struct_3(_GLF_struct_0(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-771.676)), _GLF_IDENTITY(float(1.0), min(float(1.0), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(6.9))))), bool(true)))), true, _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(clamp(ivec3(1), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), ivec3(1)), min(clamp(ivec3(1), ivec3(1), ivec3(_GLF_IDENTITY(1, (92276 & 0) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0))))), clamp(ivec3(1), ivec3(1), ivec3(1))))), 1u, _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(mat3(_GLF_IDENTITY(2.1, clamp(2.1, 2.1, 2.1)), 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327), transpose(transpose(mat3(_GLF_IDENTITY(2.1, clamp(2.1, 2.1, 2.1)), 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327))))) : mat3(1.0)), (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED(mat3(-3358.7304, -5.7, -1.7, -4907.6877, 2.8, 913.763, -1.9, 3.6, 45.86))))) : _GLF_FUZZED(mat3(-3.2, -778.142, -4129.4635, 8.9, -1208.9231, -5823.6637, 1.2, 946.312, 2151.9949))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)), (_GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, _GLF_IDENTITY(-9.7, clamp(-9.7, -9.7, -9.7)), 9.4, 478.767, 5451.5327))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))) : mat3(1.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), _GLF_IDENTITY(7.2, clamp(7.2, 7.2, _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(_GLF_IDENTITY(4051.9947, clamp(4051.9947, 4051.9947, 4051.9947))))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-10.50, 5.5, -358.861, -25.07, -9.6, -8568.2106, 9.5, -7107.4902, -47.68)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), _GLF_IDENTITY(7.2, clamp(7.2, 7.2, _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(_GLF_IDENTITY(4051.9947, clamp(4051.9947, 4051.9947, 4051.9947))))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0), (true ? false ? _GLF_FUZZED(mat3(2.1, _GLF_IDENTITY(420.507, (true ? 420.507 : _GLF_FUZZED(4051.9947))), 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0) : _GLF_FUZZED((mat3(-3.7, -45.13, -5.9, 5.7, 12.00, -8.4, 4376.6958, 4.5, 7773.4960) + mat3(3697.3867, 269.261, 4.4, -38.65, 726.757, 4.2, -4.4, 8.4, 7163.8322))))), mat3(mat4x3(false ? _GLF_FUZZED(mat3(2.1, 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)) : mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-10.50, 5.5, -358.861, -25.07, -9.6, -8568.2106, 9.5, -7107.4902, -47.68)))))) : _GLF_FUZZED(mat3(0.9, -89.04, 11.81, -5.1, -586.438, 2.5, -71.22, 9.1, -25.37)))) : _GLF_FUZZED(mat3(-2.1, 0.4, 9757.8436, 5029.4125, -0.2, 557.003, -5022.4134, -6.1, 68.86))))), (true ? transpose(_GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(_GLF_IDENTITY(2.1, float(mat4(2.1, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.81)), bool(false)))), 1.0, 0.0, 0.0))), 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)), (false ? _GLF_FUZZED(mat3(178.244, -1.2, 2.0, -575.936, -80.96, -47.82, -986.966, -9.4, 28.90)) : _GLF_FUZZED(mat3(_GLF_IDENTITY(2.1, float(mat4(2.1, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.81)), bool(false)))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-1750.4472)), bool(false))))) ? sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.81)), bool(false)))) : _GLF_FUZZED(_GLF_IDENTITY(-8.7, (-8.7) + 0.0))), float(float((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-1750.4472)), bool(false))))) ? sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.81)), bool(false)))) : _GLF_FUZZED(_GLF_IDENTITY(-8.7, (-8.7) + 0.0))))))), 1.0, 0.0, 0.0))), 420.507, 7.2, 707.467, -968.686, -9.7, 9.4, 478.767, 5451.5327)))) : mat3(1.0))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(-2.1, min(_GLF_IDENTITY(-2.1, (-2.1) + log(1.0)), -2.1)), 0.4, 9757.8436, 5029.4125, -0.2, 557.003, -5022.4134, -6.1, 68.86))))) : _GLF_FUZZED(mat3(-970.588, -64.72, 0.0, _GLF_IDENTITY(-5.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(81.91) : -5.0)), -91.28, -7988.3545, 7675.3653, 4.2, 3.4))))))), _GLF_struct_1(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-5.1))), vec3(1.0)), _GLF_struct_2(vec4(1.0), 1, mat2x3(1.0), true, mat2(1.0), 1u, ivec4(1)), vec2(1.0)));
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), true))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 1.0, exp(0.0))), min(float(vec4(injectionSwitch.y, 1.0, 1.0, exp(0.0))), float(vec4(injectionSwitch.y, 1.0, 1.0, exp(0.0))))))))))
                          barrier();
                        }
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((_GLF_IDENTITY(-551.506, (-551.506) + 0.0) + vec2(4404.7948, -1.2))) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((_GLF_IDENTITY(-551.506, (-551.506) + 0.0) + vec2(4404.7948, -1.2))) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((_GLF_IDENTITY(-551.506, (-551.506) + 0.0) + vec2(4404.7948, -1.2))) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(0.2)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(-8.6, 7943.2576, 8.2)) : injectionSwitch.x)) > injectionSwitch.y))), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(-8.6, 7943.2576, 8.2)) : injectionSwitch.x)) > injectionSwitch.y))), false))))))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), false)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))), false, true))))))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED((9.7 + 1.9))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(382.222))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-27.04))), 1.0) * (injectionSwitch)))).y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(-3.0))) > injectionSwitch.y))), false), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), false)))))
                barrier();
              }
             do
              {
               for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false)))), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(_GLF_IDENTITY(bool(false || ((false))), true && (bool(false || ((false)))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(false || ((false))))))))) && true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec3(vec2(1.0, 1.0), 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (true ? _GLF_struct_replacement_4.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_id))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (((_GLF_IDENTITY(-29169 & 0, (-29169 & 0) / ((0 >> _GLF_IDENTITY(int(5), int(5))) ^ 1))) | 0) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)), (bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6754.9783) : 1.0))) - sin(0.0)), 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), vec2(mat3x4((vec2(1.0, 1.0)) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(radians(max(vec2(3531.2524, -79.08), 2.7)))))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8100.2167)), bvec2(true, false)))) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atan(-622.962))))), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(radians(max(vec2(3531.2524, -79.08), 2.7)))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-634.046)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), mix(float(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0))), float(_GLF_FUZZED(-9.9)), bool(false))), 0.0)), (false ? _GLF_FUZZED(-43.56) : float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-634.046)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), mix(float(determinant(mat2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0))), float(_GLF_FUZZED(-9.9)), bool(false))), 0.0))))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(roundEven(-4.8)))), 1.0)), 1.0), mix(vec2(_GLF_FUZZED(-2.8), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0))), 1))]), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)))[0], ((((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)))[0]) + sqrt(0.0)), (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(292.604), _GLF_FUZZED((-4.5))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[0], _GLF_FUZZED(-818.246)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(radians(max(vec2(3531.2524, -79.08), 2.7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(radians(max(vec2(_GLF_IDENTITY(3531.2524, min(3531.2524, 3531.2524)), -79.08), 2.7))), vec2(mat3x4(_GLF_FUZZED(radians(max(vec2(_GLF_IDENTITY(3531.2524, min(3531.2524, 3531.2524)), -79.08), 2.7))), 1.0, 1.0, 0.0, 1.0, abs(cos(0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), false, false, false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
              }
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), true, true))));
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)), false, false)))) || false)) && true); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, 1u, 1u), (false ? _GLF_FUZZED(uvec3(141807u, 101582u, 146900u)) : uvec3(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, 1u, 1u))))), _GLF_struct_replacement_4.workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u, 0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size, (_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size) | (_GLF_struct_replacement_4.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), 0u), (uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), 0u)) | uvec2(0u, 0u)))) : _GLF_FUZZED(subgroup_id)))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), int(int((1)))), (1))) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) | ((1))) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true, true && (true)) ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0)))) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), max(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), ~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), max(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), ~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))), 1u, 1u))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), 0u ^ (max(subgroup_local_id, subgroup_local_id))))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) | 0u)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), (true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) : _GLF_FUZZED(max(workgroup_id, workgroup_size)))))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (true ? ~ (1u) : _GLF_FUZZED(virtual_gid))))), 1u)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)), min(min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)), (min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))) * 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))), 0 | (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0)))))))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)))), 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1)), (clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) ^ (0 | 0))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, clamp((1) - 0, (1) - 0, _GLF_IDENTITY((1) - 0, clamp((1) - 0, (1) - 0, (1) - 0))))), 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))) + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (int(_GLF_IDENTITY(1, (1) - 0)))))), (false ? _GLF_FUZZED(27133) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (int(_GLF_IDENTITY(1, (1) - 0))))))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), uint(uint(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (int(_GLF_IDENTITY(1, (1) - 0)))))), (false ? _GLF_FUZZED(27133) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (int(_GLF_IDENTITY(1, (1) - 0))))))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup)))), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), (1))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1))) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(clamp(-12323, findMSB(-46855), 50440)) : 1)), (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) >> 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))), 0u + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), clamp(ivec2((1), 1), ivec2((1), 1), ivec2((1), 1))))), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))) - 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(55040)))) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))) - 0)) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) - 0), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)))))))))) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), uint(uvec3((_GLF_IDENTITY(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), max(true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup), true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size : _GLF_FUZZED(num_workgroup)))), 1u, 1u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false))) || false, true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false))) || false, false || ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), min(~ (int(2)), ~ (int(2))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (next_virtual_gid) ^ 0u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, int(_GLF_IDENTITY(ivec4((1) * 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (ivec4((1) * 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) | ivec4(0, 0, 0, 0))))))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) / 1u, (false ? _GLF_FUZZED((num_workgroup >> workgroup_id)) : _GLF_IDENTITY((uint(3u)) / 1u, ((uint(3u)) / 1u) * 1u)))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) + 0u), uint(3u))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(uint(3u), uint(3u))))), uint(uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) << _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY((uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY((uint(1)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(947.325)), vec2(_GLF_FUZZED(float(33058u)), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(1831.2305)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), ((uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))), (uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4))))) | 0, ((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))) | 0) << 0)), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64))) << 0), max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64))) << 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), int(ivec4(clamp(64, 64, 64), (0 << _GLF_IDENTITY(int(8), int(8))), 0, 0)))), 64))) << 0)))) | (64)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))) >> 0)) / 1))));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79477) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))))))) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(9.5, -7409.5552, -0.8, -3.7).s), _GLF_FUZZED(-6.9)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || (false))) || false)))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-978.700)), bool(false))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), float(vec2(float(injectionSwitch.x), 1.0))))) > injectionSwitch.y))))) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-978.700)), bool(false))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), float(vec2(float(injectionSwitch.x), 1.0))))) > injectionSwitch.y))))) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-978.700)), bool(false))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), float(vec2(float(injectionSwitch.x), 1.0))))) > injectionSwitch.y))))) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) || false), false, true))))) || false)));
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4487 & 0), ((4487 & 0)) ^ 0), (_GLF_IDENTITY((4487 & 0), ((4487 & 0)) / 1)) >> 0) | (4)), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), true, true, true))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)) * (injectionSwitch))[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), (bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true))) || false), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), true, false, true)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))) && (subgroup_local_id + 1 < subgroup_size)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)) < subgroup_size), bool(bvec4((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)) < subgroup_size), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))))))) << 0))) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))))))) << 0))) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), false, true)), (bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0))))))))) << 0))) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), false, true))) || false)))))) && true))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec4(bool(bool(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), false, false, false)), (bool(bvec4(bool(bool(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), false, false, false))) || false)))))), bool(bvec2(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true))), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true))), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true))), injectionSwitch)))).y))), true)))) || false), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(70.28, mix(float(70.28), float(_GLF_FUZZED(2.6)), bool(false))))), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), bvec2(false, true))), injectionSwitch)).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))))), injectionSwitch)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), bvec2(false, true))), injectionSwitch)).y))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(70.28, mix(float(70.28), float(_GLF_FUZZED(2.6)), bool(false))))), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))[1]), bvec2(false, true))), injectionSwitch)).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))), false)), true, true))))))))))))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), false, false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), false, false))), true)), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))))), injectionSwitch)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(70.28)), vec2(_GLF_FUZZED(-2387.9491), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 0.0, log(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), injectionSwitch)).y)))))) && true)))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7068.0875)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 1u), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(read_2, min(read_2, read_2)) : _GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(true ? read_2 : _GLF_FUZZED(subgroup_local_id), 0u | (true ? read_2 : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? read_2 : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? read_2 : _GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? read_2 : _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(floatBitsToUint(844.527)) : true ? read_2 : _GLF_FUZZED(subgroup_local_id))))))), clamp(read_2, read_2, read_2)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))) : _GLF_FUZZED(uvec2(74122u, 130229u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(87701) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (1)))))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))) | (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))))))))), ((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))) | (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))))))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), (false ? _GLF_FUZZED(ivec2(-37227, -38114).y) : (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (1)))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))) | (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))))))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))) | (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))))))))) | 0)), ((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0))), ~ (~ (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))))), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))) | (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) >> 0)))))))))) << (0 >> _GLF_IDENTITY(int(3), int(3))))))))), (1 ^ 1) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(87701) : 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(87701), (_GLF_IDENTITY(_GLF_FUZZED(87701), 0 | (_GLF_FUZZED(87701)))) << 0) : 1) >> 0))))), 4, 64, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, 0 + (4)))));
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, false))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 1.0, 0.0))))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 1.0, 1.0, 1.0, _GLF_IDENTITY(exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sin(0.0) + (exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.6)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.0) : 0.0))), bool(true))), log(1.0), 1.0)), 1.0, 1.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-14.77) : 1.0)), exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, log(1.0), 1.0), transpose(transpose(mat2(1.0, 0.0, log(1.0), 1.0))))), clamp(determinant(mat2(1.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0)), determinant(mat2(1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9791.1820)), float(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), bool(true))))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), log(1.0), 1.0)))), 1.0, 1.0))))))))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), true && (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ((_GLF_IDENTITY(true, bool(bool(true))))) && true)), true && (_GLF_IDENTITY(true, false || (true))))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(true, false || (true))))) || false)), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)))))), true && (_GLF_IDENTITY(true, false || (true))))) || false)), true))), ! (! (! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), false, false)))))) || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (true))))) || false)), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)))))), true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ((true)) || false)), ! (! (bool(_GLF_IDENTITY((true), ((true)) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ((true)) || false)), ! (! (bool(_GLF_IDENTITY((true), ((true)) || false)))))), true)))))))) || false)), true))), ! (! (! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (true))))) || false)), true)))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), true, true, true)))))), true && (_GLF_IDENTITY(true, false || (true))))) || false)), true))), ! (! (! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) || (_GLF_IDENTITY(true, bool(bool(true))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true)))))))) || false)), true))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(false);
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-1.4) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mat3(1.0) * (vec3(injectionSwitch, 0.0)))) / vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mat3(1.0) * (vec3(injectionSwitch, 0.0)))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mat3(1.0) * (vec3(injectionSwitch, 0.0)))) / vec3(1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))), max(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.3)), bool(false)))))), clamp(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))), _GLF_IDENTITY((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec3(vec3(_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), mix(vec3(((vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(81.73), ((vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(7021.6833), ((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED(10.44)), vec2(_GLF_FUZZED((-1482.9615 / 8.0)), (injectionSwitch)[1]), bvec2(false, true))), 0.0)))[1], _GLF_FUZZED(78.93)), bvec3(false, true, false))))), (vec3(vec3(_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), mix(vec3(((vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(81.73, max(_GLF_IDENTITY(81.73, mix(float(81.73), float(_GLF_FUZZED(-5.3)), bool(false))), 81.73))), ((vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(7021.6833), ((vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(78.93, mix(float(_GLF_FUZZED((72.57))), float(_GLF_IDENTITY(78.93, max(_GLF_IDENTITY(78.93, (78.93) - 0.0), 78.93))), bool(true))))), bvec3(false, true, false)))))) / abs(vec3(1.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0), min((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), (vec3(injectionSwitch, 0.0)) / vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), _GLF_IDENTITY((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), clamp((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))), 0.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)) + (mat2(_GLF_IDENTITY((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), clamp((vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))), 1.0)), 1.0))), 0.0))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y))) && true)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(735.467))), (injectionSwitch.x) * 1.0) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), true)))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.9)))) > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true, true, false))), false || (true)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) >> 0), 0))], _GLF_FUZZED(-61.45)), vec2(_GLF_FUZZED(vec4(17.33, 13.27, -95.68, -151.927).s), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))), injectionSwitch, injectionSwitch)).y)) || (_GLF_IDENTITY(false, (false) && true))))), (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))), false || (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))))))) || false) && true) || (true)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(false, (false) || false)))))) || false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2, read_2)), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) / 1u), false ? _GLF_FUZZED(virtual_gid) : read_2, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(virtual_gid), 0u)), clamp(uint(uvec2(_GLF_FUZZED(virtual_gid), 0u)), uint(uvec2(_GLF_FUZZED(virtual_gid), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(virtual_gid), 0u)), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec2(_GLF_FUZZED(virtual_gid), 0u))))))) : read_2) - 0u, max(_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : read_2) - 0u, ~ (~ ((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size)))) - 0u))), (false ? _GLF_FUZZED(virtual_gid) : read_2) - 0u))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))) : read_2, false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | _GLF_IDENTITY((read_2), ((read_2)) ^ 0u)))))))))), clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, clamp(false ? _GLF_FUZZED(virtual_gid) : read_2, false ? _GLF_FUZZED(virtual_gid) : read_2, _GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, max(false ? _GLF_FUZZED(virtual_gid) : read_2, false ? _GLF_FUZZED(virtual_gid) : read_2)))))), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, ~ (~ (false ? _GLF_FUZZED(virtual_gid) : read_2))), false ? _GLF_FUZZED(virtual_gid) : read_2)), false ? _GLF_FUZZED(virtual_gid) : read_2, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_FUZZED(workgroup_size), max(true ? virtual_gid : _GLF_FUZZED(workgroup_size), true ? virtual_gid : _GLF_FUZZED(workgroup_size)))))) : read_2, max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))), _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))))) : read_2, 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, min(false ? _GLF_FUZZED(virtual_gid) : read_2, false ? _GLF_FUZZED(virtual_gid) : read_2)))), false ? _GLF_FUZZED(virtual_gid) : read_2)))))), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, clamp(false ? _GLF_FUZZED(virtual_gid) : read_2, false ? _GLF_FUZZED(virtual_gid) : read_2, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, max(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) + 0u), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_2, (read_2) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, max(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) + 0u), false ? _GLF_FUZZED(virtual_gid) : read_2)), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, max(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) + 0u), false ? _GLF_FUZZED(virtual_gid) : read_2))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2) + 0u), false ? _GLF_FUZZED(virtual_gid) : read_2))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) >> _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(0, clamp(0, 0, 0))), 0)), (int(ivec2((_GLF_IDENTITY(0, clamp(0, 0, 0))), 0))) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))))), ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) << 0)) << 0))), int(ivec2((_GLF_IDENTITY(0, clamp(0, 0, 0))), 0))), (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) - 0)))), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), int(ivec2((0), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ ((1) >> _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-8747), (_GLF_IDENTITY(_GLF_FUZZED(-8747), (-17328 & 0) | (_GLF_FUZZED(-8747)))) | (_GLF_IDENTITY(_GLF_FUZZED(-8747), (_GLF_FUZZED(-8747)) | (_GLF_FUZZED(-8747))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))) ? ~ (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(_injected_loop_counter)))))))), _GLF_IDENTITY(4, (4) - 0), 64, 4);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.6)))))), max(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, tan(0.0))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, tan(0.0))), min(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, tan(0.0))), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, tan(0.0)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))))), bool(bvec3(false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (false) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     subgroupAll(true);
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
}
