#version 460
struct _GLF_struct_20 {
 float _f0;
 mat4x3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 uvec2 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 bvec3 _f4;
 uvec4 _f5;
 uint virtual_gid;
} ;

struct _GLF_struct_16 {
 bvec2 _f0;
 uvec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 mat3x4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 ivec3 _f1;
 mat4 _f2;
 bvec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 int _f0;
 bvec4 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_11 {
 uint workgroup_size;
 mat4 _f0;
 ivec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 _GLF_struct_11 _f1;
 mat3x2 _f2;
 _GLF_struct_14 _f3;
 uint _f4;
 mat3 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_8 {
 int _f0;
 vec2 _f1;
 bool _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 _GLF_struct_8 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 bool _f1;
 float _f2;
 ivec4 _f3;
 mat4 _f4;
 mat3x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 vec3 _f1;
 vec2 _f2;
 uvec3 _f3;
 uvec2 _f4;
 uint _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 mat2x4 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat2 _f1;
 vec4 _f2;
 mat3x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 uvec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_10 {
 uint num_workgroup;
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_21(_GLF_struct_20(1.0, mat4x3(1.0), mat3x4(1.0)), bvec4(true)), uvec2(1u), gl_SubgroupInvocationID);
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(gl_NumWorkGroups.x, _GLF_struct_2(mat3x4(1.0), uvec3(1u), _GLF_struct_0(ivec3(1), ivec3(1), mat3x2(1.0), uvec3(1u)), _GLF_struct_1(bvec4(true), mat2(1.0), vec4(1.0), mat3x2(1.0), mat4(1.0)), mat3(1.0)), _GLF_struct_4(mat2x3(1.0), _GLF_struct_3(mat3(1.0), uvec4(1u), ivec4(1))), 1, _GLF_struct_7(_GLF_struct_5(mat4x3(1.0), vec3(1.0), vec2(1.0), uvec3(1u), uvec2(1u), 1u, bvec3(true)), mat2x4(1.0), _GLF_struct_6(true, true, 1.0, ivec4(1), mat4(1.0), mat3x4(1.0), vec3(1.0))), _GLF_struct_9(mat2x3(1.0), _GLF_struct_8(1, vec2(1.0), true, mat4x3(1.0)), vec4(1.0)));
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(mat3x2(1.0), _GLF_struct_11(gl_WorkGroupSize.x, mat4(1.0), ivec3(1), mat3x2(1.0)), mat3x2(1.0), _GLF_struct_14(_GLF_struct_12(1, bvec4(true), mat2x4(1.0), bvec2(true), mat4x3(1.0), vec3(1.0)), _GLF_struct_13(mat3x4(1.0), ivec3(1), mat4(1.0), bvec2(true), mat2(1.0)), mat3x2(1.0)), 1u, mat3(1.0), _GLF_struct_17(ivec3(1), mat3x4(1.0), _GLF_struct_15(ivec2(1), mat2x3(1.0), mat3x4(1.0), ivec4(1)), _GLF_struct_16(bvec2(true), uvec4(1u), mat3x2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_18._f1.workgroup_size * workgroup_id;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat4x3(1.0), bvec4(true), mat3x2(1.0), mat2x4(1.0), bvec3(true), uvec4(1u), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_22.subgroup_local_id);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_22.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_19.virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_19.virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_22.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
