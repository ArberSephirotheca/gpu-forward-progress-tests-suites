#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat4x3 _f1;
 mat4 _f2;
 mat3 _f3;
 uvec3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 uint workgroup_base;
 uvec3 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat2x4 _f1;
 _GLF_struct_9 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 uint _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 vec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 ivec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2x3 _f1;
 float _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 vec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 uint workgroup_id;
 vec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat3x2 _f1;
 mat4 _f2;
 _GLF_struct_4 _f3;
 uvec3 _f4;
 vec4 _f5;
 _GLF_struct_5 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_8_1_1_14read_valworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))) + 0.0), injectionSwitch.x)) < injectionSwitch.y)) && (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_DEAD(false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) && true), false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(58.55, 5.7)) : injectionSwitch)).y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0)) * vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 993.282))), bool(false)))))))))).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9508.8264)), bool(false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), true)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), false, true, true))))) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), false))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(7375.3619)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-412.042), _GLF_FUZZED(-4.4)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, abs(1.0), 0.0, 1.0, 1.0, 0.0))), max(mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, abs(1.0), 0.0, 1.0, 1.0, 0.0))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5731.7655)), _GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0), bool(true)))) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, abs(1.0), 0.0, 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false, false))))) || false), false, false, false))) && true))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), (bool(_GLF_IDENTITY((false), false || ((false))))) || false))) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true))), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), false, true), false))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), false || (! (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-4.5)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && (bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) / vec2(1.0, 1.0)).y)))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) / vec2(1.0, 1.0)).y)))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) || false))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), 0.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(31012u))), bool(false)))))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, mat3x2(1.0), mat4(1.0), _GLF_struct_4(mat2x3(1.0), vec2(1.0), _GLF_struct_0(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), mat2x3(1.0), 1.0), _GLF_struct_1(mat2(1.0), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), min(_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) / uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u)))), (~ (uvec4(1u))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u) + (~ (uvec4(1u))))), (false ? _GLF_FUZZED(uvec4(194361u, 22333u, 157917u, 82407u)) : (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u) + (~ (uvec4(1u))))))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(dot(vec4(-1914.4858, -2.0, -1.1, 94.53), vec4(-1.2, -949.384, -35.00, -641.475)))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))) + (~ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(((uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) + ((_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (_GLF_IDENTITY(~ (uvec4(1u)), min(_GLF_IDENTITY(~ (uvec4(1u)), clamp(~ (uvec4(1u)), ~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | uvec4(0u, 0u, 0u, 0u)), ~ (uvec4(1u)))), ~ (uvec4(1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) | (0u)))), 0u))) + (~ (uvec4(1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u)))))) - uvec4(0u, 0u, 0u, 0u), (((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u)))))) - uvec4(0u, 0u, 0u, 0u)) << uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u))))), _GLF_IDENTITY(min((_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u))))), (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u)))))), (true ? min((_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u)))), (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), _GLF_IDENTITY((uvec4(1u)), min((uvec4(_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) ^ 0u))) : _GLF_FUZZED(packUnorm4x8(mix(vec4(-2.0, -7.8, 9248.8069, 4288.8232), vec4(395.586, 211.121, 3.6, 1.3), vec4(-8.5, 5.2, -5.4, 3.1)))))), 0u))) + (~ (uvec4(1u))))))), (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) + (~ (uvec4(1u)))))) : _GLF_FUZZED(uvec4(subgroup_size, _GLF_IDENTITY(num_workgroup, (num_workgroup) + 0u), 3641u, subgroup_size))))))), (true ? (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))) : _GLF_FUZZED(uvec4(93211u, 141897u, 75032u, 188679u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))) : _GLF_FUZZED(uvec4(136955u, 171804u, 178763u, 142542u))))))))))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), max(~ (uvec4(1u)), ~ (uvec4(1u)))), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) + (~ (uvec4(1u))), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) + (~ (uvec4(1u)))))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) + (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), min(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) + (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) + (uvec4(19537u, 27517u, 136859u, 110446u) & uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), 0u ^ ((0u))), _GLF_IDENTITY((0u), 0u | ((0u)))))))), 0u, 0u, 0u) + (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u), clamp((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u)))))), _GLF_IDENTITY((~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(1u)), uvec4(1u, 1u, 1u, 1u) * ((uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), ((~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(1u)), uvec4(1u, 1u, 1u, 1u) * ((uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))) | ((~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(1u)), uvec4(1u, 1u, 1u, 1u) * ((uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))))))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u), (~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + _GLF_IDENTITY((~ (uvec4(1u))), (_GLF_IDENTITY((~ (uvec4(1u))), max((~ (uvec4(1u))), (~ (uvec4(1u)))))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u), (~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), clamp(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(uvec3(uvec2(0u, 1u), 1u))))), 0u, 0u) + (~ (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u))))))) / uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) - 0u), 0u, 1u, ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY((~ (uvec4(1u))), max((~ (uvec4(1u))), (~ (uvec4(1u))))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))), (max((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) ^ uvec4(0u, 0u, 0u, 0u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))), (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))) << uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(max((_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) ^ uvec4(0u, 0u, 0u, 0u)))))))), ~ (~ (max((_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), (false ? _GLF_FUZZED(max(uvec4(65331u, 189085u, 128394u, 29535u), uvec4(40570u, 36268u, 50294u, 25597u))) : ~ (uvec4(1u)))), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))))))))))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u), ((~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))), (uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) ^ uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))), (((uvec4(1u)))) * uvec4(1u, 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(1u))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) - uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(1u))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(1u))), ((~ (uvec4(1u)))) | uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u))))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(1u))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (uvec4(1u))), clamp(_GLF_IDENTITY((~ (uvec4(1u))), ~ (~ ((~ (uvec4(1u)))))), (~ (uvec4(1u))), (~ (uvec4(1u))))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (uvec4(1u))), clamp(_GLF_IDENTITY((~ (uvec4(1u))), ~ (~ ((~ (uvec4(1u)))))), (~ (uvec4(1u))), (~ (uvec4(1u))))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(1u))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), max((uvec4(1u)), (uvec4(1u)))), (_GLF_IDENTITY((uvec4(1u)), max((uvec4(1u)), (uvec4(1u))))) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(uvec4(1u), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(1u))))) >> uvec4(0u, 0u, 0u, 0u))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (uvec4(1u))), max((~ (uvec4(1u))), (~ (uvec4(1u))))), ((~ (uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))) ^ uvec4(0u, 0u, 0u, 0u)))))))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))), uvec4(1u, 1u, 1u, 1u) * ((~ (_GLF_IDENTITY(~ (uvec4(1u)), (~ (uvec4(1u))) | (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))), _GLF_struct_2(ivec3(1), mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))), gl_WorkGroupID.x, vec4(1.0), _GLF_struct_3(ivec3(1), vec2(1.0), mat3x4(1.0))), uvec3(1u), vec4(1.0), _GLF_struct_5(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(498.820)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, false))) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false, false, true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0))))))) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(log(vec2(1.0, 1.0))) + (injectionSwitch), max(tan(log(vec2(1.0, 1.0))) + (injectionSwitch), _GLF_IDENTITY(tan(log(vec2(1.0, 1.0))) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), max(tan(log(vec2(1.0, 1.0))) + (injectionSwitch), tan(log(vec2(1.0, 1.0))) + (injectionSwitch)))))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0))))) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, tan(log(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) + (injectionSwitch)).x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6893.2675) : injectionSwitch.x)) : _GLF_FUZZED(51.04))) : _GLF_FUZZED(-459.599))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), float(mat2x3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0))), cos(0.0), cos(0.0)))))) - 0.0), cos(0.0), cos(0.0)))), float(_GLF_FUZZED(float(70281))), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true))), 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-51.91), _GLF_IDENTITY(_GLF_FUZZED(-17.40), (false ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(_GLF_FUZZED(-17.40), (_GLF_FUZZED(-17.40)) * 1.0)))), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true)))))), exp(tan(0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true)))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-90.86)), float(0.0), bool(true))))), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(tan(0.0)), 1.0, 0.0, 0.0))))))))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))), (bool(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(uvec2(1u), mat2x4(1.0), _GLF_struct_9(_GLF_struct_7(mat2x3(1.0), mat4x3(1.0), mat4(1.0), mat3(1.0), uvec3(1u), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), workgroup_size * _GLF_struct_replacement_6._f3.workgroup_id, uvec3(1u), _GLF_struct_8(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), _GLF_IDENTITY(clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (1.0), sin(0.0) + (1.0)), _GLF_IDENTITY(float(mat2(clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (1.0), sin(0.0) + (1.0)), 1.0, sin(tan(0.0)), 1.0)), (true ? float(mat2(clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (1.0), sin(0.0) + (1.0)), 1.0, sin(tan(0.0)), 1.0)) : _GLF_FUZZED(73.87)))))), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))), (false ? _GLF_FUZZED((+ mat2(-993.738, -77.82, 1.8, -1682.5592))) : mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8650.9947)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), sin(0.0) + (1.0)))), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), 1.0 * (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0)))), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0))))))) + 0.0), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sin(0.0) + (1.0), clamp(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)) + (1.0), sin(0.0) + (_GLF_IDENTITY(1.0, (1.0) - 0.0)), sin(0.0) + (1.0)))), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)) : _GLF_FUZZED(-7620.6448)))) * 1.0))))))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (1.0) / sqrt(1.0))));
 GLF_merged2_0_1_8_1_1_14read_valworkgroup_base.y = _GLF_IDENTITY(_GLF_struct_replacement_10._f2.workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_struct_replacement_10._f2.workgroup_base), min((_GLF_struct_replacement_10._f2.workgroup_base), (_GLF_struct_replacement_10._f2.workgroup_base)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))), true, false))) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)))))))))), true, false))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_8_1_1_14read_valworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_local_id))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size) * 1u) + subgroup_local_id, uint(uint(GLF_merged2_0_1_8_1_1_14read_valworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) * 1u) + subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, (true) || false) && (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))) || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)) && (bool(bool(false)))))))) || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))) && (bool(bool(false))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, true, false))) || false) && (bool(bool(false)))))))))))))) || (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))) && (bool(bool(false))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, true, false))) || false) && (bool(bool(false)))))))))))))) || (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))) && (bool(bool(false))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, true, false))) || false) && (bool(bool(false)))))))))))))) || (false))))), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))) && (bool(bool(false))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, true, false))) || false) && (bool(bool(false)))))))))))))) || (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))) && (bool(bool(false))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, true, false))) || false) && (bool(bool(false)))))))))))))) || (false))))), true, true), false)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(sin(vec2(0.0, 0.0)))).y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true && (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((false), ((false)) || false), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5571.4895))) : _GLF_FUZZED(-18.81))) < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(bool((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bvec2(bool(bool((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) ^ 0))), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (4) ^ 0)))) - 0)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((vec4(-7.1, -67.09, 62.23, -879.323) / vec4(-3476.5788, -309.928, -4301.8219, -4193.8160)).w) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((vec4(-7.1, -67.09, _GLF_IDENTITY(62.23, (62.23) / 1.0), -879.323) / vec4(-3476.5788, -309.928, -4301.8219, -4193.8160)).w) : injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.1)), bool(false))), length(vec2(0.0, 0.0)), determinant(mat3(1.0, 1.0, abs(0.0), sqrt(0.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(42.69) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 0.0)), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-6.1)), abs(1.0) * (float(_GLF_FUZZED(-6.1)))), bool(false))), length(vec2(0.0, 0.0)), determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(1.0), bool(true))), 1.0, abs(0.0), sqrt(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(float(false))), bool(false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_8_1_1_14read_valworkgroup_base.x = read_val;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged2_0_1_8_1_1_14read_valworkgroup_base, uvec2(uvec4(GLF_merged2_0_1_8_1_1_14read_valworkgroup_base, 0u, 0u))).x));
}
