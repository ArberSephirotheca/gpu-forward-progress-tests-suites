#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), false), bvec2(bvec3(bvec2(true && (false), false), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), true, false, false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), true)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))), false))), false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))), false))), false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-809.201) : injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, true && (true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(6.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x), float(_GLF_FUZZED(9.0)), bool(false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(4.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(4.4), (_GLF_FUZZED(4.4)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(4.4), min(_GLF_FUZZED(4.4), _GLF_FUZZED(4.4))), _GLF_FUZZED(4.4))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(atanh(exp(-7585.4724))), determinant(mat3(abs(1.0), 0.0, 0.0, length(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_FUZZED(atanh(exp(-7585.4724))), min(_GLF_FUZZED(atanh(exp(-7585.4724))), _GLF_FUZZED(atanh(exp(-7585.4724))))))) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(9.8))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) / sqrt(1.0))) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y)))))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sqrt(0.0), 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), false)))))), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sqrt(0.0), 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (true))), false)))))), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))), true, true), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.9)), bool(false))))))) < injectionSwitch.y)))))), true, true), true))), true))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(63.97), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-0.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(6.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))) : _GLF_FUZZED(vec2(71.65, -58.61)))), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))))), bvec2(true, false))).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x), float(_GLF_FUZZED(9.0)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x), float(_GLF_FUZZED(9.0)), bool(false))) - sqrt(0.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(4.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(4.4), (_GLF_FUZZED(4.4)) - 0.0), _GLF_FUZZED(4.4), _GLF_FUZZED(4.4))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-34.83))), bvec2(true, false))).x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(atanh(exp(-7585.4724))), determinant(mat3(abs(1.0), 0.0, 0.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_FUZZED(atanh(exp(-7585.4724))), min(_GLF_FUZZED(atanh(exp(-7585.4724))), _GLF_FUZZED(atanh(exp(-7585.4724))))))) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.2), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))).x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3x4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(log(1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(mat3x4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(log(1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))), mat3(1.0) * (transpose(mat3x4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(log(1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))))))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y)))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(92.31)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-88.66, -6.9, -82.90, 490.504, 4.5, -3.3, 68.61, 5.2, 1.6))))))))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(vec2(0.0, 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(421.368, -234.998).s)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (injectionSwitch.x) / round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), mix(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-227.650)), bool(false))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec4(vec4(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), exp(0.0)))) < injectionSwitch.y)))))), true, true), true))), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9135.1219, -89.73)) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(0u, (0u) >> 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), uint(6u))), uint(6u)))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))))) / 1u) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))))), (true ? (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))))) : _GLF_FUZZED(workgroup_base)))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED((subgroup_size)))) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) / 1u) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) << 0u)) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), false, false), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), false, false)))))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-54.12)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true)))), false || (bool(bool(_GLF_IDENTITY(true, false || (true))))))), (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(write_val, 0u | (write_val)), write_val, write_val)), 1u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 1u, 1u)), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 1u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), 4))) / 1, ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), 4))) / 1) ^ 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))) >> 0), ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))) ^ 0)), min(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-39462, min(-39462, -39462))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) / 1), (true ? 4 : _GLF_FUZZED(-39462)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) / 1), (true ? 4 : _GLF_FUZZED(-39462))))))) ^ 0)))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(-39462))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(-39462))), 0 ^ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))), int(ivec3(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(-39462))), 0 ^ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))), 1, 1))))))))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)), (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) >> 0), _GLF_IDENTITY(4, (4) + 0)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)), 4)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), 0 ^ ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(ivec2(4, 0))), _GLF_IDENTITY(4, (4) / 1)))) | (4)), 1))), 4))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), ~ (_GLF_IDENTITY(~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)), clamp(~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)), ~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)), ~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1))))))), (true ? (true ? 4 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1), (_GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) * 1)) * 1)))))) : _GLF_FUZZED(_GLF_IDENTITY(-12882, (-12882) | (-12882)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), int(int(_GLF_FUZZED(-39462)))))))), (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), int(int(_GLF_FUZZED(-39462))))), ((true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), int(int(_GLF_FUZZED(-39462)))))) / 1))))) | (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), int(int(_GLF_FUZZED(-39462))))))))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) >> 0), _GLF_IDENTITY(4, (4) + 0)), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (~ ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-39462)), ~ (_GLF_IDENTITY(~ ((true ? 4 : _GLF_FUZZED(-39462))), (~ ((true ? 4 : _GLF_FUZZED(-39462)))) | 0)))))) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + 0) << 0))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? 4 : _GLF_FUZZED(-39462))))), clamp((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? 4 : _GLF_FUZZED(-39462))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? 4 : _GLF_FUZZED(-39462))))), ((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? 4 : _GLF_FUZZED(-39462)))))) - 0), (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? 4 : _GLF_FUZZED(-39462))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, int(ivec4(4, ((11738 & 0) ^ 0), 0, 0))) : _GLF_FUZZED(-39462)))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) >> 0), _GLF_IDENTITY(4, (4) + 0))), int(int(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))) << 0)) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), (_GLF_FUZZED(-39462)) | (_GLF_FUZZED(-39462)))))))) ^ 0))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), (true ? 4 : _GLF_FUZZED(-39462)) + 0), 1)), int(ivec2(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), (true ? 4 : _GLF_FUZZED(-39462)) + 0), 1)), (int(ivec2(_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), (true ? 4 : _GLF_FUZZED(-39462)) + 0), 1))) - 0), 1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))), 0 + (min(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))))), 0 | (min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, true && (true)) ? 4 : _GLF_FUZZED(-39462))), min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? 4 : _GLF_FUZZED(-39462))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-39462), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(-39462), 0)), clamp(int(ivec2(_GLF_FUZZED(-39462), 0)), int(ivec2(_GLF_FUZZED(-39462), 0)), int(ivec2(_GLF_FUZZED(-39462), 0))))))))), _GLF_IDENTITY(clamp(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))) | (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))))), (clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), ((~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))) << 0), (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))))) - 0)))))) : _GLF_FUZZED(-26370)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0))) >> 0), _GLF_IDENTITY(4, (4) + 0)), (clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (0 >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (ivec3(4, (0 >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (true ? _GLF_IDENTITY(int(6), int(6)) : _GLF_FUZZED(abs(-14488))))))) << ivec3(0, 0, 0)))) : _GLF_FUZZED(-39462)), ~ (~ ((true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, min(4, 4)))) : _GLF_FUZZED(-39462)))))))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), (true ? 4 : _GLF_FUZZED(-39462)) / 1)))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-39462), (true ? 4 : _GLF_FUZZED(-39462)) / 1))))) - 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), min(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), clamp(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), max(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))))) / 1), min(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))))) * 1)) << 0)))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))) >> 0)), min(~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39462)))), ~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-39462))))))) << 0))))))), ~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), ~ (~ (_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-39462)))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) >> 0), _GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0))))) ^ (0 ^ 0))))))))) ^ 0)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u + (buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
