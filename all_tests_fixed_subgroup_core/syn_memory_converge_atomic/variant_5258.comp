#version 460
struct _GLF_struct_0 {
 bvec4 _f0;
 float _f1;
 mat3 _f2;
 mat3 _f3;
 uint _f4;
 bvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 _GLF_struct_0 _f1;
 ivec2 _f2;
 uvec2 _f3;
 bvec4 _f4;
 uvec3 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 mat4x2 _f1;
 _GLF_struct_1 _f2;
 uvec3 _f3;
 uint subgroup_local_id;
 mat4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4(1.0), mat4x2(1.0), _GLF_struct_1(bvec2(true), _GLF_struct_0(bvec4(true), 1.0, mat3(1.0), mat3(1.0), 1u, bvec3(true), ivec2(1)), ivec2(1), uvec2(1u), bvec4(true), uvec3(1u), 1.0), uvec3(1u), gl_SubgroupInvocationID, mat4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_2.subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
