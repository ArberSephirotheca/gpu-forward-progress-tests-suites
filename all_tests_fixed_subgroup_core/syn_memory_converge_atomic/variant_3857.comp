#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) - tan(0.0)))).y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(3386u, 47959u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(3386u, 47959u)), ~ (~ ((uvec2(3386u, 47959u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(3386u, 47959u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(3386u, uint(uvec3(3386u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), 1u))), 47959u), _GLF_IDENTITY((uvec2(3386u, 47959u)), (false ? _GLF_FUZZED(uvec2(8960u, _GLF_IDENTITY(92294u, (1u ^ 1u) ^ (92294u)))) : (uvec2(3386u, 47959u)))) | (uvec2(3386u, _GLF_IDENTITY(47959u, (47959u) | (47959u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uint(_GLF_IDENTITY((1u), max((1u), (1u)))))) + 0u, ~ (_GLF_IDENTITY(~ ((1u) + 0u), (~ (_GLF_IDENTITY((1u), ((1u)) | (0u & 89758u)) + 0u)) | (~ ((1u) + 0u))))))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(3386u, 47959u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(3386u, 47959u)), ~ (~ ((uvec2(3386u, 47959u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(3386u, 47959u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(3386u, uint(uvec3(3386u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), 1u))), 47959u), _GLF_IDENTITY((uvec2(3386u, 47959u)), (false ? _GLF_FUZZED(uvec2(8960u, _GLF_IDENTITY(92294u, (1u ^ 1u) ^ (92294u)))) : (uvec2(3386u, 47959u)))) | (uvec2(3386u, _GLF_IDENTITY(47959u, (47959u) | (47959u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uint(_GLF_IDENTITY((1u), max((1u), (1u)))))) + 0u, ~ (_GLF_IDENTITY(~ ((1u) + 0u), (~ (_GLF_IDENTITY((1u), ((1u)) | (0u & 89758u)) + 0u)) | (~ ((1u) + 0u))))))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).y), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec4(max(gl_WorkGroupSize, gl_WorkGroupSize), 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(degrees(injectionSwitch)))).x > injectionSwitch.y))), true, false, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec2((workgroup_id), 1u)), uint(uvec3(uint(uvec2((workgroup_id), 1u)), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(1u)))) - 0u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(subgroup_local_id)))) | 0u)))))) + 0u), (workgroup_id) * 1u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), uint(uvec4(0u, 1u, 0u, 1u)))) >> 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ 0u))), uint(uvec4(0u, 1u, 0u, 1u)))) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), uint(uvec4(0u, 1u, 0u, 1u)))) >> 0u)) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-467.821) : injectionSwitch[1])))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), true, true, true))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), true, true, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)))), transpose(transpose(mat2(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))))))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) * mat2(1.0)), 1.0, abs(0.0))))).x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) * mat2(1.0)), 1.0, abs(0.0))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) * mat2(1.0)), 1.0, abs(0.0))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) * mat2(1.0)), 1.0, abs(0.0))))))[0]) - 0.0), _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-8740.7538), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) * mat2(1.0)), 1.0, abs(0.0))))))[1]), bvec2(false, true))).x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)))), false))))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))))))), true))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))))
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))) || false))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))))))), bool(bool(! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), bool(bool((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))), true, true, false)))) && true))))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bool(! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((false)))) && true), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), bool(bvec2(_GLF_IDENTITY(! (bool(! (false))), false || (! (bool(! (false))))), false))))), true)))))))))))))), false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bool(! (false)))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), ! (! (bool(! (false))))), true))))), ! (! ((! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), ! (! (bool(! (false))))), true)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))), false, false)))))), true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), ! (! (! ((false)))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), bool(bool(! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))))), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))))), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))) || false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), true && (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bool(! (false))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false)), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false)))))))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true)))), bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true)))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true)))), bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true)))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))) || false))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))), true)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true))))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true)))))) && true))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true))))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true)))))) && true))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true))))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true)))))) && true))))))))), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true))))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))), false), false)), true)))))) && true))))))))))))) || false)))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))), true), false)))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((false)) || false, bool(_GLF_IDENTITY(bool(((false)) || false), bool(bvec3(bool(((false)) || false), false, true)))))) || false))), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))))))))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), false, _GLF_IDENTITY(true, false || (true)), true)))))))))))))), bool(bool(! (false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), bool(bvec3((_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)))), true, true)))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), ! (! (bool(! (false)))))) || false))), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), ! (! (bool(! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), ! (! (bool(! (false))))), true))) || false)))))))))), (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(! (false))))), true))))))))))), bool(bool(bool(bool((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)), ! (! (bool(! (false))))), true)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))))))))), false))))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))), ! (! (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false || (bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false, true)))))
    continue;
   atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))) | (uint(0u)))), (false ? _GLF_FUZZED((virtual_gid >> workgroup_base)) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))) | (uint(0u)))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ ((0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + 0u))), (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))) | (uint(0u))))) + 0u))))) * 1u) | _GLF_IDENTITY((virtual_gid), uint(uvec2(_GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? (virtual_gid) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup))))) | 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(28068) : 64)), 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, ~ (~ (write_val))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), (int(ivec4(64, 1, 1, 1))) ^ 0)), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (false), true && (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true))))), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  return;
}
