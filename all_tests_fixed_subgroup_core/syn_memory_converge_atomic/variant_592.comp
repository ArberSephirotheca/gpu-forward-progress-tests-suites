#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-4.3)), ((true ? injectionSwitch.x : _GLF_FUZZED(-4.3))) / 1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, sqrt(1.0), log(1.0), 1.0, log(1.0)))))[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6736.4402), _GLF_FUZZED(4002.6286)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(-6736.4402), _GLF_FUZZED(4002.6286)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-9.4 + -84.31))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(787.732) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sin(0.0), 1.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sin(0.0), 1.0)))))))))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), _GLF_IDENTITY(false, true && (false)), true)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 1u))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 1u)))) * 1u)) | (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 1u))))) * _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))) ? _GLF_FUZZED(subgroup_id) : (1u)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 1u), max(uvec4(workgroup_id, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) << 0u), (false ? _GLF_FUZZED(subgroup_id) : (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) | (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) | (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) | (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))), 1u), uvec4(workgroup_id, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_id) : (1u)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 1u))), (uvec4(workgroup_id, _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1364.6083)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1364.6083)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))) | (uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-1364.6083)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u))) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) + 0u))) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) + 0u))) * 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) + 0u))) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) + 0u))) * 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) + 0u))) * 1u))))), 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 ^ (4)), 4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((min(injectionSwitch.x, injectionSwitch.x)) * 1.0, mix(float((min(injectionSwitch.x, injectionSwitch.x)) * 1.0), float(_GLF_FUZZED(-223.495)), bool(false))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false))))) || false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(9816.5295), (injectionSwitch)[1]), bvec2(false, true))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) | (_GLF_IDENTITY(max(0, 0), ~ (~ (max(0, 0))))))), (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), _GLF_IDENTITY(max(0, 0), 0 | (max(0, 0))), max(0, 0)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, abs(1.0)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(313.022, (_GLF_IDENTITY(313.022, min(313.022, 313.022))) * 1.0))), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(1, max(1, 1))], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(abs(1.0)))), 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, 1.0, 0.0))))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], max((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(sin(vec2(-188.805, 668.164)), (sin(vec2(-188.805, 668.164))) + vec2(0.0, 0.0))))))[1])), (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))]))), bvec2(false, true))))).y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(exp(vec2(0.0, 0.0))) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.6)))))), 0.0, 0.0, 0.0, 1.0)), (vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)))[1], max(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])), (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED(-6.1), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(8.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-657.653)), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bvec2(true, true))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED(-6.1), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(8.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-657.653)), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bvec2(true, true))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED(-6.1), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(8.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-657.653)), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bvec2(true, true))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED(-6.1), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(8.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-657.653)), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bvec2(true, true))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED(-6.1), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(313.022)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(8.8)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-657.653)), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bvec2(true, true))))[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, cos(0.0), 0.0, 1.0)))))))), true))), false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.0, -1056.3020)) : injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true, true, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true, true, true)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true, true, true))) || false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(4.0, -1056.3020)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(4.0, -1056.3020)) : injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.0, -1056.3020)) : injectionSwitch)).x > injectionSwitch.y)))))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) / 1.0)), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, float(vec3(4.0, 1.0, 1.0))), 4.0)), 4.0)), -1056.3020)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-6522.6262), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) * mat2(1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, float(vec3(4.0, 1.0, 1.0))), 4.0)), 4.0)), -1056.3020)), max(_GLF_FUZZED(vec2(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, float(vec3(4.0, 1.0, 1.0))), 4.0)), 4.0)), -1056.3020)), _GLF_FUZZED(vec2(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, float(vec3(4.0, 1.0, 1.0))), 4.0)), 4.0)), -1056.3020)))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, min(_GLF_IDENTITY(4.0, float(vec3(4.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 4.0)), 4.0)), -1056.3020)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1]))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))))))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_FUZZED(vec2(4.0, -1056.3020)))), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)))) : injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)))) : injectionSwitch)).x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)))) : injectionSwitch), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)))) : injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), max(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(4.0, -1056.3020)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), mat2(1.0) * (_GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(-1056.3020, clamp(-1056.3020, -1056.3020, -1056.3020)))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(4.0, -1056.3020), (vec2(4.0, -1056.3020)) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) - vec2(0.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))) / 1.0))))) : injectionSwitch)).x > injectionSwitch.y)))))) && true, bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), max(_GLF_FUZZED(vec2(4.0, -1056.3020)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(4.0, -1056.3020)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), mat2(1.0) * (_GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(-1056.3020, clamp(-1056.3020, -1056.3020, -1056.3020)))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(4.0, -1056.3020), (vec2(4.0, -1056.3020)) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) * mat2(1.0)), _GLF_IDENTITY(_GLF_FUZZED(vec2(4.0, -1056.3020)), (_GLF_FUZZED(vec2(4.0, -1056.3020))) - vec2(0.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))) / 1.0))))) : injectionSwitch)).x > injectionSwitch.y)))))) && true, true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.3) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) / 1u)) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
}
