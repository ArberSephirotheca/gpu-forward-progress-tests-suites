#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - log(abs(1.0)), (false ? _GLF_FUZZED(vec3(312.967, 1802.5248, -4233.2947).s) : (1.0) - log(abs(1.0))))), ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0, (_GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(((injectionSwitch.x) / 1.0) * 1.0, exp(0.0) * (_GLF_IDENTITY(((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(-48.33))))), 0.0 + (_GLF_IDENTITY(((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(-48.33))))), (((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(-48.33)))))) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) / 1.0)))) * 1.0))), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) * 1.0), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0, ((injectionSwitch.x) / 1.0) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-84.78)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (mat2x3(1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)) * mat2(1.0))))))), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 1.0))) < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5820.1732))), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, sqrt(1.0)), vec3(1.0, 0.0, sin(0.0))), dot(vec3(0.0, 1.0, sqrt(1.0)), vec3(1.0, 0.0, sin(0.0)))))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0)), clamp(float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0)), float(mat3x4(0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 1.0, 1.0)))), float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0)), float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.0) : 0.0))))), 1.0, 1.0))))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(91.18)), float((injectionSwitch.x)), bool(true))))), max(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-3.4))), (injectionSwitch.x))) / 1.0, _GLF_IDENTITY(((injectionSwitch.x) / 1.0) * 1.0, float(mat2(((injectionSwitch.x) / 1.0) * 1.0, 0.0, 0.0, sqrt(0.0))))), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3x2(mat3x4(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3x2(mat3x4(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3x2(mat3x4(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), 1.0)), 0.0, 1.0, 1.0))))), 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((17.84 - -40.55))), float(1.0), bool(true)))) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false)), float(mat2x4(mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false)), _GLF_IDENTITY(mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false)), 1.0 * (mix(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(255.249, mix(float(_GLF_IDENTITY(255.249, min(255.249, 255.249))), float(_GLF_FUZZED(-71.67)), bool(false))))), bool(false))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7515.8501)), float(float(injectionSwitch.x)), bool(true))), float(_GLF_FUZZED(-619.842)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2220.9614))), 0.0)))), 0.0)), clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-30.95)), bool(false))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), true))) || false))))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), true))) || false))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-97.26) : 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (0u)), 0u))) * uvec3(1u, 1u, 1u)).x, (gl_WorkGroupID.x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (gl_WorkGroupID.x))))) | (gl_WorkGroupID.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), gl_WorkGroupID.x)), (0u & 175572u) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), gl_WorkGroupID.x)))), gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) << uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(subgroup_local_id, clamp(31686u, 164343u, write_val), (mat4x3(-8172.1444, 351.046, 9.0, 6.4, -2.6, 3.6, 9639.4110, 5642.9474, 154.260, -6.3, 3.3, 9779.1271) != mat4x3(1.9, 2988.2220, -46.77, 210.170, 8.8, -3207.6640, 500.951, -4760.5400, -5.0, 211.278, -6480.3895, -59.28)))) : _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))), ~ (1u), ~ (1u))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))))), 0u, _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u))))), _GLF_IDENTITY(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), clamp(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), _GLF_IDENTITY(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), max(_GLF_IDENTITY(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), min(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, max(8u, 8u))), max(uint(8u), uint(8u))))), _GLF_IDENTITY(0u, min(0u, 0u)), (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), (uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))) | uvec4(0u, 0u, 0u, 0u))))))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, ~ (~ (8u)))), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), uint(uvec3(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), 0u, 1u))))))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ ((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)))), (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u, 1u, (1u & 1u))))) * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (_GLF_IDENTITY(0u, (0u) ^ 0u) | 0u)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), false, false)))) ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))))), min(uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), (uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))) | uvec4(0u, 0u, 0u, 0u))))))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, ~ (~ (8u)))), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), uint(uvec3(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), 0u, 1u))))))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ ((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)))), (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u, 1u, (1u & 1u))))) * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (_GLF_IDENTITY(0u, (0u) ^ 0u) | 0u)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), false, false)))) ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)), (uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))) | uvec4(0u, 0u, 0u, 0u))))))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, ~ (~ (8u)))), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), uint(uvec3(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_size) : uint(8u))))), 0u, 1u))))))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ ((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)))), (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(126226u)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u, 1u, (1u & 1u))))) * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (_GLF_IDENTITY(0u, (0u) ^ 0u) | 0u)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), false, false)))) ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))))))))), ~ (~ (uint(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(max(uint(8u), uint(8u)), (_GLF_IDENTITY(max(uint(8u), uint(8u)), (max(uint(8u), uint(8u))) + 0u)) | (_GLF_IDENTITY(max(uint(8u), uint(8u)), (max(uint(8u), uint(8u))) - 0u)))))), 0u, (0u | 0u))), max(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))) - 0u), 0u, (0u | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), _GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), _GLF_IDENTITY(0u, (0u) >> ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u)))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), _GLF_IDENTITY(0u, (0u) >> ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), _GLF_IDENTITY(0u, (0u) >> ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u))))) - 0u), 1u))))), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), max(_GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u)))))), max(_GLF_IDENTITY(uint(8u), clamp(uint(8u), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))) | (uint(8u))), uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | (8u))))))), 0u, (0u | 0u))), (true ? uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u)))))), max(uint(8u), uint(8u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u)))))), max(uint(8u), uint(8u))))))), 0u, (0u | 0u))) : _GLF_FUZZED(subgroup_local_id))), uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u))))), (_GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u)))))) | (_GLF_IDENTITY(uint(uvec3(uint(8u), 0u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(uint(8u), 0u, 0u)), 0u, 1u)))))))))))), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))), 0u ^ (uint(uvec4(1u, (_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u))), uint(8u))), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))))))))))))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), _GLF_IDENTITY(0u ^ (uint(uvec4(1u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), (_GLF_IDENTITY(0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), (0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) - 0u)), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))) | (_GLF_IDENTITY(0u ^ (uint(uvec4(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), (0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))) | 0u)))) + 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) >> 0u)) | (_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec4(8u, 1u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(8u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(8u, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec4(8u, 1u, 1u, 0u)), 1u)), (uint(uvec2(uint(uvec4(8u, 1u, 1u, 0u)), 1u))) >> 0u))) / 1u), uint(uvec4(8u, 1u, 1u, 0u)))))))))))), 0u, (0u | 0u)))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), uint(8u))), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u)))) / 1u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))) : uint(uvec4(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)), 1u)), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))))))), ~ (~ (uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), 0u | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, 0u + (_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, 0u + (8u)), 8u))))))))), 0u, (0u | 0u)))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ _GLF_IDENTITY((uint(uvec4(1u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) >> 0u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : (uint(uvec4(1u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) >> 0u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))))), uint(uvec4(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(max(uint(8u), uint(8u)), (_GLF_IDENTITY(max(uint(8u), uint(8u)), (true ? max(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(max(uint(8u), uint(8u)), _GLF_IDENTITY(max(max(uint(8u), uint(8u)), max(uint(8u), uint(8u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(max(max(uint(8u), uint(8u)), max(uint(8u), uint(8u))), uint(uvec2(max(max(uint(8u), uint(8u)), max(uint(8u), uint(8u))), 0u))))))))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))))))))))))))))))))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), max(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))) : _GLF_FUZZED(188927u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, max(1u, 1u)), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) - 0u))), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) << 0u))))), ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) << 0u)))))) | 0u), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))))))) - 0u))), clamp(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(8u, (8u) * 1u)), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, (0u | 0u)))))))), (uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, (8u) * 1u)))), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, (8u) * 1u))))) - 0u))), 0u, (0u | 0u))))))))) >> 0u), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))) - 0u)), 0u, (0u | 0u))), (uint(uvec4(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))) - 0u)), 0u, (0u | 0u)))) >> (1u ^ 1u)), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))) ^ 0u)), 0u, (0u | 0u)))))))))))))), ~ (~ (uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), clamp(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))) >> 0u), 0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))))), 0u, (0u | 0u)))))))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (~ (uvec3(0u, 1u, 0u)))))) | 0u)))))))), clamp(false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), (true ? uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))) : _GLF_FUZZED(workgroup_size)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u)))))))), false ? _GLF_FUZZED(subgroup_id) : uint(uvec4(workgroup_size * workgroup_id, 1u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(_GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, (0u | 0u))), 0u ^ (uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, 0u | (8u))))))), 0u, (0u | 0u))))))))))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.6))), injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u + (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, true)))), ! (! (bool(bool(bool(bvec2(false, true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(-4819.0875)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-3.6, max(_GLF_IDENTITY(-3.6, min(-3.6, -3.6)), -3.6))), (_GLF_IDENTITY(_GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(-3.6)), float(_GLF_FUZZED(5.8)), bool(false)))) / 1.0)), bool(true))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
}
