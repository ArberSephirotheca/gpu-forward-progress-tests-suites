#version 460
struct _GLF_struct_37 {
 vec3 _f0;
} ;

struct _GLF_struct_38 {
 _GLF_struct_37 _f0;
} ;

struct _GLF_struct_35 {
 mat4 _f0;
 mat3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 mat4x2 _f1;
 vec4 _f2;
 bvec2 _f3;
 ivec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_36 {
 _GLF_struct_34 _f0;
 float _f1;
 bvec4 _f2;
 _GLF_struct_35 _f3;
 mat2x4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_32 {
 bvec3 _f0;
 mat3 _f1;
 mat4x2 _f2;
 mat4 _f3;
 bvec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_33 {
 vec4 _f0;
 uint _f1;
 _GLF_struct_32 _f2;
} ;

struct _GLF_struct_31 {
 uvec2 _f0;
 uint workgroup_base;
 vec3 _f1;
} ;

struct _GLF_struct_39 {
 _GLF_struct_31 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_36 _f2;
 mat3x4 _f3;
 _GLF_struct_38 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_28 {
 uvec4 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
} ;

struct _GLF_struct_24 {
 int _f0;
 mat3x4 _f1;
 vec4 _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_22 {
 bvec4 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 uvec3 _f1;
 _GLF_struct_23 _f2;
 mat4x2 _f3;
 _GLF_struct_24 _f4;
 bvec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_21 {
 mat2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_30 {
 _GLF_struct_21 _f0;
 vec3 _f1;
 _GLF_struct_25 _f2;
 uint workgroup_size;
 _GLF_struct_27 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 uvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_17 {
 int _f0;
 mat2 _f1;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat3 _f1;
 mat3 _f2;
 bvec2 _f3;
 vec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 int _f1;
 _GLF_struct_16 _f2;
 vec3 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 mat4x2 _f1;
 ivec4 _f2;
 mat2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_20 {
 bool _f0;
 mat3 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 float _f4;
 _GLF_struct_19 _f5;
 uint num_workgroup;
 mat4 _f6;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 uvec4 _f1;
 vec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uvec4 _f1;
 ivec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 vec2 _f1;
 mat2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3 _f1;
 uvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 vec4 _f1;
 bool _f2;
 uint _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat2x4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat2x4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_11 _f5;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2(1.0), _GLF_struct_1(_GLF_struct_0(bvec3(true), mat4x3(1.0), mat2x3(1.0)), mat4(1.0)), bvec4(true), _GLF_struct_2(mat4x3(1.0)), _GLF_struct_7(vec4(1.0), mat2x4(1.0), _GLF_struct_3(mat4(1.0), vec4(1.0), true, 1u, ivec2(1)), _GLF_struct_4(mat3x2(1.0), mat3(1.0), uvec2(1u), ivec3(1)), _GLF_struct_5(vec2(1.0), vec3(1.0), ivec2(1)), mat2x4(1.0), _GLF_struct_6(vec4(1.0), ivec3(1), uvec3(1u))), _GLF_struct_11(_GLF_struct_8(uvec4(1u), vec2(1.0), mat2(1.0), bvec3(true)), _GLF_struct_9(mat3x2(1.0), uvec4(1u), ivec3(1), mat2x3(1.0)), _GLF_struct_10(mat3x4(1.0), uvec4(1u), vec4(1.0), mat4(1.0))), gl_SubgroupID);
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(true, mat3(1.0), _GLF_struct_14(_GLF_struct_13(ivec2(1), mat4x2(1.0), ivec4(1), mat2(1.0), vec4(1.0))), _GLF_struct_15(bvec3(true), uvec3(1u), ivec4(1)), 1.0, _GLF_struct_19(ivec4(1), 1, _GLF_struct_16(mat4(1.0), mat3(1.0), mat3(1.0), bvec2(true), vec3(1.0), vec2(1.0)), vec3(1.0), _GLF_struct_17(1, mat2(1.0)), _GLF_struct_18(bvec3(true), uvec4(1u), uvec2(1u))), gl_NumWorkGroups.x, mat4(1.0));
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_21(mat2(1.0), mat3x2(1.0)), vec3(1.0), _GLF_struct_25(_GLF_struct_22(bvec4(true)), uvec3(1u), _GLF_struct_23(1u, mat2(1.0)), mat4x2(1.0), _GLF_struct_24(1, mat3x4(1.0), vec4(1.0), 1.0), bvec2(true), uvec2(1u)), gl_WorkGroupSize.x, _GLF_struct_27(_GLF_struct_26(mat3x2(1.0))), _GLF_struct_29(_GLF_struct_28(uvec4(1u), bvec2(true), mat4x2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_31(uvec2(1u), _GLF_struct_replacement_30.workgroup_size * workgroup_id, vec3(1.0)), _GLF_struct_33(vec4(1.0), 1u, _GLF_struct_32(bvec3(true), mat3(1.0), mat4x2(1.0), mat4(1.0), bvec3(true), bvec3(true))), _GLF_struct_36(_GLF_struct_34(mat3x2(1.0), mat4x2(1.0), vec4(1.0), bvec2(true), ivec3(1), mat4x2(1.0)), 1.0, bvec4(true), _GLF_struct_35(mat4(1.0), mat3(1.0), uvec4(1u)), mat2x4(1.0), mat3x2(1.0)), mat3x4(1.0), _GLF_struct_38(_GLF_struct_37(vec3(1.0))), uvec2(1u));
 uint virtual_gid = _GLF_struct_replacement_39._f0.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
