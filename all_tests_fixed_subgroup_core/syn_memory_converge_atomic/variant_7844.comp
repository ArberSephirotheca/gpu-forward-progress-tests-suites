#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) || false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))) && true))) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), (injectionSwitch.x > injectionSwitch.y)))))))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - length(tan(vec3(0.0, 0.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(366.936)), float(1.0), bool(true))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)), vec2(0.0, 0.0) + (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-784.450), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, false || (true)))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), true), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, true, true)))), true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, true, true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, true, true)))), true), true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), (_GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((! ((_GLF_DEAD(false)))), false || ((! ((_GLF_DEAD(false)))))))))) && true))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))) || false)), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((! ((_GLF_DEAD(false))))), ! (! (! ((! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))))))), bool(bvec4((! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! ((! ((_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! ((! ((_GLF_DEAD(false)))))))), false || ((! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! ((! ((_GLF_DEAD(false)))))))))), true && (! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false)))), ! (_GLF_IDENTITY(! ((! ((_GLF_DEAD(false))))), _GLF_IDENTITY((! ((! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), ((! ((! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true) || _GLF_IDENTITY(false, false || (false)))))))))))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), true && ((! (injectionSwitch.x < injectionSwitch.y)))))))))))) && true), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(((_GLF_DEAD(false))), true, true), true))))), bool(bool(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(((_GLF_DEAD(false))), true, true), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(((_GLF_DEAD(false))), true, true), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(((_GLF_DEAD(false))), true, true), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec2(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(((_GLF_DEAD(false))), true, true), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(false, (false) && true))))))), false, true))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)) && true))))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-251.903)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), (true && (! (true))) && true))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))) && true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false || _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), _GLF_IDENTITY(bool(bvec2(! ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(114366u, 177768u, 194588u)) : gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))), (gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))), max(0u, 0u)), 0u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((uvec3(_GLF_IDENTITY(56742u, _GLF_IDENTITY((56742u) >> 0u, max((56742u) >> 0u, (56742u) >> 0u))), 76198u, 44198u) / uvec3(_GLF_IDENTITY(144784u, (144784u) - 0u), 99795u, 30340u))) : uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED((uvec3(56742u, 76198u, 44198u) / _GLF_IDENTITY(uvec3(144784u, 99795u, 30340u), (_GLF_IDENTITY(uvec3(144784u, 99795u, 30340u), (uvec3(144784u, 99795u, 30340u)) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)))) : uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY((uvec3(56742u, 76198u, _GLF_IDENTITY(_GLF_IDENTITY(44198u, min(44198u, _GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(44198u, min(44198u, _GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size)))))) ^ 0u)) / uvec3(144784u, 99795u, 30340u)), uvec3(0u, 0u, 0u) + ((uvec3(56742u, 76198u, _GLF_IDENTITY(_GLF_IDENTITY(44198u, min(44198u, _GLF_IDENTITY(_GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(44198u, (_GLF_IDENTITY(44198u, max(44198u, _GLF_IDENTITY(44198u, clamp(44198u, 44198u, 44198u))))) | 0u), min(44198u, _GLF_IDENTITY(44198u, (true ? 44198u : _GLF_FUZZED(workgroup_size)))))) ^ 0u)) / uvec3(144784u, 99795u, 30340u))))) : uvec3(0u, 0u, 0u)))))))))))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))))) | (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), (false ? _GLF_FUZZED(num_workgroup) : max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), clamp(~ ((workgroup_id)), ~ ((workgroup_id)), ~ ((workgroup_id)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))))))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(uint(uint(workgroup_id)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (uint(workgroup_id)) | (uint(workgroup_id)))), ~ (~ (_GLF_IDENTITY(uint(uint(workgroup_id)), min(uint(uint(workgroup_id)), uint(uint(workgroup_id)))))))))), (workgroup_id) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), workgroup_id)), workgroup_id))))), (workgroup_id) + 0u))) | 0u) | 0u), 1u, 0u, 1u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, 0u | (_GLF_IDENTITY((workgroup_id) + 0u, max((workgroup_id) + 0u, (workgroup_id) + 0u))))))))), max(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))) | (uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | (workgroup_id))) + 0u, max((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))), 1u * ((uint(uint(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (workgroup_id))) + 0u)))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), min(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))) | (uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | (workgroup_id))) + 0u, max((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))), 1u * ((uint(uint(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (workgroup_id))) + 0u)))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), min(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))))) / 1u)))))), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))) | (uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | (workgroup_id))) + 0u, max((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + 0u, (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))), 1u * ((uint(uint(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (workgroup_id))) + 0u)))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), min(uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u))))))), uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, max(_GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ((workgroup_id) + 0u) << 0u), _GLF_IDENTITY((workgroup_id) + 0u, clamp((workgroup_id) + 0u, _GLF_IDENTITY((workgroup_id) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (true ? (workgroup_id) + 0u : _GLF_FUZZED(subgroup_id))), (workgroup_id) + 0u)))))))))) / 1u))))))) - (1u ^ 1u))) / 1u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), 0u + (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) + _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))), 1u * (workgroup_id))) | (workgroup_id)), (workgroup_id) + _GLF_IDENTITY(0u, (0u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u, ((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u, ((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u) | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) | 0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u, (0u & 95996u)), (_GLF_IDENTITY(uvec3(workgroup_id, 1u, (0u & 95996u)), (_GLF_IDENTITY(uvec3(workgroup_id, 1u, (0u & 95996u)), max(uvec3(workgroup_id, 1u, (0u & 95996u)), uvec3(workgroup_id, 1u, (0u & 95996u))))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), (uint(uvec3(workgroup_id, 1u, (0u & 95996u)))) + _GLF_IDENTITY(0u, 0u | (0u)))))), (workgroup_id) + 0u))))) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))) || false), (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), _GLF_IDENTITY(max((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size)), (false ? _GLF_FUZZED((subgroup_size >> subgroup_size)) : max((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size)))))), subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, _GLF_IDENTITY(0u | ((subgroup_id * subgroup_size) ^ 0u), (true ? 0u | ((subgroup_id * subgroup_size) ^ 0u) : _GLF_FUZZED(workgroup_base)))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)) + subgroup_local_id, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), 0u))))), uint(7u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), max(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u)))))) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size)), (uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) << 0u)) | (subgroup_id * subgroup_size))))) - 0u)))))) + subgroup_local_id, uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), max(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u)))))) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size)), (uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) << 0u)) | (subgroup_id * subgroup_size))))) - 0u)))))) + subgroup_local_id, 1u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | (subgroup_id * subgroup_size)) + subgroup_local_id)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u))))) | 0u, (((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u))))) | 0u) << 0u), (((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) ^ 0u) * subgroup_size) ^ 0u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) | (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) * 1u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) | (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) * 1u)))))))))) | 0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | (subgroup_id * subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) >> 0u)) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)) ^ 0u))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)))), _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)), (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u))) | 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u) * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u), (false ? _GLF_FUZZED(atomicAnd(subgroup_id, subgroup_local_id)) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u) * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) ^ 0u)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (1u | 0u) * (subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) ^ 0u, _GLF_IDENTITY(0u | ((subgroup_id * subgroup_size) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u | ((subgroup_id * subgroup_size) ^ 0u), ~ (~ (0u | ((subgroup_id * subgroup_size) ^ 0u))))))))) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u)))) | (subgroup_id * subgroup_size))) / 1u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(write_val) : subgroup_size)), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(write_val) : subgroup_size)), 0u, 1u, 0u)) - uvec4(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u) ^ 0u, 0u | ((subgroup_id * subgroup_size) ^ 0u)))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))) : _GLF_FUZZED(workgroup_base))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u)))) | (subgroup_id * subgroup_size)) + subgroup_local_id))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id, uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(mix(-17443, -57687, true)) : _GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)) / 1)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3))) < injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3)) - 0.0))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), min(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).y))))))), ! (! ((! (bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.3)) - 0.0))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), min(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).y)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(849.845) : injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y))))))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_IDENTITY(mat3(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1]) * 1.0)))), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (mat3(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1]), vec2(_GLF_IDENTITY(vec2(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1])), vec2(mat2x4(vec2(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))[1])), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0)))))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, min(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), max((write_val) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((write_val) >> 0u, _GLF_IDENTITY(((write_val) >> 0u), uint(uvec2(((write_val) >> 0u), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), clamp(~ (uint(6u)), ~ (uint(6u)), ~ (uint(6u)))))), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(101949u) : uint(6u)))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(write_val, 0u | (_GLF_IDENTITY(write_val, (write_val) >> 0u)))), ((_GLF_IDENTITY(write_val, 0u | (_GLF_IDENTITY(write_val, (write_val) >> 0u))))) - 0u) >> 0u)), uint(uvec3(_GLF_IDENTITY((write_val) >> 0u, ((write_val) >> 0u) | ((write_val) >> 0u)), 1u, (1u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7416.0284))) : _GLF_FUZZED(2.1))) < injectionSwitch.y))))))), true, true))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) / 1u, 0u ^ ((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) / 1u))) : _GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) * 1u)));
}
