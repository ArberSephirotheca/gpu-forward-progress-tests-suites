#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uvec4 _f1;
 _GLF_struct_1 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 uint subgroup_id;
 _GLF_struct_2 _f1;
 ivec3 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.69)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.69)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.69)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.69)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(-7162.5696) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.69)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))))))))))) + 0.0), 1.0, 1.0))), gl_SubgroupID, _GLF_struct_2(_GLF_struct_0(true), uvec4(1u), _GLF_struct_1(mat3(1.0), mat4x3(1.0)), true), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(613) : 1)), 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-14976, (-14976) | (-14976))) : _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), (0 ^ 0) ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), min((_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, _GLF_IDENTITY(((1) / 1) | ((1) / 1), 0 | (((1) / 1) | ((1) / 1))))) | (_GLF_IDENTITY((1) / 1, 0 ^ ((1) / 1)))))), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) / 1)), int(ivec3((_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) / 1)), 1, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1), _GLF_IDENTITY(ivec3(ivec4(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1), 0)), (false ? _GLF_FUZZED(ivec3(-78808, 82891, 21649)) : ivec3(ivec4(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1), 0)))))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1), 1, 0, 0), (ivec4((1), 1, 0, 0)) | (ivec4((1), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4((1), 1, 0, 0), (ivec4((1), 1, 0, 0)) | (ivec4((1), 1, 0, 0))))) - 0)) / 1, ((1) / 1) | ((1) / 1))) | (_GLF_IDENTITY((1) / 1, 0 ^ ((1) / 1)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB(write_val))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1))))))))), int(ivec3(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 + (1)))), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), min((_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((1) / 1, 0 | ((1) / 1)), ((1) / 1) | ((1) / 1))) | (_GLF_IDENTITY((1) / 1, 0 ^ ((1) / 1)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1))))))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) + 0), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 + ((1))) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1))))), 1, 1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(1, (1) ^ 0), 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(1, (1) ^ 0), 1)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), (1) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), (1) / 1))) - 0), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1))))))), _GLF_IDENTITY(1, (1) ^ 0), 1))))))) - 0)) | ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(1, (1) ^ 0), 1)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, 0 | (1)))) << 0))) / 1)), 1, 1))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-24996) : 1))) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))), 0 + ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-24996) : 1))) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))), max(max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1)))), (max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / 1)), 1, 1))))) * 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), min((1), (1))), (~ (1)) | 0)))) / 1)), int(ivec3((_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) << 0))), 1, 1)))))))))) ^ 0) : _GLF_FUZZED(32002)))))))))), 1))), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), 1)), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((~ -11781)) : (1))) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((~ -11781)) : (1))) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((~ -11781)) : (1))) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))) << 0)) + 0)))))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), 1))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) / 1))), max(~ (~ (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1, 1)))))), 1 * (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) << 0), 0, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) << 0), 0, 1)), int(ivec4(int(ivec3(_GLF_IDENTITY(1, (1) << 0), 0, 1)), 0, 0, 1)))) - 0)), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))), 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) ^ 0), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1))) ^ 0)), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))) / 1, clamp(_GLF_IDENTITY((1) / 1, ((1) / 1) >> 0), (1) / 1, (1) / 1))) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))) + 0)))))))), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) | (0 ^ (1)))), _GLF_IDENTITY(1, ~ (~ (1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(60959, (_GLF_IDENTITY(60959, (60959) << 0)) >> (64230 & 0))) : ~ (_GLF_IDENTITY(1, (1) / 1)))))))), 1))))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(int(_GLF_IDENTITY(1, (1) / 1))))))))))), 1)), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(clamp((1), (1), _GLF_IDENTITY((1), 0 ^ ((1)))), max(clamp((1), (1), _GLF_IDENTITY((1), 0 ^ ((1)))), clamp((1), (1), _GLF_IDENTITY((1), 0 ^ ((1))))))) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))))))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14976) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), 1)))))) ^ ivec3(0, 0, 0))) >> _GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (~ (ivec3(0, 0, 0))) * ivec3(1, 1, 1))))))), _GLF_struct_3(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(write_val, min(write_val, write_val)), write_val, write_val)))) : vec2(1.0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))) || false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(1.0, 1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) : _GLF_FUZZED(vec2(-873.694, 5.5))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bool(! (((false))))))))) || false)), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bool(! (((false))))))))) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(false)))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(false)))))), false, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false))))))))), true && (bool(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false)))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false))))))))), true && (bool(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (! (bool(bool(! (false))))))))))))))) || false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), (! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), (! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false))))))))) || false))) && true)))))), true && (! (! (bool(bool(! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))), ! (! (! (bool(bool(! (false))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))), ! (! (! (bool(bool(! (false))))))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))), ! (! (! (bool(bool(! (false)))))))))) || false)))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false)))))))), (! (_GLF_IDENTITY(! (bool(bool(! (false)))), ! (! (! (bool(bool(! (false))))))))) || false))) && true)))))), true && (! (! (bool(bool(! (false))))))))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, log(1.0))))[1], (injectionSwitch[1]) - 0.0)))[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3091.1011), _GLF_FUZZED(8.2)), bvec2(false, false))).x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), max(_GLF_IDENTITY(((injectionSwitch.x)), (((injectionSwitch.x))) * 1.0), ((injectionSwitch.x)))) * cos(0.0)), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), max(_GLF_IDENTITY(((injectionSwitch.x)), (((injectionSwitch.x))) * 1.0), ((injectionSwitch.x)))) * cos(0.0))), bool(true)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size))))) - write_val), (_GLF_IDENTITY((subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), 0u | ((subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(clamp((subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), (_GLF_IDENTITY((subgroup_size - write_val), max((subgroup_size - write_val), (subgroup_size - write_val)))) | (_GLF_IDENTITY((subgroup_size - write_val), 0u ^ ((subgroup_size - write_val))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), 0u | ((subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), 0u | ((subgroup_size - write_val))), _GLF_IDENTITY(((subgroup_size - write_val)), 0u | (((subgroup_size - write_val)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(clamp((subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ~ (~ ((subgroup_size - write_val)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u))))))))))) : (subgroup_size - write_val), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u))))))))))) : (subgroup_size - write_val)) >> 0u))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : clamp((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) - write_val), (subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), 0u ^ ((subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((false ? _GLF_FUZZED(workgroup_id) : clamp((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) * 1u)), (_GLF_IDENTITY(clamp((subgroup_size - write_val), (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(subgroup_size))) - write_val), _GLF_IDENTITY((subgroup_size - _GLF_IDENTITY(write_val, (write_val) | (write_val))), ((subgroup_size - write_val)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u))))) | 0u)), uint(uvec3(true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) - write_val), (_GLF_IDENTITY((subgroup_size - write_val), _GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), 0u | ((subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(min(clamp((subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), _GLF_IDENTITY(~ (~ ((subgroup_size - write_val))), (~ (~ ((subgroup_size - write_val)))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(-29.27, -7.9).y)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-671.151)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), (_GLF_IDENTITY((subgroup_size - write_val), max((subgroup_size - write_val), (subgroup_size - write_val)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(clamp((subgroup_size - write_val), (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))) - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u)), max(min(clamp((subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ~ (~ ((subgroup_size - write_val)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0u)))), (_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - _GLF_IDENTITY(write_val, (write_val) + 0u)), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u)), _GLF_IDENTITY(min(clamp((subgroup_size - _GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(write_val, 1u), (false ? _GLF_FUZZED(uvec2(24560u, 5090u)) : uvec2(write_val, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(write_val, 1u), (false ? _GLF_FUZZED(uvec2(24560u, 5090u)) : uvec2(write_val, 1u)))), 1u, 1u, 0u))))) + 0u)), _GLF_IDENTITY((subgroup_size - write_val), ~ (~ ((subgroup_size - write_val)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp(_GLF_IDENTITY((subgroup_size - write_val), 1u * ((subgroup_size - write_val))), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(clamp((subgroup_size - write_val), (_GLF_IDENTITY(subgroup_size - write_val, (true ? subgroup_size - write_val : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u)), (true ? min(clamp((subgroup_size - write_val), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))))) - write_val), ~ (~ ((subgroup_size - write_val)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size - write_val), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size - write_val))), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((_GLF_IDENTITY(subgroup_size - write_val, (subgroup_size - write_val) >> 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : clamp((subgroup_size - write_val), (subgroup_size - write_val), _GLF_IDENTITY((subgroup_size - write_val), ((subgroup_size - write_val)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u)) : _GLF_FUZZED(workgroup_id)))))))) | 0u)), 1u, 0u))))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(_GLF_IDENTITY((-28.57 * 7460.1665), float(_GLF_IDENTITY(mat3((-28.57 * 7460.1665), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3((-28.57 * 7460.1665), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), bvec2(false, false))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (0) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.0)))))))
  return;
}
