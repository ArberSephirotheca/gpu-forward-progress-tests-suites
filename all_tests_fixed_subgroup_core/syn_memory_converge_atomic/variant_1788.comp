#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true, true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))), true && (! (false))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))))), ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))))))))), (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(bvec2((false), true))))), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true)), true, true, true)))) && true))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-74.03)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), bvec2(false, true)))), (false ? _GLF_FUZZED(vec2(3.1, -7.8)) : vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0)))), bvec2(false, true))))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), bvec2(false, true)))), (false ? _GLF_FUZZED(vec2(3.1, -7.8)) : _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0)))), bvec2(false, true)))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0)))), bvec2(false, true))))) / abs(vec2(1.0, 1.0)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))))), (false ? _GLF_FUZZED(vec2(3.1, -7.8)) : vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0)))), bvec2(false, true))))))).y), float(_GLF_FUZZED(vec3(938.575, 117.665, 91.74).y)), bool(false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(sqrt(1.0)))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(3.1, min(3.1, 3.1)), -7.8)) : vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(6.9), (true ? _GLF_FUZZED(6.9) : _GLF_FUZZED(-1.2))), (injectionSwitch)[1]), _GLF_IDENTITY(min(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0))), (true ? min(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1])) / vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(6.2, 4.3))))), bvec2(false, true))))))).y))))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && true)) || false, _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, true), false)))))))) && true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, abs(0.0))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-37.88), _GLF_FUZZED(29.36)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), sin(0.0))))[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), bvec2(false, true)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))), (injectionSwitch)[1]))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))), (injectionSwitch)[1]))[1], mix(float((vec2(_GLF_FUZZED(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))), (injectionSwitch)[1]))[1]), float(_GLF_FUZZED(6.9)), bool(false)))), vec2(_GLF_FUZZED(-289.271), _GLF_FUZZED((9.0 / vec4(-4.0, -2461.4030, 2.8, 3161.8085)).x)), bvec2(false, false))), bvec2(false, true)))), min(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))).y))), ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, cos(0.0), 0.0))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && true)) || _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), max(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-33.02) : float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x2(injectionSwitch.x, 1.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.3) : injectionSwitch.x)), 1.0, 1.0, abs(1.0), 1.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.3) : injectionSwitch.x)), 1.0, 1.0, abs(1.0), 1.0, 1.0))) - 0.0)))))))) : _GLF_FUZZED(79.23))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(662.008)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, false || (false))))))))) && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))) || false)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-818.521))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), 0.0 + (float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-490.099)), float(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-818.521))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), 0.0 + (float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-490.099)), float(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-818.521))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), (float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))) * 1.0), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), cos(0.0) * (float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5701.1782) : 1.0)))), exp(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(float(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), 0.0 + (float(_GLF_IDENTITY(vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), vec4(mat2(_GLF_IDENTITY(mat4(1.0) * (vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), vec4(mat4(mat4(1.0) * (vec4(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), 1.0, exp(0.0), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) - 0.0), 1.0))))))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-490.099)), float(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), false))))))))) && true)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), log(1.0), 1.0, 0.0, 0.0, 1.0))))), float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(sqrt(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1456.9643) : _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(1.4)), bool(false))))), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat2(-37.76, -30.66, -5.0, -5.0)) : mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat2(-37.76, -30.66, -5.0, -5.0)) : mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))))))), float(_GLF_IDENTITY(mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat2(-37.76, -30.66, -5.0, -5.0)) : mat2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))))))))))), 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(22.76)), float(1.0), bool(true))))))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0)))), 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))) > injectionSwitch.y), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(min(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), min(min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), injectionSwitch.y))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(78.65))), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(min(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0))), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), float(vec2(min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), 1.0))), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), injectionSwitch.y))), false, true))))), false))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(-4.2, 4758.9328, -728.895, 405.579).s) : injectionSwitch.y))), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2346.3663) : 1.0)), 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), (float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? 4.9 : 2.2))), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))) + 0.0)))) > injectionSwitch.y), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3608.7270)), float(1.0), bool(true))), 0.0)), float(mat4x2(injectionSwitch.x, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))) > injectionSwitch.y), false, true)), false))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-426.276, 781.809).x), _GLF_FUZZED(677.157)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-426.276, mix(float(_GLF_FUZZED(2265.7940)), float(_GLF_IDENTITY(-426.276, mix(float(-426.276), float(_GLF_FUZZED(-4.8)), bool(false)))), bool(true))), 781.809).x), _GLF_FUZZED(_GLF_IDENTITY(677.157, max(677.157, 677.157)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - vec2(0.0, 0.0))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-426.276, 781.809).x), _GLF_FUZZED(677.157)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-426.276, mix(float(_GLF_FUZZED(2265.7940)), float(_GLF_IDENTITY(-426.276, mix(float(-426.276), float(_GLF_FUZZED(-4.8)), bool(false)))), bool(true))), 781.809).x), _GLF_FUZZED(_GLF_IDENTITY(677.157, max(677.157, 677.157)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - vec2(0.0, 0.0))).y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.43)), bool(false)))))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.43)), bool(false)))))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.43)), bool(false)))))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.43)), bool(false)))))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), false, false, false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true))))))) && true))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(fract(-60.10)))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(fract(-60.10)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(fract(-60.10)))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(fract(-60.10)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), clamp((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) << 0u), subgroup_size, subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u ^ (write_val))) | (write_val)), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, min(64, 64)))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false), true)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.9, -97.40)))).y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false))))) && true), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false))))) && _GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false))))) && _GLF_IDENTITY(true, false || (true)), ((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false))))) && _GLF_IDENTITY(true, false || (true))) && true), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
