#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false)))))), true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.6) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.6) : injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false))))
          return;
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) | (1)) | 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true)))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(clamp(_injected_loop_counter, -62126, _injected_loop_counter)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))
                return;
              }
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uint(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u)))))), uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) - uvec2(0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))))), (false ? _GLF_FUZZED((subgroup_id % 178383u)) : uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))), (min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))) - 0u))), min(_GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), (uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), _GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) + uvec2(0u, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))) << 0u), uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), _GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), ~ (~ (uvec2(gl_WorkGroupSize.x, 0u)))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))), clamp(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))), uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))), (uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))) | 0u)))), min(_GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), (uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))), (uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))) >> 0u)), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))) << 0u), uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), _GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) | (uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)), uvec2(1u, 1u) * (max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))), _GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(uaddCarry(subgroup_id, subgroup_size, subgroup_local_id)) : gl_WorkGroupSize.x)), uint(uvec2(gl_WorkGroupSize.x, 0u)))))), min(_GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), (uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))) << 0u), uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) ^ (gl_WorkGroupSize)).x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))), _GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) | (0u))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), min(_GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u)))), 0u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), (uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))) << 0u), uint(uint(min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), uvec2(uvec4(uvec2(gl_WorkGroupSize.x, 0u), 1u, 0u)))))))))))))))))))))) : _GLF_FUZZED(179178u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 1u)), (uint(uvec4(0u, 1u, 1u, 1u))) / 1u))))) | 0u), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))) : _GLF_FUZZED(179178u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) * 1u), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)))), 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 0u)))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(162585u, 67924u, 173988u)) : max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))))).x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (0u | 0u), 1u)))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u)), min(uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u)), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u)), clamp(uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u)), uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u)), uint(uvec2((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))), 0u))))))))), clamp(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)).x, 0u)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)).x, 0u)))), 0u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), min(uint(uvec2(gl_WorkGroupSize.x, 0u)), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(179178u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_FUZZED(179178u)), ~ (_GLF_IDENTITY(~ (uint(_GLF_FUZZED(179178u))), (~ (uint(_GLF_FUZZED(179178u)))) * 1u)))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (uint(_GLF_IDENTITY(uint(_GLF_FUZZED(179178u)), ~ (_GLF_IDENTITY(~ (uint(_GLF_FUZZED(179178u))), (~ (uint(_GLF_FUZZED(179178u)))) * 1u)))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)).x) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_id), (true ? 0u : _GLF_FUZZED(subgroup_id)) + 0u))))) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), ~ (~ (uint(uvec2(gl_WorkGroupSize.x, 0u)))))) * 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(0u, 0u + (0u))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (0u | 0u), 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), min(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), (uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u)) / uvec2(1u, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))) << 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))) : _GLF_FUZZED(179178u)) | 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), ~ (~ (uint(uvec2(gl_WorkGroupSize.x, 0u)))))) * 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(0u, 0u + (0u))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (0u | 0u), 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), min(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), (uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u)) / uvec2(1u, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))) << 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))) : _GLF_FUZZED(179178u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), ~ (~ (uint(uvec2(gl_WorkGroupSize.x, 0u)))))) * 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(0u, 0u + (0u))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (0u | 0u), 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), min(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u), (uvec2(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u)))), 1u)) / uvec2(1u, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))) << 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))) : _GLF_FUZZED(179178u)) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), clamp(uvec2(gl_WorkGroupSize.x, 0u), _GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) | (uvec2(gl_WorkGroupSize.x, 0u)))) / uvec2(1u, 1u)), uvec2(gl_WorkGroupSize.x, 0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, uint(uvec2(gl_WorkGroupSize.x, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), max(uvec2(gl_WorkGroupSize.x, 0u), uvec2(gl_WorkGroupSize.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(0u, 1u, (0u | 0u), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), 0u, 1u), clamp(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), 0u, 1u), uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), 0u, 1u), uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u)))), 0u, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), uint(uvec2(gl_WorkGroupSize.x, 0u))))))))))))) : _GLF_FUZZED(179178u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))), 0u | ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))))))) - 0u))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(refract(-5640.7752, 5.1, -16.30)) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5979.6688) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-652.388)), float(1.0), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-232.867))))), 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(-6.2))))))), float(_GLF_FUZZED(10.96)), bool(false)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (1.0))), mix(float(float(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(_GLF_FUZZED(10.96)), bool(false)))), mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (1.0))), mix(float(float(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(_GLF_FUZZED(10.96)), bool(false)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (1.0))), mix(float(float(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(_GLF_FUZZED(10.96)), bool(false))))) - 0.0)), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(float(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(_GLF_FUZZED(10.96)), bool(false))))))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, true, true))))), _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, bool(bool(false))), true && (((false)) || false))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, true && (((false)) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, true, false)), false, true, false))), true, false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, true && (((false)) || false)), true && (((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, true && (((false)) || false)), true && (((false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, true && (((false)) || false)), true && (((false)) || false))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, true && (((false)) || false)), true && (((false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, true && (((false)) || false)), true && (((false)) || false))) && true)))))))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))) / 1.0))), true)), true, true)))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY((false), ((false)) || false)))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY((false), ((false)) || false)))), ((! (! (_GLF_IDENTITY((false), ((false)) || false))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[0], _GLF_FUZZED((-3.8))), vec2(_GLF_FUZZED(vec3(-7.5, -1.3, -2.0).s), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[0], _GLF_FUZZED((-3.8))), vec2(_GLF_FUZZED(vec3(-7.5, -1.3, -2.0).s), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[0], _GLF_FUZZED((-3.8))), vec2(_GLF_FUZZED(vec3(-7.5, -1.3, -2.0).s), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[1]), bvec2(false, true))), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[0], _GLF_FUZZED((-3.8))), vec2(_GLF_FUZZED(vec3(-7.5, -1.3, -2.0).s), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[0], _GLF_FUZZED((-3.8))), vec2(_GLF_FUZZED(vec3(-7.5, -1.3, -2.0).s), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(9.9)), bvec2(false, false)))[1]), bvec2(false, true)))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))
                      {
                      }
                     else
                      {
                       return;
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         break;
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y, (GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) << 0));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
      break;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
        {
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), mix(float(_GLF_FUZZED(0.4)), float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), (false ? _GLF_FUZZED(radians(-189.169)) : _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))), bool(true)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0)), injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), bvec2(false, true)), abs(vec2(0.0, 0.0)) + (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-79.10), (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[1]), bvec2(false, true))))) : _GLF_FUZZED(vec2(-0.7, -58.34)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.7, -58.34), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-0.7, -58.34))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED((9.1 + 0.1))), vec2((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[0], (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9112.9572), _GLF_FUZZED(-712.436)), bvec2(false, false)))[1])))[0], _GLF_FUZZED(-493.214)), vec2(_GLF_FUZZED(-6851.5208), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(749.271), _GLF_FUZZED(7.4)), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-22.95)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (true ? (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(vec2(951.647, 10.94))))))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))))))[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))) - vec2(0.0, 0.0)).y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), bvec2(false, true)), abs(vec2(0.0, 0.0)) + (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-79.10), (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[1]), bvec2(false, true))))) : _GLF_FUZZED(vec2(-0.7, -58.34)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.7, -58.34), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-0.7, -58.34))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED((9.1 + 0.1))), vec2((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[0], (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9112.9572), _GLF_FUZZED(-712.436)), bvec2(false, false)))[1])))[0], _GLF_FUZZED(-493.214)), vec2(_GLF_FUZZED(-6851.5208), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(749.271), _GLF_FUZZED(7.4)), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-22.95)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (true ? (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(vec2(951.647, 10.94))))))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))))))[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))) - vec2(0.0, 0.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), bvec2(false, true)), abs(vec2(0.0, 0.0)) + (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-79.10), (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[1]), bvec2(false, true))))) : _GLF_FUZZED(vec2(-0.7, -58.34)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.7, -58.34), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-0.7, -58.34))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED((9.1 + 0.1))), vec2((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[0], (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9112.9572), _GLF_FUZZED(-712.436)), bvec2(false, false)))[1])))[0], _GLF_FUZZED(-493.214)), vec2(_GLF_FUZZED(-6851.5208), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(749.271), _GLF_FUZZED(7.4)), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-22.95)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (true ? (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(vec2(951.647, 10.94))))))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))))))[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))) - vec2(0.0, 0.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), bvec2(false, true)), abs(vec2(0.0, 0.0)) + (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8.8, -29.14, -2.0, -8.8).x)), vec2(_GLF_FUZZED(458.293), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-79.10), (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)[1]), bvec2(false, true))))) : _GLF_FUZZED(vec2(-0.7, -58.34)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, 7.1)) : injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.7, -58.34), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-0.7, -58.34))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED((9.1 + 0.1))), vec2((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[0], (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0)))))))))[0], injectionSwitch[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9112.9572), _GLF_FUZZED(-712.436)), bvec2(false, false)))[1])))[0], _GLF_FUZZED(-493.214)), vec2(_GLF_FUZZED(-6851.5208), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(749.271), _GLF_FUZZED(7.4)), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-22.95)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (true ? (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(vec2(951.647, 10.94))))))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))))))[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))) - vec2(0.0, 0.0)).y))))))) && true), true))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.7)), bool(false))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false), false, true))))))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-50.14)), bool(false))) > injectionSwitch.y) || false)), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, 0.0, 0.0, determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0))))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true))))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) || false)) || false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3072.8138)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y) || false)), true && (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.0, 101.746)))), injectionSwitch))[0], injectionSwitch[1])).y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.0, 101.746)))), injectionSwitch))[0], injectionSwitch[1])).y))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-3.9)), bool(false))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-34.93) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5492.9183)), bool(false))))), 1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0))))) || false))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.0, 101.746)))), injectionSwitch))[0], injectionSwitch[1])).y)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.0, 101.746)))), injectionSwitch))[0], injectionSwitch[1])).y))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-3.9)), bool(false))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-34.93) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5492.9183)), bool(false))))), 1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0))))) || false))))))), true)))), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true))))))) || false)))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = (1 ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), tan(0.0), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0))))) && (_GLF_DEAD(false))))
    break;
  }
 do
  {
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 + (_GLF_IDENTITY(int(2), int(2))))) * 1)) | (_GLF_IDENTITY(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(-731.115)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.4)), float(0.0), bool(true))))), injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
}
