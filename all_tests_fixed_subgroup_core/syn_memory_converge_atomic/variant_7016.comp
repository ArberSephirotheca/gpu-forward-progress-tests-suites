#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, 1 * ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))))) | 0))) + (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))))), (vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))))) / vec3(1.0, 1.0, 1.0)))) < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))))), (vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6246.6058))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))) - 0.0)))) / vec3(1.0, 1.0, 1.0)))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))))), (vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))))) / vec3(1.0, 1.0, 1.0)))) < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))))), (vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6246.6058))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))) - 0.0)))) / vec3(1.0, 1.0, 1.0)))) < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(5.0)), bool(false))), cos(0.0))))), (vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 1.0, 0.0)), clamp(float(mat2(0.0, 0.0, 1.0, 0.0)), float(mat2(0.0, 0.0, 1.0, 0.0)), float(mat2(0.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(exp2(4.3)))), 0.0, log(1.0), cos(0.0)))))) / vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(364.108))))))) < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(mat3x4(vec4(0.0, 0.0, 0.0, 1.0), 1.0, tan(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0))))), vec4(0.0, 0.0, log(1.0), cos(0.0))))), vec3(mat2x4(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0)))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(mat3x4(vec4(0.0, 0.0, 0.0, 1.0), 1.0, tan(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0))))), vec4(0.0, 0.0, log(1.0), cos(0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0))), (vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-6246.6058, max(-6246.6058, -6246.6058))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), cos(0.0))), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, log(1.0), cos(0.0)))) - 0.0)))) / vec3(1.0, 1.0, 1.0)))) < injectionSwitch.y)))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 | 0))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 | 0))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) && true))));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2860.5095))), 0.0)), (exp(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2860.5095), min(true ? 0.0 : _GLF_FUZZED(-2860.5095), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2860.5095), (false ? _GLF_FUZZED(8972.3095) : true ? 0.0 : _GLF_FUZZED(-2860.5095))))))), 0.0))) - vec2(0.0, 0.0))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2860.5095))), 0.0)), (exp(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2860.5095), min(true ? 0.0 : _GLF_FUZZED(-2860.5095), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2860.5095), (false ? _GLF_FUZZED(8972.3095) : true ? 0.0 : _GLF_FUZZED(-2860.5095))))))), 0.0))) - vec2(0.0, 0.0))).y, false, false, true)))))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 | 1) & 1), ! (! (_injected_loop_counter < ((1 | 1) & 1))))); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, 1 * (6))))), clamp(int(6), int(6), int(6)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1), (5) - 0), ~ (~ (_GLF_IDENTITY(5, (5) - 0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))); _injected_loop_counter --)
        {
         GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.z = subgroup_local_id;
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))) || false)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.x = num_workgroup;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(bool((! (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_size)), uint(uvec4((true ? subgroup_size : _GLF_FUZZED(subgroup_size)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (1u ^ 0u))))) + GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 528.868)), _GLF_FUZZED(-7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) + 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (-73564 & 0) ^ (5))), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 << _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), bool(bvec3(! (_injected_loop_counter < 1), true, true)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(distance(29.68, -6.9)) : float(injectionSwitch.x))), float(_GLF_FUZZED(3.8)), bool(false))) > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.w = virtual_gid;
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 1, (0 << _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false))) * 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (false ? _GLF_FUZZED(-4.3) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false))))), min(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false))) * 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (false ? _GLF_FUZZED(-4.3) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false))))), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false))) * 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)), (false ? _GLF_FUZZED(-4.3) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.35)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(write_val, uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)) | (GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid)).w), 4, 64, 0);
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))) / vec2(1.0, 1.0)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, _GLF_IDENTITY(36.60, (36.60) / 1.0), -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec4(8.3, 6.4, _GLF_IDENTITY(562.469, clamp(_GLF_IDENTITY(562.469, (false ? _GLF_FUZZED(-7.4) : 562.469)), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), min(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), clamp(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))))))), 562.469)), 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, _GLF_IDENTITY(64.61, _GLF_IDENTITY((64.61) / 1.0, float(_GLF_IDENTITY(vec2((64.61) / 1.0, 1.0), vec2(1.0, 1.0) * (vec2((64.61) / 1.0, 1.0)))))), -6.3)), vec2(_GLF_IDENTITY(mat3((vec4(8.3, 6.4, _GLF_IDENTITY(562.469, clamp(_GLF_IDENTITY(562.469, (false ? _GLF_FUZZED(-7.4) : 562.469)), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), min(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), clamp(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))))))), 562.469)), 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, _GLF_IDENTITY(64.61, _GLF_IDENTITY((64.61) / 1.0, float(_GLF_IDENTITY(vec2((64.61) / 1.0, 1.0), vec2(1.0, 1.0) * (vec2((64.61) / 1.0, 1.0)))))), -6.3)), sin(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0), (mat3((vec4(8.3, 6.4, _GLF_IDENTITY(562.469, clamp(_GLF_IDENTITY(562.469, (false ? _GLF_FUZZED(-7.4) : 562.469)), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), min(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), clamp(_GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))), _GLF_IDENTITY(562.469, 0.0 + (_GLF_IDENTITY(562.469, (562.469) - 0.0))))))), 562.469)), 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, _GLF_IDENTITY(64.61, _GLF_IDENTITY((64.61) / 1.0, float(_GLF_IDENTITY(vec2((64.61) / 1.0, 1.0), vec2(1.0, 1.0) * (vec2((64.61) / 1.0, 1.0)))))), -6.3)), sin(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))))) ? _GLF_FUZZED((vec4(8.3, _GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4)), 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec4(8.3, 6.4, 562.469, 75.01), mix(vec4(_GLF_FUZZED(2.9), (vec4(8.3, 6.4, 562.469, 75.01))[1], _GLF_FUZZED(-7300.8282), _GLF_FUZZED(-169.094)), vec4((vec4(8.3, 6.4, 562.469, 75.01))[0], _GLF_FUZZED(33.02), (vec4(8.3, 6.4, 562.469, 75.01))[2], (vec4(8.3, 6.4, 562.469, 75.01))[3]), bvec4(true, false, true, true))) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec4(8.3, 6.4, 562.469, 75.01), mix(vec4(_GLF_FUZZED(2.9), (vec4(8.3, 6.4, 562.469, 75.01))[1], _GLF_FUZZED(-7300.8282), _GLF_FUZZED(-169.094)), vec4((vec4(8.3, 6.4, 562.469, 75.01))[0], _GLF_FUZZED(33.02), (vec4(8.3, 6.4, 562.469, 75.01))[2], (vec4(8.3, 6.4, 562.469, 75.01))[3]), bvec4(true, false, true, true))) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, min(false ? _GLF_FUZZED((_GLF_IDENTITY(vec4(8.3, 6.4, 562.469, 75.01), mix(vec4(_GLF_FUZZED(2.9), (vec4(8.3, 6.4, 562.469, 75.01))[1], _GLF_FUZZED(-7300.8282), _GLF_FUZZED(-169.094)), vec4((vec4(8.3, 6.4, 562.469, 75.01))[0], _GLF_FUZZED(33.02), (vec4(8.3, 6.4, 562.469, 75.01))[2], (vec4(8.3, 6.4, 562.469, 75.01))[3]), bvec4(true, false, true, true))) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, false ? _GLF_FUZZED((_GLF_IDENTITY(vec4(8.3, 6.4, 562.469, 75.01), mix(vec4(_GLF_FUZZED(2.9), (vec4(8.3, 6.4, 562.469, 75.01))[1], _GLF_FUZZED(-7300.8282), _GLF_FUZZED(-169.094)), vec4((vec4(8.3, 6.4, 562.469, 75.01))[0], _GLF_FUZZED(33.02), (vec4(8.3, 6.4, 562.469, 75.01))[2], (vec4(8.3, 6.4, 562.469, 75.01))[3]), bvec4(true, false, true, true))) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)))))).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3), exp(vec2(0.0, 0.0)) * (vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y)))))), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y)))))), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y)))))), true))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-775.117) : injectionSwitch.x)) < injectionSwitch.y)))))), true))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))), (_GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, _GLF_IDENTITY(-978.938, _GLF_ZERO(0.0, injectionSwitch.x) + (-978.938)), 64.61, -6.3))), mat2(1.0) * (_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3)))))) + vec2(0.0, 0.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y) && true), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, _GLF_IDENTITY(36.60, max(36.60, _GLF_IDENTITY(36.60, max(36.60, 36.60)))), -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(vec3(_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(mat4x2(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))), (_GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, _GLF_IDENTITY(-978.938, _GLF_ZERO(0.0, injectionSwitch.x) + (-978.938)), 64.61, -6.3))), mat2(1.0) * (_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3)))))) + vec2(0.0, 0.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y) && true), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, _GLF_IDENTITY(36.60, max(36.60, _GLF_IDENTITY(36.60, max(36.60, 36.60)))), -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(vec3(_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(mat4x2(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))), (_GLF_IDENTITY(_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, _GLF_IDENTITY(-978.938, _GLF_ZERO(0.0, injectionSwitch.x) + (-978.938)), 64.61, -6.3))), mat2(1.0) * (_GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3)))))) + vec2(0.0, 0.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y) && true), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, _GLF_IDENTITY(36.60, max(36.60, _GLF_IDENTITY(36.60, max(36.60, 36.60)))), -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, clamp(7.2, _GLF_IDENTITY(7.2, float(vec4(7.2, 0.0, 0.0, 0.0))), 7.2)), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, 36.60, -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(vec3(_GLF_IDENTITY(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, vec2(mat4x2(false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, _GLF_IDENTITY(7.2, (7.2) + 0.0), 36.60, -978.938, 64.61, -6.3))) : injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))))))))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(8.3, 6.4, 562.469, 75.01) * mat2x4(34.40, _GLF_IDENTITY(22.03, (false ? _GLF_FUZZED(-9.3) : 22.03)), 7872.2266, _GLF_IDENTITY(7.2, 1.0 * (7.2)), 36.60, _GLF_IDENTITY(-978.938, float(vec3(-978.938, 1.0, 1.0))), _GLF_IDENTITY(64.61, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(64.61, mix(float(_GLF_FUZZED(8.4)), float(64.61), bool(true))), 1.0), vec2(mat4(vec2(_GLF_IDENTITY(64.61, mix(float(_GLF_FUZZED(8.4)), float(64.61), _GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), ! (! (true && (bool(true)))))), true))))), 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(64.61, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.4), max(_GLF_FUZZED(8.4), _GLF_FUZZED(8.4)))), float(64.61), bool(true))), 1.0), vec2(mat4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(64.61, min(64.61, 64.61)), mix(float(_GLF_FUZZED(8.4)), float(64.61), bool(true))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -6.3))) : injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED((vec4(_GLF_IDENTITY(8.3, (_GLF_IDENTITY(8.3, (false ? _GLF_FUZZED(-2.3) : 8.3))) * 1.0), 6.4, 562.469, 75.01) * mat2x4(34.40, 22.03, 7872.2266, 7.2, _GLF_IDENTITY(_GLF_IDENTITY(36.60, clamp(36.60, 36.60, _GLF_IDENTITY(36.60, max(_GLF_IDENTITY(36.60, clamp(36.60, 36.60, 36.60)), 36.60)))), (_GLF_IDENTITY(36.60, 0.0 + (36.60))) - _GLF_IDENTITY(0.0, (0.0) / 1.0)), -978.938, 64.61, -6.3))) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bool(! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y = read_val;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0)), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0))) - 0)) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   buf[GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.w] = uint(subgroupAllEqual(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-4675.4816) : injectionSwitch[1]))), bool(true))))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
