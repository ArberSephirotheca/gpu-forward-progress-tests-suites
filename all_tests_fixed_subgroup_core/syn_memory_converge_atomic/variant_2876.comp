#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 0, 0))) != (_GLF_IDENTITY(1 ^ 0, ~ (~ (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)) << (0 >> _GLF_IDENTITY(int(1), int(1)))))
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      break;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - length(0.0), max((injectionSwitch.y) - length(0.0), _GLF_IDENTITY((injectionSwitch.y) - length(0.0), clamp(_GLF_IDENTITY((injectionSwitch.y) - length(0.0), ((injectionSwitch.y) - length(0.0)) * 1.0), (injectionSwitch.y) - length(0.0), (injectionSwitch.y) - length(0.0)))))))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(pow(vec2(207.824, 8752.7592), vec2(-3123.7453, 4313.4724)))))))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (-7964.4201 * -9.6)))), bool(false)))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (-7964.4201 * -9.6)))), bool(_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (-7964.4201 * -9.6)))), bool(_GLF_IDENTITY(false, ! (! (false))))))))))), true, _GLF_IDENTITY(true, false || (true)))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sin(0.0), 1.0))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false) || false)))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) | ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(bitfieldInsert(59559, 99006, -69188, (bvec4(false, false, false, false) , _injected_loop_counter))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, tan(0.0)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
     return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (-7990 - 59626))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        break;
       break;
      }
     do
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))) || false)));
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), float(mat4(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) * uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(17027u))))) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, min(0, 0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0 & 87021) ^ (_GLF_IDENTITY(0, (0) ^ 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))]), (false ? _GLF_FUZZED(subgroup_id) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) << 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(437.917))), injectionSwitch.x))))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, (1u & 1u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) >> _GLF_IDENTITY(0, (0) >> 0))], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), 0u)))))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), float(mat4(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) * uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(17027u))))) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, min(0, 0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0 & 87021) ^ (_GLF_IDENTITY(0, (0) ^ 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))]), (false ? _GLF_FUZZED(subgroup_id) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) << 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(437.917))), injectionSwitch.x))))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, (1u & 1u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) >> _GLF_IDENTITY(0, (0) >> 0))], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), 0u)))))).x, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), float(mat4(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) * uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(17027u))))) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, min(0, 0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0 & 87021) ^ (_GLF_IDENTITY(0, (0) ^ 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))]), (false ? _GLF_FUZZED(subgroup_id) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) << 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(437.917))), injectionSwitch.x))))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, (1u & 1u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) >> _GLF_IDENTITY(0, (0) >> 0))], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), 0u)))))).x, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), float(mat4(float(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) * uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156322u, 157486u, 84974u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(171903u, 186827u, 148271u)) : _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(17027u))))) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, min(0, 0))))], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0 & 87021) ^ (_GLF_IDENTITY(0, (0) ^ 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))]), (false ? _GLF_FUZZED(subgroup_id) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))]) << 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) >> 0))], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | ((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(437.917))), injectionSwitch.x))))), (0) >> 0))]) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) ^ (gl_NumWorkGroups), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, (1u & 1u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) ^ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0) >> 0))])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) >> _GLF_IDENTITY(0, (0) >> 0))], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), 0u)))))).x));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) << 0))), 0 | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) << 0))), (false ? _GLF_FUZZED(-33037) : ~ (~ (_GLF_IDENTITY(1, (1) << 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), 0, 1)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), max((1), (1))) : _GLF_FUZZED(-93987))))))) << 0))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))), (_GLF_IDENTITY(~ (1), (~ (1)) * 1)) / 1), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1)), ~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1))), (~ (int(ivec2(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1)))) | (~ (int(ivec2(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1)))))))), _GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))), ~ (~ (1)), ~ (~ (1)))))) | (_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ~ (~ (1))))) << 0))) >> 0)) / 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     break;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-70381) : 3)))), 3, _GLF_IDENTITY(3, max(3, 3))))) | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), clamp((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-70381) : 3)))), 3, _GLF_IDENTITY(3, max(3, 3))))) | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-70381) : 3)))), 3, _GLF_IDENTITY(3, max(3, 3))))) | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-70381) : 3)))), 3, _GLF_IDENTITY(3, max(3, 3))))) | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (false ? _GLF_FUZZED(92180) : _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u ^ (workgroup_size), (0u ^ (workgroup_size)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) ^ _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))) + 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 1 * (1)), 1)))])).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        break;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))));
          }
         else
          {
          }
         continue;
        }
       continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bool(false || (_GLF_DEAD(false))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          continue;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, true && (false))))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))) && true)))))))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false))))))), true)))))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 1.0, 0.0))))))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) << 0u)) >> 0u) + subgroup_local_id) >> 0u);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), 0 + _GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(59625) : _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (7))), max(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, (7) | (0 & 83157))))))) - 0)) >> 0))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(59625) : _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (7))), max(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, (7) | (0 & 83157))))))) - 0)) >> 0))), (_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(59625) : _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (7))), max(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, (7) | (0 & 83157))))))) - 0)) >> 0))), int(ivec3(((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(59625) : _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (7))), max(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, (7) | (0 & 83157))))))) - 0)) >> 0))), 1, 1)))) * 1) : _GLF_FUZZED(48083)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(1), int(1))) & -18039), false || (_GLF_IDENTITY(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(1), int(1))) & -18039), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), 0 | (int(1))), _GLF_IDENTITY(int(1), (int(1)) * 1))), int(1))) & -18039), true), bvec2(bvec4(bvec2(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(1), int(1))) & -18039), true), true, false)))))))); _injected_loop_counter --)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))));
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))) && true)))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ~ (~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), int(0)))))) + (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(606.681)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))) / 1.0))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6772.5902)), vec2(_GLF_FUZZED(8.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9470.8067, -9558.5761)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(3592.7187), (injectionSwitch)[1]), bvec2(false, true))))), (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y, mix(float(_GLF_FUZZED(-4886.6381)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y) - 0.0)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) > (0 & 78125)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 78125)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 78125)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 78125)))))) || false)) && true); _injected_loop_counter --)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false, true, true)), (bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false, true, true))) && true))))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((64) | (64)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (64)), 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          break;
         do
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              break;
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               break;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))))))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec2(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(vec2(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0))), bool(true))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false)))), float(_GLF_FUZZED(503.013)), bool(false))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false)))), float(_GLF_FUZZED(503.013)), bool(false))), injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-50.39)), float(exp(0.0)), bool(true))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(31.13)), bool(false))))), 0.0, 1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(31.13)), bool(false))))), 0.0, 1.0, 1.0)) : _GLF_FUZZED(-7.2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(5.8) : float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0))))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0), vec3(1.0, 1.0, 0.0))), 0.0, cos(tan(0.0))))), 0.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-1.2, 91.98))))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(39.90), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true))).x, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-45.32)), float(0.0), bool(true)))) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))) * 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(503.013, clamp(_GLF_IDENTITY(503.013, (503.013) * 1.0), 503.013, 503.013)))), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(503.013)), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(503.013, min(503.013, 503.013)))), float(_GLF_FUZZED(503.013)), float(_GLF_FUZZED(503.013)))), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
            continue;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       buf[virtual_gid] = uint(subgroupAllEqual(read_val));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true), false))), true, true))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(false, ! (! (false))) || ((_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))))))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
