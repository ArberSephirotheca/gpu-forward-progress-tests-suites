#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat4x2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bool _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint workgroup_base;
 int _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 bvec2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(_GLF_struct_0(mat4x3(1.0), true, mat2x3(1.0), mat2x3(1.0), 1.0), workgroup_size * workgroup_id, 1), _GLF_struct_6(uvec3(1u), _GLF_struct_2(mat4x2(1.0), mat4(1.0), mat3x2(1.0)), _GLF_struct_3(ivec4(1), mat4(1.0), mat3(1.0)), _GLF_struct_4(mat4x2(1.0), mat4x2(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-2.3, 308.079, -0.2).y)), float(1.0), bool(true))))), _GLF_struct_5(uvec3(1u), uvec2(1u)), mat3x2(1.0)), bvec2(true));
 uint virtual_gid = _GLF_struct_replacement_7._f0.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-85.04)), bool(false)))) + 0.0))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) << 0u)));
  }
}
