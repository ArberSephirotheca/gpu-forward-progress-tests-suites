#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-158.069)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, false, true, false))), ((bool(bvec4(false, false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), false, false))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), clamp(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), (gl_NumWorkGroups), (gl_NumWorkGroups))) | (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(54008u, 48430u, 28819u)) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(1u, 1u, 1u)), clamp(~ (uvec3(1u, 1u, 1u)), ~ (uvec3(1u, 1u, 1u)), ~ (uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec4(uvec3(1u, 1u, 1u), 1u)))))), gl_NumWorkGroups), _GLF_IDENTITY(min(min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))), (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), clamp((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(31351u, 195117u, 64611u)) : gl_NumWorkGroups))))), (gl_NumWorkGroups), (gl_NumWorkGroups)))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))))) / uvec3(1u, 1u, 1u))), gl_NumWorkGroups), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), (min(min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)), 0u))) / uvec3(1u, 1u, 1u)) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (_GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) | (uvec3(7u)))) | (uvec3(7u))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) ^ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (_GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) | (uvec3(7u)))) | (uvec3(7u))))))))) / uvec3(1u, 1u, 1u))), gl_NumWorkGroups), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)))), gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(6575.4678, mix(float(_GLF_IDENTITY(6575.4678, max(6575.4678, 6575.4678))), float(_GLF_FUZZED(_GLF_IDENTITY(float(45314), mix(float(_GLF_FUZZED(9.4)), float(float(45314)), bool(true))))), bool(false))))), float(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), bool(true)))), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), _GLF_IDENTITY((_GLF_IDENTITY((0), 0 ^ ((0)))), ((_GLF_IDENTITY((0), 0 ^ ((0))))) << 0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((0), (0), (0)))))), _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(int(_GLF_IDENTITY(int((0)), (int((0))) - 0)), 0 | (int(_GLF_IDENTITY(int((0)), (int((0))) - 0))))), (_GLF_IDENTITY((0), int(int((0))))) << 0))))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), 1)), (1) / 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (_GLF_IDENTITY(0 ^ (0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-69348) : 0)), 0)) | _GLF_IDENTITY((0 ^ (0)), max((0 ^ (0)), (0 ^ (0)))))) / 1))) | 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))), _GLF_IDENTITY(true, (true) && true)), true))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)))))))))), true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (_GLF_IDENTITY(false, (false) && true)))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-28662)), _GLF_FUZZED(781.806)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, false)))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(57432u, 81691u, 123164u), clamp(uvec3(57432u, 81691u, 123164u), uvec3(57432u, 81691u, 123164u), _GLF_IDENTITY(uvec3(57432u, 81691u, 123164u), _GLF_IDENTITY(uvec3(uvec4(uvec3(57432u, 81691u, 123164u), 0u)), (uvec3(uvec4(uvec3(57432u, 81691u, 123164u), 0u))) | (uvec3(uvec4(uvec3(57432u, 81691u, 123164u), 0u)))))))))), 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-4711.8375)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((false))))))) || (_GLF_DEAD(false))))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), min(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), true, true, true)), true, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (min((injectionSwitch)[1], (injectionSwitch)[1])) - 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(smoothstep(6122.9427, -47.62, 8776.5075)))), 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0), (mat4(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0), (mat4(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(mat3(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, tan(0.0), 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, abs(sin(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, abs(sin(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(1316.7524)), float(float(mat4(0.0, 0.0, abs(sin(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))), bool(true))), float(mat4(0.0, 0.0, abs(sin(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(4.0)), bool(false))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-546.595)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-546.595)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), min(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-546.595)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-546.595)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))) + vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-5013.5745)) : 1.0)))), 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-3.0 - vec4(-162.539, 856.021, 3331.9265, -7.8).p))), bool(false))), 1.0, 1.0), (mat4(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), min(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(6.2)), vec2(_GLF_FUZZED(490.632), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1])) - 0.0))), min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(vec2(mat2(1.0) * ((injectionSwitch))))))[1])))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-65.65), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-9.2)), bvec2(true, false)))))))[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), mix(float(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-1871.4635)), bool(false))))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (false ? _GLF_FUZZED(-0.5) : _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.2)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))), mix(vec4((vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[0], (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[1], _GLF_FUZZED(3.1), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.1)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0, abs(1.0))), (float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0, abs(1.0)))) / 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[3]), vec4(_GLF_FUZZED(-17.15), _GLF_FUZZED(7.9), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-80.51), (_GLF_FUZZED(-80.51)) - sqrt(0.0))), bool(false))), determinant(mat2(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[2], _GLF_FUZZED(0.9)), bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, false)))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 1.0), clamp(vec4(0.0, 1.0, 0.0, 1.0), vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 0.0, 1.0)))))))), min(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6028.7952) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(34.12)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))), mix(vec4((vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[0], (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[1], _GLF_FUZZED(3.1), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[3]), vec4(_GLF_FUZZED(-17.15), _GLF_FUZZED(7.9), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[2], _GLF_FUZZED(0.9)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), vec4(0.0, 1.0, 0.0, 1.0)))), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))))), tan(0.0), 0.0, 1.0, 0.0, 0.0))), mix(vec4((vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[0], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[1], _GLF_FUZZED(3.1), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[3]), vec4(_GLF_FUZZED(-17.15), _GLF_FUZZED(7.9), (vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.51)), bool(false))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))[2], _GLF_FUZZED(0.9)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), vec4(0.0, 1.0, 0.0, 1.0)))))))), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(4.0), clamp(_GLF_FUZZED(4.0), _GLF_FUZZED(4.0), _GLF_IDENTITY(_GLF_FUZZED(4.0), clamp(_GLF_FUZZED(4.0), _GLF_FUZZED(4.0), _GLF_IDENTITY(_GLF_FUZZED(4.0), 0.0 + (_GLF_FUZZED(4.0)))))))), bool(false)))) + 0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (false)), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true)), false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8359.4153, 1411.1956)) : injectionSwitch)))[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), _GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y) + _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), bool(bvec4(true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y) + _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), true, true, false))))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.4, min(-1.4, -1.4))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(27.61), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(894.123)), bvec2(true, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + _GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(trunc(injectionSwitch))))[0], _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)))))), bvec2(true, false))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + _GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(366.519) : (injectionSwitch)[0])), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)))))), bvec2(true, false))).y), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + _GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)))))), bvec2(true, false))).y), false), false)))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + _GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.5, (_GLF_IDENTITY(-3.5, min(-3.5, -3.5))) / 1.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)))))), bvec2(true, false))).y), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + _GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-3.5)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)))))), bvec2(true, false))).y), false), false))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(false))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(967.958)), bool(false))))), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(clamp(3.1, 66.83, 880.973)))), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.5) : 1.0)), 0.0, 0.0, 1.0)))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8726.9460))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), clamp(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0))))))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8726.9460))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), clamp(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0))))))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8726.9460))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), clamp(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0))))))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8726.9460))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), clamp(vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0)), vec2(mat2x4(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0))))))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), false))))))), true), false, false)))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(505.330) : injectionSwitch.y)), tan(0.0)), vec2(mat3(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(505.330) : injectionSwitch.y)), tan(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, cos(0.0), 1.0, 1.0)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(505.330) : injectionSwitch.y)), tan(0.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(505.330) : injectionSwitch.y)), tan(0.0))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-749.541), _GLF_FUZZED(-5297.5154)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) + 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) + 0u), 0u ^ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) + 0u)))) * 1u)))) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, (0u) | 0u) ^ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val))))))) * _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicCompSwap(virtual_gid, (++ workgroup_size), uaddCarry(workgroup_id, subgroup_size, read_val))) : 1u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) - 0u), (_GLF_IDENTITY(read_val, (read_val) - 0u)) | (_GLF_IDENTITY(read_val, (read_val) - 0u)))))), ~ (~ (~ (_GLF_IDENTITY(read_val, (read_val) - 0u)))))))) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)), 0u | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))))))))) * 1u)), ((~ ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) - 0u), (_GLF_IDENTITY(read_val, (read_val) - 0u)) | (_GLF_IDENTITY(read_val, (read_val) - 0u)))))), ~ (~ (~ (_GLF_IDENTITY(read_val, (read_val) - 0u)))))))) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)), 0u | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))))))))) * 1u))) >> 0u))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.6) : 0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.6) : 0.0, (true ? false ? _GLF_FUZZED(-5.6) : 0.0 : _GLF_FUZZED(1315.4152))), (false ? _GLF_FUZZED(249.848) : false ? _GLF_FUZZED(-5.6) : 0.0)), false ? _GLF_FUZZED(-5.6) : 0.0)))), injectionSwitch.x))))) >> 0u);
}
