#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 bool _f3;
 int _f4;
 uvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
} ;

struct _GLF_struct_17 {
 uint _f0;
 uvec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 float _f1;
 uvec3 _f2;
 uvec4 _f3;
 uint _f4;
 bvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_15 {
 uint _f0;
 float _f1;
 mat3x2 _f2;
 bvec2 _f3;
 vec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 bool _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 uint num_workgroup;
 uint _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_13 {
 uint read_val;
 float _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat2x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 uvec2 _f1;
 bool _f2;
 vec2 _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 ivec3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint _f1;
 int _f2;
 vec4 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 vec2 _f1;
 mat2x4 _f2;
 bool _f3;
 bool _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 float _f1;
 vec4 _f2;
 mat4x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 mat2x4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_20(_GLF_struct_14(ivec4(1)), _GLF_struct_15(1u, 1.0, mat3x2(1.0), bvec2(true), vec2(1.0), mat2x4(1.0)), _GLF_struct_16(uvec3(1u), 1.0, uvec3(1u), uvec4(1u), 1u, bvec4(true), mat4x2(1.0)), _GLF_struct_17(1u, uvec4(1u), mat3(1.0)), true, _GLF_struct_18(bvec4(true)), _GLF_struct_19(mat2x3(1.0), mat3x4(1.0), mat4x2(1.0), true, 1, uvec3(1u), mat2(1.0))), gl_NumWorkGroups.x, 1u, true, mat4(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_0(mat3(1.0)), _GLF_struct_4(_GLF_struct_1(true, 1.0, vec4(1.0), mat4x2(1.0), true), _GLF_struct_2(true, vec2(1.0), mat2x4(1.0), true, true, mat2x4(1.0)), _GLF_struct_3(ivec4(1), 1u, 1, vec4(1.0)), mat2x4(1.0), mat2(1.0)), _GLF_struct_7(bvec3(true), ivec3(1), _GLF_struct_5(ivec4(1), uvec2(1u), true, vec2(1.0)), _GLF_struct_6(mat2x4(1.0), mat2x4(1.0), ivec2(1))), workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_8.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(atomicLoad(write_val, 4, 64, 0), 1.0, _GLF_struct_10(_GLF_struct_9(mat3x4(1.0))), _GLF_struct_12(_GLF_struct_11(ivec2(1)), mat2x3(1.0)));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_13.read_val));
}
