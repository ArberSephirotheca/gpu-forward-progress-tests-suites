#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4x3 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint workgroup_size;
 uvec2 _f1;
 vec3 _f2;
 vec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.y = subgroup_id;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec3(true), gl_WorkGroupSize.x, uvec2(1u), vec3(1.0), vec4(1.0));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat4x3(1.0), gl_WorkGroupID.x);
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4x3(1.0), _GLF_struct_replacement_0.workgroup_size * _GLF_struct_replacement_1.workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_2.workgroup_base + GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.y * subgroup_size + GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.z;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.x = read_val;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged3_0_1_8_1_1_11_2_1_17read_valsubgroup_idsubgroup_local_id.x));
}
