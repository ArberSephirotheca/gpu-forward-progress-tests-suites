#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))) && true), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))) || false)) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), false || (((false)))) || false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(7495.7004), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))[1]), vec2((_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))[0], _GLF_FUZZED((- 881.332))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3x2((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), vec2(mat3x2((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-9932.7577, -3.0)))))), 0.0, 0.0, 0.0, 0.0))))), (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * ((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((85.29 * -0.0), mix(float((85.29 * -0.0)), float(_GLF_FUZZED(-2502.4222)), bool(false))))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), true))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false)), (bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ! (! (_GLF_IDENTITY((bool(bool(false))) || false, ((bool(bool(false))) || false) && true))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.0), _GLF_IDENTITY(_GLF_FUZZED(-22.04), (_GLF_FUZZED(_GLF_IDENTITY(-22.04, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-22.04, float(mat2x3(-22.04, 0.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-42.05, -474.042, 2571.5749, -2956.3343)) : vec4(_GLF_IDENTITY(-22.04, float(mat2x3(-22.04, 0.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-8840.5106, -53.56, 2.2, -8774.9257, -226.472, -883.914)) : mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch.x)) < injectionSwitch.y)))), (mix(vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-22.04)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED((true ? _GLF_IDENTITY(4755.0599, mix(float(_GLF_FUZZED(-92.41)), float(4755.0599), bool(true))) : _GLF_IDENTITY(vec2(-44.49, 5040.5145), (false ? _GLF_FUZZED(atan(injectionSwitch)) : vec2(-44.49, 5040.5145))).r))), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0)), float(_GLF_FUZZED(-8606.9415)), bool(false))) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) * vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (false) || false), false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), bool(bvec2(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), bool(bvec2(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), true))), true && (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), bool(bvec2(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false), false))), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y) || false)), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158564u)), _GLF_FUZZED(-443.787)), bvec2(false, false))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158564u)), _GLF_FUZZED(-443.787)), bvec2(false, false))).x > injectionSwitch.y))))), true && (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158564u)), _GLF_FUZZED(-443.787)), bvec2(false, false))).x > injectionSwitch.y))))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158564u)), _GLF_FUZZED(-443.787)), bvec2(false, false))).x > injectionSwitch.y))))), true && (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158564u)), _GLF_FUZZED(-443.787)), bvec2(false, false))).x > injectionSwitch.y))))))), false, false, false)))))), (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, _GLF_IDENTITY(false, true && (false))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false)), vec2(vec4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false)), vec2(1.0, 1.0) * (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false)))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-0.3)), bvec2(false, false))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))) && true))))) && true)))), true, true, true))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)))), ~ (~ (gl_WorkGroupID))), (gl_WorkGroupID) >> uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)))) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(_GLF_IDENTITY(2u, 0u ^ (_GLF_IDENTITY(2u, (2u) ^ 0u))))), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((true ? uint(2u) : _GLF_FUZZED(num_workgroup)), uint(uvec4((true ? uint(2u) : _GLF_FUZZED(num_workgroup)), 1u, 0u, (1u | 0u))))))), uint(2u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | 0u), _GLF_FUZZED(num_workgroup))))))), uint(2u))))), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup)))), (clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))) >> 0u)))), uint(2u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec2(uint(0u), 0u)), (uint(uvec2(uint(0u), 0u))) | (uint(uvec2(uint(0u), 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u)))), clamp(_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) - (83564u & 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(uvec3(uint(0u), 1u, 0u))))))))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(uvec2((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 1u))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) - 0u) - 0u)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)))) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(_GLF_IDENTITY(2u, 0u ^ (_GLF_IDENTITY(2u, (2u) ^ 0u))))), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((true ? uint(2u) : _GLF_FUZZED(num_workgroup)), uint(uvec4((true ? uint(2u) : _GLF_FUZZED(num_workgroup)), 1u, 0u, (1u | 0u))))))), uint(2u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | 0u), _GLF_FUZZED(num_workgroup))))))), uint(2u))))), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup)))), (clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))) >> 0u)))), uint(2u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec2(uint(0u), 0u)), (uint(uvec2(uint(0u), 0u))) | (uint(uvec2(uint(0u), 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u)))), clamp(_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) - (83564u & 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(uvec3(uint(0u), 1u, 0u))))))))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(uvec2((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 1u))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) - 0u) - 0u)))), 0u, 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), clamp(~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), ~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), ~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))))))))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u)))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), (true ? _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) : _GLF_FUZZED(168555u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) >> 0u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), clamp(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u), clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uint(uint(2u))))))))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((~ (0u)) >> 0u, ((~ (0u)) >> 0u) >> 0u))) >> 0u))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), uint(uvec3(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u & 58132u))))))) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), 1u * (uint(2u))))), uint(2u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, uint(uint(0u)))))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, uint(uint(0u)))))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) ^ (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 1u, 1u)))))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, uint(uint(0u)))))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, _GLF_IDENTITY(2u, max(2u, 2u)), 2u))), uint(2u)))))) - 0u)) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, uint(uint(0u)))))) >> 0u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_FUZZED(num_workgroup))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u)))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (uint(uint(0u)))))))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? uint(2u) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) + 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(subgroup_size))) + 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) : _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY((_GLF_FUZZED(num_workgroup)), 0u ^ ((_GLF_FUZZED(num_workgroup)))) << 0u))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - _GLF_IDENTITY(0u, min(0u, 0u))), uint(2u))))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u, (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u, uint(uint((uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) + 0u)), _GLF_IDENTITY(0u, uint(uint(0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))).x, _GLF_IDENTITY(max(gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupID.x, gl_WorkGroupID.x), max(max(gl_WorkGroupID.x, gl_WorkGroupID.x), max(gl_WorkGroupID.x, gl_WorkGroupID.x))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x), (true ? max(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x) : _GLF_FUZZED(subgroup_local_id)))) | 0u), max(max(gl_WorkGroupID.x, gl_WorkGroupID.x), max(gl_WorkGroupID.x, gl_WorkGroupID.x)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(777.379, 8294.1068, 878.731).g)), bool(false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(987.789), _GLF_FUZZED(-46.90)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), dot(vec2(1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), float(_GLF_FUZZED(7204.3443)), bool(false)))), (injectionSwitch.y) / 1.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_size)) : injectionSwitch)).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0)))) / sqrt(vec2(1.0, 1.0))).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y)), (injectionSwitch.y) / 1.0))))) + 0.0)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))), _GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(false || (! (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), clamp(_GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), (true ? _GLF_IDENTITY(clamp((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), (clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5150.1268), _GLF_FUZZED(float(-38404))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0])))) / 1.0) : _GLF_FUZZED(70.94))), clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0))))))), float(vec3(clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), 1.0, 1.0)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(2110.9896)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)))), false, false)), false), bvec2(bvec3(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0]))), (_GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(-0.1), float(vec3(_GLF_FUZZED(-0.1), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : (injectionSwitch)[0]))), mix(float(_GLF_FUZZED(-2959.1620)), float(clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)))[0], (false ? _GLF_FUZZED(-0.1) : (injectionSwitch)[0])))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), ! (! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))) && true))))), true && ((! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), ! (! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))) && true))))))))))))) * 1.0)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(2110.9896)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)))), false, false)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), bool(bvec2(! (! (false)), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), bool(bvec2(! (! (false)), true))))))), ! (! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), bool(bvec2(! (! (false)), true)))))))))))))), false))), bvec2(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true, true)), false || (bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true, true))))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED(vec4(-0.8, -71.11, 0.5, -1.9).b)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(764.682)), vec2(_GLF_FUZZED(-3.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) + 0.0)), ((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(764.682)), vec2(_GLF_FUZZED(-3.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) + 0.0))) - 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)))), mix(float(_GLF_FUZZED(-5.7)), float(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED(vec4(-0.8, -71.11, 0.5, -1.9).b)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(764.682)), vec2(_GLF_FUZZED(-3.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) + 0.0)), ((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(764.682)), vec2(_GLF_FUZZED(-3.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) + 0.0))) - 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0))))), bool(true))), max(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0), sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.0)), bool(false))))), (injectionSwitch.y) + 0.0)) / 1.0)))) / sqrt(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x), float(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec3(0.3, -0.9, -2.3).b)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) / 1.0)))), mix(float(_GLF_FUZZED((- -0.3))), float(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) / 1.0)))), mix(float(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) / 1.0))))), float(_GLF_FUZZED(-1.1)), bool(false)))), bool(true)))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), false, false, false))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))) && true)), false, false)), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)))), false)), false, _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) || false))))) || (bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false)))), false)), false, _GLF_IDENTITY(false, (false) && true))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)))), false)), false, _GLF_IDENTITY(false, (false) && true))), false)), true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && true))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && true))))), false, true)), false))))))), true && (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), false)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false || (true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), true, false), false)), false)))))))))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, (false) || false), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), false, false)), false), false)), true))))), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && true)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), bvec3(bvec4(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), false))))), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), bvec3(bvec4(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), false))))), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))))))))))))))), bool(bvec2((_GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), bvec3(bvec4(bvec3(bvec2(bvec2(bool(bvec3(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)), false), false))))), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))))))))))))))), true)))))))))))), true, true), _GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false))), false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.y) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.y) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.y) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(198403u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((4133.6350 + 8001.7065))), vec2(_GLF_FUZZED(5.9), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / 1.0)))))).y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false))))), true))))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), true))))), true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), true))))), true))), false))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false))))))))), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), true)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false)), true)))))))))), true))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.5)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))), (false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))), (false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))), (false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))), (false || _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))) && _GLF_IDENTITY(true, false || (true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))) && true) && true))))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), true && (bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)))), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false)))))), (bool(bool(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))))))) && _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(bool(! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), true && (bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)))), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))), false || (_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))), false || (_GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true)), false, false, false))))), true, true)))))))))) && _GLF_IDENTITY(true, ! (! (true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 atomicStore(write_val, uint(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (64))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || false)), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || false))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || false)), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))))))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), true, false)))))), true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + 0.0), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + 0.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), (clamp(vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + 0.0), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-336.191) : 0.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) * vec2(1.0, 1.0))))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(vec2(1.0, 1.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acosh(-3750.6224)) : 0.0)), 0.0, 1.0)), tan(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -9096.0842))), bool(false))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-10.92), _GLF_FUZZED(7.2)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(37.01), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.8)), bvec2(true, false))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(37.01), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.8)), bvec2(true, false)))) - tan(sin(vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(476.404, -3902.5308)) : mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(1.5), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(476.404, -3902.5308)) : mat2(1.0) * (injectionSwitch))))[1]), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(476.404, -3902.5308)) : mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(8959.9092)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 0.0 + (length(normalize(vec2(1.0, 1.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) + (uint(subgroupAllEqual(read_val)))), 0u | (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | 0u))), 0u + (uint(subgroupAllEqual(read_val)))))))), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))), ~ (~ ((uint(subgroupAllEqual(read_val)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(read_val) : _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u)))) >> 0u), 0u + (uint(subgroupAllEqual(read_val)))))), (uint(subgroupAllEqual(read_val))) / 1u)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), min(0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
