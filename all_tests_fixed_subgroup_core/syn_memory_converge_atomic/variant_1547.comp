#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (true && (bool(! (false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false))))))) || false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), true)))), false, true, true)))))), true, false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(4626u, 131673u, 197792u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y)), false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-643.530, -6.2) / 493.424)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-7.0)), _GLF_IDENTITY(vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), (true ? vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]) : _GLF_FUZZED(vec3(4084.3617, -6.3, -9.8)))), bvec3(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))))))) && true)))))), false || ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((587.240 / 3032.9445))), bool(false)))))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.8), (vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((587.240 / 3032.9445))), bool(false)))))[1], _GLF_FUZZED(-7.0)), vec3((vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + log(1.0))))[0], _GLF_FUZZED(4941.2608), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))), false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) || false))))) && (false))))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, abs(0.0), 0.0))))) < injectionSwitch.y) && true))) && (false)), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true && (bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), (bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2069.9872)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))) && true)))) && true))), false, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-572.822, -9.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-572.822, -9.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-572.822, -9.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) || false))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), clamp(~ (workgroup_id), ~ (workgroup_id), ~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id)))) + 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(! (! (_GLF_IDENTITY(false, true && (false)))), true, true)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), true, false))), false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-435.047, -5.5)) : injectionSwitch)).x, (false ? _GLF_FUZZED(-2.3) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-2.2 + 3.5)), _GLF_FUZZED(574.827)), bvec2(false, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))) | (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 1u)), (true ? uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 1u)) : _GLF_FUZZED(workgroup_base)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), min(_GLF_IDENTITY(~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), (~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))) / 1u), ~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.3) : 0.0)), injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), clamp((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), uint(uint((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x))))))))))), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))))) + 0u), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.3) : 0.0)), injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), clamp((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))), uint(uint((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x))))))))))), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 1.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.x)))))))))) + 0u)) ^ 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(60.93)), bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | (subgroup_size)), subgroup_size))) >> 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-40.19) : 0.0)), (0.0) - 0.0), injectionSwitch.x)))))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), uint(uvec3(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1u, 1u)))))) + 0u), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), mix(float(_GLF_FUZZED(21.51)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), mix(float(_GLF_FUZZED(21.51)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), mix(float(_GLF_FUZZED(21.51)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 0u, uint(uint((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), mix(float(_GLF_FUZZED(21.51)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 0u)))) ^ 0u), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), mix(float(_GLF_FUZZED(21.51)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 0u)))) - (107605u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) | 0u), max(_GLF_IDENTITY(uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) | 0u), _GLF_IDENTITY(uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) | 0u)))), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), clamp((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), _GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), min((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))) + 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u) | (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.0 + -4.7))), bvec2(true, false))), injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), max((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), clamp(~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), max((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), ~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), max((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), ~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), max((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))))))), ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))) << 0u))))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), (1u ^ 0u) * ((subgroup_size))), (subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u | ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, max(_GLF_IDENTITY((0.0) - 0.0, ((0.0) - 0.0) - 0.0), (0.0) - 0.0))), injectionSwitch.x))))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u | ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u | ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), uint(uvec4(uint(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u | ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), 1u, 1u, 0u)))))) | 0u)), ~ (~ ((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), clamp(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))) << 0u), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), 0u | ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))) | 0u)))))) >> 0u)))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 0u ^ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))) + 0u, ((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 0u ^ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))) + 0u) ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, (false ? _GLF_FUZZED(6070.8284) : _GLF_IDENTITY((0.0) - 0.0, min((0.0) - 0.0, (0.0) - 0.0))))), injectionSwitch.x)))))), 1u * ((_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, (false ? _GLF_FUZZED(6070.8284) : _GLF_IDENTITY((0.0) - 0.0, min((0.0) - 0.0, (0.0) - 0.0))))), injectionSwitch.x)))))))) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-964.919), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.7)), bvec2(true, false))).x)), (_GLF_IDENTITY((subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u ^ ((subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))) + 0u))))))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false, false)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false || (_GLF_DEAD(false))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
