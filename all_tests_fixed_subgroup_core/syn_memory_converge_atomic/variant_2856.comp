#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) || false))) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)) && true))), false || (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)))))))))) && true))) && _GLF_IDENTITY(true, (true) && true))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || ((false))))) || false)) && true))), false || (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(477.576), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-3.9) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)) || (false))) || false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(189.941)), bool(false)))) + 0.0))) || (false))) || false))))))) && true))) && true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || (false))), true && ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)) && true))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)) || false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))))))) && true))) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) && true))) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))), false || (! (((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))) || false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, true, true))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false))) || false)))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || (false)))))) && true)) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false))) || false))))))))) && true))) && true))), false, true)))))) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))), injectionSwitch[1])).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)])).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(9.5))), injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), true)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), true))), true)), true)))), true)), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, cos(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))) || false))), (bool(bvec3(false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) && true)))), ! _GLF_IDENTITY((! (bool(bvec3(false, false, true)))), _GLF_IDENTITY(true, (true) || false) && ((! (bool(bvec3(false, false, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((bvec3(true, true, true) , uvec3(106838u, 179712u, 133961u))) : gl_WorkGroupSize)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u)), _GLF_IDENTITY(min(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), ((0u | 0u) & uvec2(180475u, 30497u).y)))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u)), uvec3(uvec3(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))))))), uvec3(uvec4(min(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))), 1u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u))), (uvec3(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u)))) | uvec3(0u, 0u, 0u))) | (uvec3(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)), 1u)))))))), (0u ^ 0u)))))))).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id : _GLF_FUZZED(write_val))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id)), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id : _GLF_FUZZED(write_val))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id)), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id : _GLF_FUZZED(write_val))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id)), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) * 1u) * workgroup_id)))))), ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), max(_GLF_IDENTITY(~ (workgroup_size * workgroup_id), ~ (~ (~ (workgroup_size * workgroup_id)))), _GLF_IDENTITY(~ (workgroup_size * workgroup_id), clamp(~ (workgroup_size * workgroup_id), _GLF_IDENTITY(~ (workgroup_size * workgroup_id), (~ (workgroup_size * workgroup_id)) | (~ (workgroup_size * workgroup_id))), ~ (workgroup_size * workgroup_id)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) : _GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) : _GLF_FUZZED(write_val), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) : _GLF_FUZZED(write_val))))) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) : _GLF_FUZZED(write_val))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id), 0u | ((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(48445u) : workgroup_size * workgroup_id)))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), workgroup_size * workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (workgroup_size * workgroup_id)))) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) | 0u)), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) | _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), ((workgroup_size * workgroup_id)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((true ? workgroup_size * workgroup_id : _GLF_FUZZED(write_val)), ~ (_GLF_IDENTITY(~ ((true ? workgroup_size * workgroup_id : _GLF_FUZZED(write_val))), 0u | (~ ((true ? workgroup_size * workgroup_id : _GLF_FUZZED(write_val)))))))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (workgroup_size * workgroup_id)))) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | 0u)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec4((workgroup_size * workgroup_id), 0u, 0u, 0u)))) | 0u), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec4((workgroup_size * workgroup_id), 0u, 0u, 0u)))) | 0u)))))))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(0u, 0u))), (uint(_GLF_IDENTITY(0u, max(0u, 0u)))) | 0u), uint(0u))) ^ 0u) ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_size))) : workgroup_base)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), uint(uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(sin(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-18767)))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_FUZZED(92.79)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true)))))), (4) ^ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(0), int(0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(-69740) : (_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(0), int(0)))))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(! (! (_GLF_DEAD(false))))), ! (! (bool(bool(! (! (_GLF_DEAD(false)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec2((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), true))), true, true, false)))) || false))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec2((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), true))), true, true, false)))) || false))))), false, true, true))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(false)))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), false || ((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), false || ((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))), true, true, false)))))))), ! (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))), bool(bool(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))))))), false || ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))) && true), true, true)), true && (bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false)))))))), ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))))))) && true), true, true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))), true, true, false)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(748.595), _GLF_FUZZED(-186.013)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && _GLF_IDENTITY(true, ! (! (true)))), false, true, false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), false, true, false))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), true, false)), (bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), true, false))) || false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-97.43)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))))) : _GLF_FUZZED(-6.6))) > injectionSwitch.y)), false, true, false))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.38)), vec2(_GLF_FUZZED(9.7), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.38)), vec2(_GLF_FUZZED(9.7), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.38)), vec2(_GLF_FUZZED(9.7), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))) || false)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(170.674)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), false, true, false))))), true, true))), false)))), false || (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))))) && true), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))) && true), ! (! (! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), ! (! (! (false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(5.4, -6.4, -7.4, 13.55, -279.884, 83.93, 41.50, -4.2)))))).y)))))), true, false)))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true, false)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))), false, false)), ! (! (bool(bvec3((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))), false, false)))))))), false, true, true))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || ((! (! (false)))))))))))))) || false)) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
