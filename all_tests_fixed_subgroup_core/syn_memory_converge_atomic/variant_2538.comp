#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 uvec4 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val;
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.xy = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = subgroup_id;
uint subgroup_size = 16;
 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.xy.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.z = num_workgroup;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.x = GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = workgroup_size;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.w = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.xy.y = workgroup_id;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.w * GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.xy.y;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.xy.x + GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_14num_workgroupsubgroup_local_idworkgroup_baseworkgroup_size.y;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.w = read_val;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged3_0_2_50_2_1_13_3_1_8GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnum_workgroupread_val.w));
}
