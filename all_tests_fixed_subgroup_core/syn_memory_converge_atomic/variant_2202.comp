#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2 _f0;
 uint _f1;
 bvec3 _f2;
 bvec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint read_val;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-1.8), float(mat2x3(true ? injectionSwitch.x : _GLF_FUZZED(-1.8), 0.0, exp(0.0), tan(0.0), 1.0, 1.0))))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]) + 0.0, float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1]))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec3(-4141.3710, -651.746, 3.5), vec3(-4.0, -732.218, 9.9))))), min(_GLF_IDENTITY((injectionSwitch[1]), ((injectionSwitch[1])) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0, (injectionSwitch[1]) + 0.0)), 1.0, 0.0, 0.0))))))) * _GLF_IDENTITY(abs(vec2(1.0, 1.0)), min(abs(vec2(1.0, 1.0)), abs(vec2(1.0, 1.0))))).y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(266.483) : injectionSwitch.y, mix(float(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(266.483) : injectionSwitch.y), float(_GLF_FUZZED(-6450.4221)), bool(false)))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8743.4478))) > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8743.4478), mix(float(_GLF_FUZZED(-211.391)), float(_GLF_FUZZED(8743.4478)), bool(true))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8743.4478), mix(float(_GLF_FUZZED((-8320.6270))), float(_GLF_FUZZED(8743.4478)), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-484.619))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8743.4478), mix(float(_GLF_FUZZED(-211.391)), float(_GLF_FUZZED(8743.4478)), bool(true))))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8743.4478))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-484.619))))), (((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8743.4478))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-484.619)))))) && _GLF_IDENTITY(true, ! (! (true)))) && true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false), true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8654.3575, -6.3)))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8654.3575, -6.3)))), injectionSwitch, injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8654.3575, -6.3)))), injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8654.3575, -6.3)))), injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8654.3575, -6.3)))), injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false), true)))))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.8, -2.4)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))).y))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false), false))))), false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), false || ((bool(bvec2(_GLF_DEAD(false), false))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), false, false, true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat3(injectionSwitch.y, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, true)))) && true), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))) || false)))), false, true)))) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), (! (! (false))) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), false, true), false)))))))))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)), (! (! (false))) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true)))))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) && _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(subgroup_local_id))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), clamp(_GLF_IDENTITY(min(sin(0.0), sin(0.0)), (min(sin(0.0), sin(0.0))) - 0.0), min(sin(0.0), sin(0.0)), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), (min(sin(0.0), sin(0.0))) - 0.0)))) + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-23.35) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))))), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, cos(0.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, 1.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat4x2(float(mat3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, 1.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-60.61) : injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / exp(0.0)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false)) ? 1.0 : _GLF_FUZZED(cosh(-7.9)), _GLF_IDENTITY(float(vec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false)) ? 1.0 : _GLF_FUZZED(cosh(-7.9)), 0.0, 1.0)), 0.0 + (float(vec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false)) ? 1.0 : _GLF_FUZZED(cosh(-7.9)), 0.0, 1.0)))))))))) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, bool(bool(true))), true, false))), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(7579.8014)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false), false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED(vec2(8.5, 3817.5930).r), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(5.9, -160.952)))).x > injectionSwitch.y)))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), false, false, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-12.80), _GLF_FUZZED(-19.67)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(113.841)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))), false, true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) || false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7112.5740)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) >> (-5582 & 0))], mix(float(_GLF_FUZZED(199.430)), float(injectionSwitch[_GLF_IDENTITY(1, (1) >> (-5582 & 0))]), bool(true))))).y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_DEAD(false)) && true, true, false, true)))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_DEAD(false)) && true, true, false, true))))) && true), true), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))))), true, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))))))), true))))), false, true, true)))) && true)), false))), min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.0), (_GLF_FUZZED(3.0)) * round(length(normalize(vec2(1.0, 1.0))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[_GLF_IDENTITY(1, (1) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])), (false ? _GLF_FUZZED(vec2(-360.470, -1.7)) : (vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))) * mat2(1.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-69.06, -6342.0469)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])) * mat2(1.0)), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)), vec2(0.0, 0.0) + (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(519.976, -945.788)) : injectionSwitch)) : _GLF_FUZZED(vec2(-90.84, 52.47)))))[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)) : _GLF_FUZZED(vec2(-1.0, -723.717))))))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])), mix(vec2(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[0], _GLF_FUZZED(vec4(-660.031, -3.8, 357.665, -1.4).p)), vec2(_GLF_FUZZED(-3056.4847), _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1], (true ? ((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1] : _GLF_FUZZED(3.6)))), bvec2(false, true))), (true ? _GLF_IDENTITY((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])), mix(vec2(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[0], _GLF_FUZZED(vec4(-660.031, -3.8, 357.665, -1.4).p)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3056.4847, (_GLF_IDENTITY(-3056.4847, (-3056.4847) / 1.0)) / 1.0)), _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1], (true ? ((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1] : _GLF_FUZZED(3.6)))), bvec2(false, true))) : _GLF_FUZZED(vec2(153.189, -9.7)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0] : _GLF_FUZZED(0.8))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], mix(float(_GLF_FUZZED(5.3)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0]), bool(true))))), _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)))), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))))).y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), vec2(mat2x3(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), _GLF_IDENTITY(vec2(vec2(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)))), mat2(1.0) * (vec2(vec2(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016))))))), 1.0, 0.0, 1.0, abs(1.0)))), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.0), (_GLF_FUZZED(3.0)) * round(length(normalize(vec2(1.0, 1.0))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[_GLF_IDENTITY(1, (1) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])), (false ? _GLF_FUZZED(vec2(-360.470, -1.7)) : (vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-69.06, -6342.0469)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])) * mat2(1.0)), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)) + vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_IDENTITY(_GLF_FUZZED(3.6), clamp(_GLF_FUZZED(3.6), _GLF_IDENTITY(_GLF_FUZZED(3.6), 1.0 * (_GLF_FUZZED(3.6))), _GLF_FUZZED(3.6)))), bool(false))), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)), vec2(0.0, 0.0) + (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(519.976, -945.788)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(735.199, -687.728)) : injectionSwitch)))))) : _GLF_FUZZED(vec2(-90.84, 52.47)))))[0])), _GLF_FUZZED(-5037.1016)), bvec2(true, false)) : _GLF_FUZZED(vec2(-1.0, -723.717))))))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])), mix(vec2(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[0], _GLF_FUZZED(vec4(-660.031, -3.8, 357.665, -1.4).p)), vec2(_GLF_FUZZED(-3056.4847), _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1], (true ? ((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1] : _GLF_FUZZED(3.6)))), bvec2(false, true))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))), mix(vec2(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[0], _GLF_FUZZED(vec4(-660.031, -3.8, 357.665, -1.4).p)), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3056.4847, (_GLF_IDENTITY(-3056.4847, (-3056.4847) / 1.0)) / 1.0)), _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1], (true ? ((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1] : _GLF_FUZZED(3.6)))), vec2(mat4x2(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3056.4847, (_GLF_IDENTITY(-3056.4847, (-3056.4847) / 1.0)) / 1.0)), _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1], (true ? ((vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1])))[1] : _GLF_FUZZED(3.6)))), 1.0, sqrt(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, cos(0.0), 1.0, 0.0))), bvec2(false, true))) : _GLF_FUZZED(vec2(153.189, -9.7)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0] : _GLF_FUZZED(0.8))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], mix(float(_GLF_FUZZED(5.3)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0]), bool(true))))), _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)))), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))), 0 | ((_GLF_IDENTITY(1, (1) >> 0)) | (0 >> _GLF_IDENTITY(int(1), int(1)))))) << 0))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-5037.1016), max(_GLF_FUZZED(-5037.1016), _GLF_FUZZED(-5037.1016)))), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5037.1016)), bvec2(true, false))), min(injectionSwitch, injectionSwitch)))))).y))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false))))) || false)) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)))) | (min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, -5.4) , clamp(workgroup_id, subgroup_id, write_val))), (true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, -5.4) , clamp(workgroup_id, subgroup_id, write_val)))) ^ 0u))), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, -5.4) , clamp(workgroup_id, subgroup_id, write_val))))), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, _GLF_IDENTITY(-5.4, (-5.4) / 1.0)) , clamp(workgroup_id, subgroup_id, write_val))))), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, -5.4) , clamp(workgroup_id, subgroup_id, write_val))))), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED((mat3x2(-4.5, 5.8, 1061.3470, -8.2, 618.978, -5.4) , clamp(workgroup_id, subgroup_id, write_val))))), clamp(uint(virtual_gid), uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat2(1.0), 1u, bvec3(true), bvec3(true), mat3x4(1.0))), atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(0, min(0, 0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-16382)), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(1.4) : (injectionSwitch)[1]))), bvec2(true, true))), 1.0, 0.0, 0.0, sin(0.0), determinant(mat4(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, sin(0.0), 0.0))))), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0))) * mat2(1.0))))))))), mix(vec2(_GLF_FUZZED(2.0), _GLF_IDENTITY((_GLF_FUZZED(max(injectionSwitch, injectionSwitch))), vec2(1.0, 1.0) * ((_GLF_FUZZED(max(injectionSwitch, injectionSwitch)))))[1]), vec2(_GLF_IDENTITY((_GLF_FUZZED(max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))], mix(float(_GLF_IDENTITY((_GLF_FUZZED(max(injectionSwitch, injectionSwitch)))[0], float(vec4((_GLF_FUZZED(max(injectionSwitch, injectionSwitch)))[0], 0.0, 0.0, 0.0)))), float(_GLF_FUZZED((- 207.216))), bool(_GLF_IDENTITY(false, true && (false))))), _GLF_FUZZED(1.6)), bvec2(true, false))))), injectionSwitch)).y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_2.read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
