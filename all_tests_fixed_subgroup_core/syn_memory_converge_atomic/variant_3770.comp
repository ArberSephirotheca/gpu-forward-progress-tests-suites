#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
 bvec3 _f1;
 mat3 _f2;
 vec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat4 _f1;
 uvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat3x4 _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 uint read_val;
 _GLF_struct_2 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 bvec3 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
uint subgroup_size = 16;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x;
  }
 GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.w = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z;
  }
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.w;
 do
  {
   GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.z = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y;
 uint virtual_gid = GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.y;
 do
  {
   atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(bvec4(true), mat3x4(1.0)), bvec2(true)), _GLF_struct_6(atomicLoad(write_val, 4, 64, 0), _GLF_struct_2(bvec3(true), mat3x4(1.0), 1.0), bvec4(true), mat3x2(1.0), bvec3(true), _GLF_struct_3(bvec4(true), mat4(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_4(mat4(1.0)), _GLF_struct_5(1.0, bvec3(true), mat3(1.0), vec4(1.0), bvec2(true))), _GLF_struct_8(_GLF_struct_7(uvec4(1u)), ivec4(1)));
 GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.x = _GLF_struct_replacement_9._f1.read_val;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_8_1_1_17_2_1_14_3_1_12read_valsubgroup_local_idworkgroup_baseworkgroup_id.x));
}
