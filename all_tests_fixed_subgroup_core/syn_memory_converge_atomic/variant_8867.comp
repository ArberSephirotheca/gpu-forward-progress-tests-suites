#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))).y))), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false || (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0)))) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))))))))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(188.194) : injectionSwitch.y))))), float(_GLF_FUZZED(9.5)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && true))), false))), true))))))), (bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && true))), false))), true))))))), (bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(720.038)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.3), clamp(_GLF_FUZZED(8.3), _GLF_IDENTITY(_GLF_FUZZED(8.3), (false ? _GLF_FUZZED(-84.44) : _GLF_FUZZED(8.3))), _GLF_FUZZED(8.3)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[0])))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), clamp(_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), _GLF_FUZZED(uvec3(176850u, _GLF_IDENTITY(51001u, (51001u) >> 0u), 178563u)), _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))), gl_NumWorkGroups)) | _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), max((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), min(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), min(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), min(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))))), (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), clamp(_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), _GLF_FUZZED(uvec3(176850u, _GLF_IDENTITY(51001u, (51001u) >> 0u), 178563u)), _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))), gl_NumWorkGroups)) | _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), max((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), min(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))))) << (uvec3(78064u, _GLF_IDENTITY(124175u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (124175u)), 4519u) & uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (_GLF_IDENTITY(~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(uvec3(uvec3((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), (uvec3(uvec3(uvec3((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) * uvec3(1u, 1u, 1u)))))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(176850u, 51001u, 178563u), uvec3(uvec3(uvec3(176850u, 51001u, 178563u))))))))), gl_NumWorkGroups), ~ (~ (max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups)))), (max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, 1u)), (true ? ~ _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), clamp(~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), (gl_NumWorkGroups)))))), _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))))))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), gl_NumWorkGroups), (max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), ~ (~ (_GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(176850u, 0u | (176850u)), 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)), (false ? _GLF_FUZZED(uvec3(93574u, 184274u, 156397u)) : true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), ~ (~ (_GLF_IDENTITY(uvec3(5u), uvec3(5u))))))))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) >> 0u)), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - 0u)) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) << (uvec3(0u, 0u, 0u) & uvec3(174688u, 25457u, 194694u)))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), max(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), _GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u), (1u | 1u) * (max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u), (1u | 1u) * (max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))))), 0u)) - uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(~ (gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), uvec3(0u, 0u, 0u) | ((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true, (true) || false) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))), (false ? _GLF_FUZZED(uvec3(173012u, 5262u, 194696u)) : max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true, (true) || false) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))))))))), gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), ~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? _GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), _GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec4(~ (gl_NumWorkGroups), 0u)), ~ (~ (uvec3(uvec4(~ (gl_NumWorkGroups), 0u)))))), ~ (gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (gl_NumWorkGroups))), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))), gl_NumWorkGroups), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((_GLF_IDENTITY(true, ! (! (true))) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))), ~ (~ (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED((uvec3(139736u, 153496u, 128912u))))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(72251u, 22304u, 29530u)))))))) : _GLF_FUZZED(uvec3(176850u, 51001u, _GLF_IDENTITY(178563u, (178563u) / 1u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(176850u, (176850u) ^ 0u), 51001u, 178563u))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))), ~ (~ ((true ? _GLF_IDENTITY(~ (gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), clamp(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u))))))))))), gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), ~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), true && ((true))), true))))))) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, _GLF_IDENTITY(51001u, (51001u) | 0u), 178563u)))))), gl_NumWorkGroups), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), gl_NumWorkGroups)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(176850u, 51001u, 178563u), (uvec3(176850u, 51001u, 178563u)) | (uvec3(176850u, 51001u, 178563u))))))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(176850u, 51001u, 178563u)))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packUnorm2x16(vec2(-2.4, -26.49))) : 0u)))), uvec3(5u)))))))))))), gl_NumWorkGroups)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))), max(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), gl_NumWorkGroups)), _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) + 0u))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), gl_NumWorkGroups)), clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups, gl_NumWorkGroups))[1], gl_NumWorkGroups[2])), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), 0u)))))[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-75869)))]))[2], min(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), max(_GLF_IDENTITY(gl_NumWorkGroups[2], min(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], min(gl_NumWorkGroups[2], gl_NumWorkGroups[2])))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true)), (true && (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(6501.3667, 66.97, 3.7, -52.87, 0.8, -8.8, -3.1, -496.554, _GLF_IDENTITY(-1.2, (true ? -1.2 : _GLF_FUZZED(refract(8.8, 93.45, floor(-69.21))))), 0.5, _GLF_IDENTITY(7.9, mix(float(_GLF_FUZZED((+ vec4(89.12, -0.6, 766.363, 5419.1134).s))), float(7.9), bool(true))), -5188.0586)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(6501.3667, 66.97, 3.7, -52.87, 0.8, -8.8, -3.1, -496.554, -1.2, 0.5, 7.9, -5188.0586)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0))))) - 0.0))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(1.0))), mix(float(_GLF_FUZZED(5187.1404)), float(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max(_GLF_IDENTITY((0.0), max((0.0), (0.0))), (0.0))) * 1.0)), vec2(1.0, 1.0))), sqrt(1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(448.417) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3.9) : injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3.9) : injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3.9) : injectionSwitch[1])))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.7)))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false)))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(655.576), _GLF_FUZZED(2361.9648)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << 0u), 0u), uvec2(uvec4(uvec2(subgroup_id, 0u), 1u, 1u))), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << _GLF_IDENTITY(0u, (0u) >> 0u)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u)))), (~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))))), (uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u)))), (~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))))) << uvec2(0u, 0u))), 1u))), ~ (~ (_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))))))) - 0u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u)))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << 0u), 0u), uvec2(uvec4(uvec2(subgroup_id, 0u), 1u, 1u))), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << _GLF_IDENTITY(0u, (0u) >> 0u)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u)))), (~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))))), (uvec2(_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u)))), (~ (_GLF_IDENTITY(uvec4(uvec2(subgroup_id, 0u), 1u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))))) << uvec2(0u, 0u))), 1u))), ~ (~ (_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(uvec4(uvec2(subgroup_id, 0u), 1u, 1u))))))))) - 0u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(884.475) : 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))))))) >> 0u) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(7034.2926)), float(cos(0.0)), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(1.0), 1.0), mat3(mat4(mat3(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(1.0), 1.0))))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (0u | 0u) + (read_val))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) || false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
