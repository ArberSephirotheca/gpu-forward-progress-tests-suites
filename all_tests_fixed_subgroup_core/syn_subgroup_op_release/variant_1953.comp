#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, ~ (~ (3u))), 3u))), uint(3u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 1u, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 1u * (workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u)) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, clamp((subgroup_local_id) * 1u, (subgroup_local_id) * 1u, (subgroup_local_id) * 1u)), ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u))))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) - 0u))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec2(uint(3u), 0u), (true ? uvec2(uint(3u), 0u) : _GLF_FUZZED(uvec2(159640u, 14451u))))))) - 0u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, (0u & 164790u)))), ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u)), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u)), (clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) << 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u)) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, clamp((subgroup_local_id) * 1u, (subgroup_local_id) * 1u, (subgroup_local_id) * 1u)), ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u))))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) - 0u))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec2(uint(3u), 0u), (true ? uvec2(uint(3u), 0u) : _GLF_FUZZED(uvec2(159640u, 14451u))))))) - 0u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))))), max(_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u))))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) - 0u))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec2(uint(3u), 0u), (true ? uvec2(uint(3u), 0u) : _GLF_FUZZED(uvec2(159640u, 14451u))))))) - 0u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u))))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) - 0u))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec2(uint(3u), 0u), (true ? uvec2(uint(3u), 0u) : _GLF_FUZZED(uvec2(159640u, 14451u))))))) - 0u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))))) + 1 < subgroup_size)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 1u * (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false))) ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u)))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : uint(3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), (min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u)) - 0u))))))))), _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, _GLF_IDENTITY(((subgroup_local_id) * 1u), (((subgroup_local_id) * 1u)) ^ 0u) ^ 0u), min(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u)))))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) - 0u, (false ? _GLF_FUZZED((atomicMax(next_virtual_gid, workgroup_size) % workgroup_id)) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) - 0u, uint(uint((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) - 0u)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / 1u))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u))) - 0u)), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_id))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)) | (uint(3u)))))), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_id))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)) | (uint(3u)))))), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))))) | 0u), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), (0u ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (subgroup_local_id)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_id))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (1u ^ 1u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uvec4(3u, 0u, 0u, (1u | 1u))), 0u + (uint(uvec4(3u, 0u, 0u, (1u | 1u)))))))))), _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)) | (uint(3u)))))), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (_GLF_IDENTITY(min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)) | (uint(3u)))))), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)) | (uint(3u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))))))))) + 1 < subgroup_size)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))))) * 1u, _GLF_IDENTITY(((subgroup_local_id) * 1u), (((subgroup_local_id) * 1u)) ^ 0u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) + 0u), _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))), (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))), ((true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)))) | 0u)) | ((true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), uint(3u))))))))))), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), max((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(next_virtual_gid)))) * 1u), ((subgroup_local_id) * 1u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) ^ 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))))))) ^ 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), ~ (~ (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) + 0u), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u)), min(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) * 1u, ((subgroup_local_id) * 1u) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, 0u | (3u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3u, 0u | (3u)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, 0u | (3u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3u, 0u | (3u)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))))))), 0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id)), (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, 0u | (3u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3u, 0u | (3u)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(uint(3u), uint(3u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))))))))) + 1 < subgroup_size))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false)))) || false)))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true && (false)) || (false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))) || false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) && true)), true, true))), true)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))) || false)))))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(refract(11.33, -7.5, -0.4)) : -0.7))), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0)))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-13.89)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), clamp(_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), clamp(_GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520))))), _GLF_IDENTITY(_GLF_FUZZED(-2193.5520), (_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), min(_GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520)))) + 0.0), _GLF_FUZZED(-2193.5520))), _GLF_FUZZED(17.96)), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_FUZZED(-13.89)))[_GLF_IDENTITY(0, max(0, 0))], (vec2((injectionSwitch)[0], _GLF_FUZZED(-13.89)))[1]), bvec2(true, true))), bvec2(true, false))).x, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0)))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-13.89)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), clamp(_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), clamp(_GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520))))), _GLF_IDENTITY(_GLF_FUZZED(-2193.5520), (_GLF_IDENTITY(_GLF_FUZZED(-2193.5520), min(_GLF_FUZZED(-2193.5520), _GLF_FUZZED(-2193.5520)))) + 0.0), _GLF_FUZZED(-2193.5520))), _GLF_FUZZED(17.96)), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), transpose(transpose(transpose(mat4x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_FUZZED(-13.89)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-13.89)))[1]), bvec2(true, true))), bvec2(true, false))).x : _GLF_FUZZED((true ? _GLF_IDENTITY(2.6, _GLF_IDENTITY(float(mat3x2(2.6, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-4.0) : float(mat3x2(2.6, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0))))) : 40.41)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) || false))))))), (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) << 0)) | 0)), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(1u * _GLF_IDENTITY((uint(2)), ((uint(2))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u * (uint(2)), (1u * (uint(2))) / 1u)) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(1u * (uint(2)), (1u * (uint(2))) / 1u)) >> 0u, ((_GLF_IDENTITY(1u * (uint(2)), (1u * (uint(2))) / 1u)) >> 0u) / 1u), (_GLF_IDENTITY(1u * (uint(2)), (1u * (uint(2))) / 1u)) >> 0u))))) - 0u), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))) > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true), true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, cos(0.0), 1.0, sin(0.0), 0.0, 0.0))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x > injectionSwitch.y) || false)) && true))))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))), false, false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-39.97), _GLF_FUZZED(3.4)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) + (injectionSwitch)).x, 0.0, 0.0, 1.0, exp(0.0), 1.0, tan(0.0), 1.0))) : _GLF_FUZZED(-4777.0831))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-463.817) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)), (mat4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-463.817) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, determinant(mat2(cos(0.0), 1.0, 0.0, 1.0)), 0.0))) > injectionSwitch.y)))) && true, false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(15.03))) > injectionSwitch.y)))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-244.927, max(-244.927, -244.927)), (false ? _GLF_FUZZED(-8456.9318) : _GLF_IDENTITY(-244.927, max(-244.927, -244.927))))), _GLF_FUZZED(_GLF_IDENTITY(-9.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -9.6 : _GLF_FUZZED(-92.25))))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(_GLF_IDENTITY(-4.5, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), min(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-172.489)))), 5236.9289, 76.27, 3.8, 195.068, -9083.4752, -3.8, -7776.2349, 1037.7610, 53.77, -211.275, -17.06)) : _GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(mat4(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(_GLF_IDENTITY(-4.5, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), min(float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(-4.5, mix(float(-4.5), float(_GLF_FUZZED(477.263)), bool(false))), determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-172.489)))), 5236.9289, 76.27, 3.8, 195.068, -9083.4752, -3.8, -7776.2349, 1037.7610, 53.77, -211.275, -17.06)) : _GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x4(injectionSwitch, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), sin(0.0), 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)))))[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false, false, true)))))) || false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, true))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.2))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(966.717) : injectionSwitch.y)))) ? 4 : _GLF_FUZZED(-4985))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (~ (_GLF_IDENTITY(4, 1 * (4)))) + 0), (_GLF_IDENTITY(~ (4), int(ivec4(~ (4), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(84132))), 0)))) / 1)))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1))) * 1) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) ^ _GLF_IDENTITY(0, (0) ^ 0)))))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), clamp((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 1 * (4)))) + 0), (_GLF_IDENTITY(~ (4), int(ivec4(~ (4), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(84132))), 0)))) / 1)))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1))) * 1) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(0, (0) / 1)) ^ _GLF_IDENTITY(0, (0) ^ 0))))))) / 1));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false))))))), false || (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), (mat2x3(injectionSwitch.y, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)) * mat2(1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.2) : 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7324.0192))))))), 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0))))))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6160.0321)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6160.0321)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6160.0321)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6160.0321)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6160.0321)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(vec2(574.107, -7.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8759.3513), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8759.3513), mix(float(_GLF_FUZZED(-8759.3513)), float(_GLF_FUZZED(977.750)), bool(false))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) + 0.0))))), _GLF_FUZZED(0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9947.7153) : injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), mat3(mat3x4(mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))) : _GLF_FUZZED((equal(injectionSwitch, injectionSwitch) , mat3(-7452.1087, 8.1, -98.51, 8473.5429, 656.125, -6.9, -0.9, -9483.9634, -6.3))))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
