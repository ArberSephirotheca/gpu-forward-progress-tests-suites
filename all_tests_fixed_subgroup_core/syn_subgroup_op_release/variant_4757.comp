#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, determinant(mat4(0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0)), 0.0, determinant(mat2(1.0, sqrt(0.0), 0.0, cos(0.0))), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, sin(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec4((_GLF_DEAD(false)) || false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.34)), float(injectionSwitch.y), bool(true))))))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, length(0.0), 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.0)), bool(false))), 0.0, 0.0))))), (vec2(mat3x4(injectionSwitch, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(21.12)), float(0.0), bool(true))), 1.0, length(0.0), 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? 1153.9421 : 555.938))), _GLF_IDENTITY(float(1.0), float(vec3(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0)))) * 1.0), 1.0, 0.0))), bool(true)))), float(mat3x2(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(false ? 1153.9421 : 555.938, (_GLF_IDENTITY(false ? 1153.9421 : 555.938, max(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, false)))))) ? 1153.9421 : 555.938, false ? 1153.9421 : 555.938))) - 0.0)))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), bool(true)))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0)))))) * mat2(1.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(12189u))), (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(12189u)))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) ^ 0)], gl_NumWorkGroups[2])).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y)) && true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0)), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(157708u) : 0u)))), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u), clamp(((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(157708u) : 0u)))), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(157708u) : 0u)))), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(157708u) : 0u)))), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED((uvec3(128237u, 49630u, 110686u) - max(uvec3(122933u, 76827u, 169852u), uvec3(102488u, 26027u, 88461u)))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(157708u) : 0u)))), uvec3(0u, 0u, 0u) + (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, false))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64.18) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(97.04)))))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy.y = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false)), false || (bool(bvec4(false, true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint workgroup_base = GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy.y * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), false, false), true))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size + GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))), bool(bool(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(-5.4)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec2(1, 1)))))])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - log(1.0))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w) + 0u) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w) << 0u) * subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size), min(_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))), max((GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))), (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))), ~ (~ _GLF_IDENTITY((~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size)), ((~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size))) >> (23805u & 0u)))), ~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u)))), _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u))))))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))), 0u, 0u)) | (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))), 0u, 0u), min(uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - (0u | 0u))))))), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), 0u, 1u))) >> 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))), 1u)))))))), 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u))).w * subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id)))), min(_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), (false ? _GLF_FUZZED(199574u) : _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))))))))), _GLF_IDENTITY(~ (~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size))), _GLF_IDENTITY(uint(uint(~ (~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size))))), 0u | (uint(uint(~ (~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w * subgroup_size), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w * subgroup_size))), min(_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w, uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) * subgroup_size))), (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w, uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) * subgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint((_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w * subgroup_size))))))))), uint(uvec4((_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), ~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), ~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))))), max(~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), ~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), ~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))))))))), (true ? ~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))) : _GLF_FUZZED(subgroup_size))), 1u)), (uint(uvec2(_GLF_IDENTITY(~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec4(_GLF_FUZZED(workgroup_base), 0u, (1u ^ 1u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))) ^ 0u)))), (true ? ~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))) : _GLF_FUZZED(subgroup_size))), 1u))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(uint(5u), uint(5u)) : _GLF_FUZZED(136627u)))))), ~ (~ (~ (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size)))), ~ (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).w * subgroup_size)))), 0u, 1u, 0u)))) / 1u)), _GLF_IDENTITY((GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size), uint(uint((GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size)))) | (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.w * subgroup_size)))) + ((GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.xy.x + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), true && (true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 1.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat3(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (true ? mat3(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(mat3(9.8, 386.287, -9162.0115, 94.74, -8.2, -9091.6215, 42.42, 2.6, -1.5))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat3(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (true ? mat3(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(mat3(9.8, 386.287, -9162.0115, 94.74, -8.2, -9091.6215, 42.42, 2.6, -1.5))))))))))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(97.94)), vec2(_GLF_FUZZED(-81.75), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), bool(bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), false)))) || false)))
    barrier();
  }
 if(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id))) | (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id)).xy.x + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))) || false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z, _GLF_IDENTITY(0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z), clamp(_GLF_IDENTITY(0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z), min(0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z), 0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z))), 0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z), 0u + (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z)))), max(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z, _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z, max(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id, (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id))) | uvec4(0u, 0u, 0u, 0u)).z, GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z))))], uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | (2)))), (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))), _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))))), _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) + 0), 0)), 0))), _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))))), ~ (~ (2))), 2, 2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(-458.060)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2567.4544)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false))) ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 395.942)) : injectionSwitch)).y))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) : _GLF_FUZZED(-0.9))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[GLF_merged3_0_2_56_2_1_16_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidsubgroup_id.z], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) >> 0), 2, 2))) | (2))), 4, 64, _GLF_IDENTITY(4, (4) * 1));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (false) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))) && true))))) || _GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), true && ((_GLF_IDENTITY((false), false || ((false))))))) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), true && ((_GLF_IDENTITY((false), false || ((false))))))) && true), false, false)))))))), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), bool(bool((_GLF_IDENTITY((false), false || ((false))))))))))))), bool(bvec4(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), false, true, true)))))), false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false), true)), false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
