#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-196.186), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (false ? _GLF_FUZZED(-83.58) : (mat2(1.0) * (injectionSwitch))[1]))), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(float(16993u))), bvec2(true, false)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float((injectionSwitch.y)), clamp(float((injectionSwitch.y)), float((injectionSwitch.y)), float((injectionSwitch.y)))), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), true && (bool(true))), false, false, true))))) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(2.8)), float((injectionSwitch.y)), bool(true))) / 1.0))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), clamp(_GLF_IDENTITY(_GLF_FUZZED(2.8), mix(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(2.8), _GLF_FUZZED(2.8)))), max(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(2.8)), (float(_GLF_FUZZED(2.8))) + 0.0))), float((injectionSwitch.y)), bool(true))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(66.72)), bool(false))), 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (false ? _GLF_FUZZED(30.24) : _GLF_FUZZED(2.8)))), (false ? _GLF_FUZZED(2.5) : float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (false ? _GLF_FUZZED(30.24) : _GLF_FUZZED(2.8)))))), float((injectionSwitch.y)), bool(true))) / 1.0))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((false), ((false)) && true)) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true), false, true))))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true, true), false)))))))), _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))) || false)))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) && (false), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(true && (false), false, _GLF_IDENTITY(true, (true) && true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.41), _GLF_FUZZED(-767.843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).y)), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | ((gl_WorkGroupID.x))), (113480u & 0u) + _GLF_IDENTITY((0u | _GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))) / sqrt(vec2(1.0, 1.0)))).x : _GLF_FUZZED(fract(5.6))))), (false ? _GLF_FUZZED(-251.876) : _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x : _GLF_FUZZED(fract(5.6)))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), (0u & 113119u) | (_GLF_IDENTITY((gl_WorkGroupID.x), max((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))))), ((0u | _GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))) / sqrt(vec2(1.0, 1.0)))).x : _GLF_FUZZED(fract(5.6))))), (false ? _GLF_FUZZED(-251.876) : _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / sqrt(vec2(1.0, 1.0)))).x : _GLF_FUZZED(fract(5.6)))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), (0u & 113119u) | (_GLF_IDENTITY((gl_WorkGroupID.x), max((gl_WorkGroupID.x), (gl_WorkGroupID.x))))))))) >> 0u))), gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), _GLF_IDENTITY((max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_size * workgroup_id)), 0u ^ ((max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_size * workgroup_id)))) | (max(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u)))))), 0u + (_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 0u, 0u))))))))) + (0u ^ 0u)), workgroup_size * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) && true)))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) >> 0u), max(subgroup_local_id, subgroup_local_id))))))) | (subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id)))))))) / 1u) | (subgroup_local_id), 1u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id))))) | (subgroup_local_id), 1u)) - (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))), 0u ^ (uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id))))) | (subgroup_local_id), 1u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(min(subgroup_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id, subgroup_local_id))))) | (subgroup_local_id), 1u)) - (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-543.218))), _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-64.27) : abs(0.0))), abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, tan(0.0), 0.0), (true ? mat4x2(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-543.218))), abs(0.0), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, tan(0.0), 0.0) : _GLF_FUZZED(mat4x2(-1.2, 6.0, -2.0, 3.9, -28.71, 225.588, 5.1, 4595.8261)))))), float(_GLF_FUZZED((_GLF_IDENTITY(11.95 / -1418.9696, clamp(11.95 / -1418.9696, 11.95 / -1418.9696, _GLF_IDENTITY(11.95 / -1418.9696, (11.95 / -1418.9696) * 1.0)))))), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, abs(0.0), 0.0, log(1.0))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, abs(0.0), 0.0, log(1.0))), mix(float(float(vec4(injectionSwitch.x, abs(0.0), 0.0, log(1.0)))), float(_GLF_FUZZED(-8.5)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(6.6)), (false ? _GLF_FUZZED(38.47) : _GLF_IDENTITY(float(_GLF_FUZZED(6.6)), clamp(float(_GLF_FUZZED(6.6)), float(_GLF_FUZZED(6.6)), float(_GLF_FUZZED(6.6)))))), bool(false)))))), mix(float(_GLF_FUZZED(-846.439)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(11.95, clamp(11.95, 11.95, 11.95)) / -1418.9696))), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((11.95 / -1418.9696)), tan(0.0) + (_GLF_FUZZED((11.95 / -1418.9696))))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(11.95, _GLF_IDENTITY(float(mat2x4(11.95, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x4(11.95, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) / 1.0)) / -1418.9696))), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false)) : _GLF_FUZZED(-822.448)))))), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((11.95 / -1418.9696))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(11.95 / -1418.9696, max(11.95 / -1418.9696, 11.95 / -1418.9696))))), bool(false)))) + 0.0), injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))))))) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u)))))) << 0u) : _GLF_FUZZED(workgroup_size))))) + 0u), subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u)))))) << 0u) : _GLF_FUZZED(workgroup_size))))) + 0u), subgroup_size)))) ^ 0u) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))))), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u)) - 0u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))) | 0u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)), clamp(_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)), clamp(uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)), uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)), uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)))), _GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u)), (uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u))) >> 0u), uint(uvec4(subgroup_id, 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u))))) * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_id)))) * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / 1u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), clamp(_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / 1u)))))), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), subgroup_size))) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), _GLF_IDENTITY(((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), max(((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u)))))), uint(2u))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u, max(((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u, (((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u) >> 0u)))) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u)) - 0u)))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) ^ 0u) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), subgroup_size))) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))), min(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))), min(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))))) << 0u), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u ^ (~ (~ (1u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u)) - 0u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), subgroup_size))) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))))), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u)) - 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size))) / 1u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_size)))), subgroup_size))) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))))), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u)))))) | 0u) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u)) - 0u))))))) ^ 0u)))) ^ (0u | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), true, true))), true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28876) : 2))), (int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28876) : 2)))) | 0))), max(_GLF_IDENTITY((4) << (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28876) : 2))))), ((4) << (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28876) : _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1)), 1, 1))))))))))) / 1), (4) << (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))) ? _GLF_FUZZED(-28876) : 2)))))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? 4 : _GLF_FUZZED(ivec3(92613, 97038, -18102)[1]))))) - 0)) | 0) << _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), (int(2)) - 0))) >> 0) >> 0))), 0 ^ ((0 >> _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0)))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-826.521), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3873.9128)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], tan(0.0), 1.0, length(0.0), determinant(mat3(length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0)), log(1.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch[1])))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(54.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y) || false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : ~ (~ (subgroup_local_id)))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : ~ (~ (subgroup_local_id)))))))) + 1), max((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : ~ (~ (subgroup_local_id)))))))) + 1), (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : ~ (~ (subgroup_local_id)))))))) + 1))) >> (0u | 0u)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, 1u * (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) >> (0 >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((4) >> (0 >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(_GLF_IDENTITY(((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), (10139 & 0) ^ (((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), (10139 & 0) ^ (((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, 0 | (_GLF_IDENTITY(((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), (10139 & 0) ^ (((4) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0))))))) | ((4) >> (0 >> _GLF_IDENTITY(int(5), int(5))))), ((4) >> (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(50530)))) - 0), 0)), _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1) >> _GLF_IDENTITY(int(5), int(5)))) >> (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (true ? _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) + 0) : _GLF_FUZZED((76102 >> -86768)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(0)), clamp(_GLF_IDENTITY((0 ^ 0), (true ? _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) << 0)))))) + _GLF_IDENTITY(0, (0) / 1)) : _GLF_FUZZED((76102 >> -86768)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(0)), _GLF_IDENTITY((0 ^ 0), (true ? _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) + 0) : _GLF_FUZZED((76102 >> -86768)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(0)), _GLF_IDENTITY((0 ^ 0), (true ? _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) + 0) : _GLF_FUZZED((76102 >> -86768)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97764) : _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec2((_GLF_IDENTITY(int(0), (int(0)) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))), int(0)))))))) + 0), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))))))))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) || false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))), ! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))), true, false, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), 1.0, 1.0, exp(0.0), 1.0, 0.0, cos(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
}
