#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, true, true)), (bool(bvec4(! (_GLF_DEAD(false)), true, true, true))) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u | (workgroup_size * workgroup_id), (_GLF_IDENTITY(true ? 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) : _GLF_FUZZED((true ? subgroup_local_id : _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), clamp(true ? 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (workgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) : _GLF_FUZZED(152545u))))) * workgroup_id), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u), ((workgroup_size)) - 0u) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ _GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((workgroup_size))), (workgroup_size), (workgroup_size))))), (workgroup_size) * 1u)) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))) * _GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * _GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), uint(uint(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), uint(uint(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), uint(uint(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))))) * 1u) : _GLF_FUZZED(workgroup_size))), (workgroup_size) * 1u)) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))) * workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (workgroup_size) * 1u)) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))) * workgroup_id))) : _GLF_FUZZED((_GLF_IDENTITY(true ? subgroup_local_id : workgroup_size, (true ? subgroup_local_id : workgroup_size) | 0u))), true ? 0u | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) * 1u, ((workgroup_size) * 1u) - ((0u | 0u) & 105857u))) * workgroup_id) : _GLF_FUZZED((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true)))) && true) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) : workgroup_size)), true ? 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) : _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((_GLF_IDENTITY(true ? subgroup_local_id : workgroup_size, max(true ? subgroup_local_id : workgroup_size, true ? subgroup_local_id : workgroup_size))))))), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp(_GLF_FUZZED((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))))) ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), (clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)))) * 1u))), 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size), min((_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size), (_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (_GLF_IDENTITY(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), max(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), min(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))))))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), max(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((true ? subgroup_local_id : workgroup_size), ((true ? subgroup_local_id : workgroup_size)) | ((true ? subgroup_local_id : workgroup_size)))), (true ? _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), min(_GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (_GLF_FUZZED((true ? subgroup_local_id : workgroup_size))) | (_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)))) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(_GLF_IDENTITY((true ? subgroup_local_id : workgroup_size), ((true ? subgroup_local_id : workgroup_size)) >> 0u))), clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))))))), 1u, 1u)), (true ? (uvec3(_GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size), min((_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size), (_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : workgroup_size))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (_GLF_IDENTITY(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), max(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), min(true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size), true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))))))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))), max(clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((true ? subgroup_local_id : workgroup_size), ((true ? subgroup_local_id : workgroup_size)) | ((true ? subgroup_local_id : workgroup_size)))), (true ? _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), min(_GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (_GLF_FUZZED((true ? subgroup_local_id : workgroup_size))) | (_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)))) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(_GLF_IDENTITY((true ? subgroup_local_id : workgroup_size), ((true ? subgroup_local_id : workgroup_size)) >> 0u))), clamp(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_local_id : workgroup_size)), (true ? _GLF_FUZZED((true ? subgroup_local_id : workgroup_size)) : _GLF_FUZZED(workgroup_size))), _GLF_FUZZED((true ? subgroup_local_id : workgroup_size))))))), 1u, 1u)) : _GLF_FUZZED(uvec3(185102u, 45361u, 48504u)))) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, true)), bool(bool(bool(bvec3(! (! (false)), false, true))))))), ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2048.7900 / vec3(596.412, 3.6, -9800.6375).x)), _GLF_FUZZED(-394.357)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, mix(float(_GLF_FUZZED(8169.7714)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2048.7900 / vec3(596.412, 3.6, -9800.6375).x)), _GLF_FUZZED(-394.357)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), bool(true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id))))) | (subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 0, 0)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(7u), uint(7u)))))))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, ~ (~ (0u)))))) | (0u)))))) | (subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, false))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))))) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, false))), true && ((bool(bvec3(_GLF_DEAD(false), true, false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.3) : injectionSwitch.y)), injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))), (uint(1)) / 1u), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) && true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || ((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        continue;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), true && (false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -19.82)))), injectionSwitch)).x > injectionSwitch.y)) || (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), true && (false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -19.82)))), injectionSwitch)).x > injectionSwitch.y)) || (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         return;
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          break;
        }
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))]), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -2.5, min(_GLF_IDENTITY(+ -2.5, mix(float(+ -2.5), float(_GLF_FUZZED(-0.9)), bool(false))), + -2.5)))), _GLF_FUZZED(532.290)), bvec2(false, false))).x < injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(_GLF_IDENTITY(log2(-5517.6244), (_GLF_IDENTITY(log2(-5517.6244), max(log2(-5517.6244), log2(-5517.6244)))) * 1.0))))), mix(vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(-84.27)), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log2(-5517.6244))))))[0], (vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log2(-5517.6244))))))[1]), bvec2(true, true))), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log2(-5517.6244))))), mix(vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(-84.27)), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log2(-5517.6244))))))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log2(-5517.6244))))))[1]), bvec2(true, true))), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false)))) - vec2(0.0, 0.0)), 1.0, log(1.0)), _GLF_IDENTITY(mat2(mat4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), 1.0, log(1.0)), (mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), 1.0, log(1.0))) * mat2(1.0)))), (mat2(mat4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), 1.0, log(1.0)), (mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))), 1.0, log(1.0))) * mat2(1.0))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0))))).x < injectionSwitch.y))) || false))), true && (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2.5)), _GLF_FUZZED(532.290)), bvec2(false, false))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ _GLF_IDENTITY(-2.5, mix(float(-2.5), float(_GLF_FUZZED(12.89)), bool(false))))), _GLF_FUZZED(_GLF_IDENTITY(532.290, clamp(532.290, 532.290, 532.290)))), bvec2(false, false))).x < injectionSwitch.y))) || false))))))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           return;
          }
         break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(mat3(5.4, 3614.2122, 2.8, -3.0, 204.752, 233.515, 0.6, 3.8, -797.548))) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) && true)))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), true)))))) && true))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(-29.76, -6.6))) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(-29.76, -6.6))) : injectionSwitch)).x > injectionSwitch.y)), true, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-48.25), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-665.600)), bvec2(true, false))))).x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true), (injectionSwitch.x < injectionSwitch.y))), true, true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, abs(1.0)))), mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, abs(1.0)))), max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), abs(1.0)))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, abs(1.0))))))), bool(true)))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, abs(1.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, abs(1.0)))))))) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))))) : vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-8.2)), bool(false))))), bool(true))), 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * mat2(1.0)))).x > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))).x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5302.1342), _GLF_FUZZED(vec2(-239.559, -2.7).r)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5302.1342), _GLF_FUZZED(vec2(-239.559, -2.7).r)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(8351.2397))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7787.0136), _GLF_FUZZED(677.572)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(0.1)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), 1.0, 1.0)))[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), true))))), _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))))), false))))))), (false) && _GLF_IDENTITY(true, true && (true)))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0))).y)))))))), (false) && true)) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) || ((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)), bool(bool(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)))))), bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)) || ((_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && _GLF_IDENTITY(true, (true) || false))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true)), false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)), bool(bool(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)))))), bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)) || ((_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && _GLF_IDENTITY(true, (true) || false))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true)), false))))))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))) || ((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)), bool(bool(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)))))), bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)) || ((_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && _GLF_IDENTITY(true, (true) || false))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true)), false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)), bool(bool(bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, true && (false)))), (false || ((_GLF_IDENTITY(false, true && (false))))) && true)))))), false)))))), bool(bvec2(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)) || ((_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && _GLF_IDENTITY(true, (true) || false))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true)), false))))))), true)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, cos(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), exp(0.0), cos(0.0), abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(74.65), 1.0 * (_GLF_FUZZED(74.65)))), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, cos(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), float(mat3x2(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)))))))), 1.0), vec2(0.0, 1.0)), min(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 1.0), vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13))), 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13))), 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13))), 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(14.13)))))))))))), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 1.0, 0.0, 1.0)))), 1.0, exp(0.0), cos(0.0), abs(1.0)))).y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3551.0750)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 + (int(int(1))))))))), (_GLF_IDENTITY(1, ~ (~ (1)))))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(true, (true) && true) ? (1) : _GLF_FUZZED(-66682)))), (_GLF_IDENTITY(~ (~ (1)), (true ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))) : _GLF_FUZZED(58692)))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), min(1, 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) << 0))), min(1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) << 0))), min(1, 1)), (0 | 0), 1, 1)))))) * 1), max(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1), _GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)) * 1), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)))))))) >> 0)))) | 0), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))))))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), (_GLF_IDENTITY(~ (~ (1)), (true ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))) : _GLF_FUZZED(58692)))) * 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(1, max(1, 1))), 1, 0)), (int(ivec3((_GLF_IDENTITY(1, max(1, 1))), 1, 0))) / 1))), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)) * 1), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)))))))) >> 0)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682))), max(~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682))), _GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682))), 0 ^ (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))))))), min((~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), _GLF_IDENTITY((~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), int(ivec2((~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), 0))))), (_GLF_IDENTITY(~ (~ (1)), (true ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))) : _GLF_FUZZED(58692)))) * 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * _GLF_IDENTITY(1, (1) | (1)))) * 1), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)))))))) >> 0)))) | 0), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), (_GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) && true))))))) ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))) : _GLF_FUZZED(58692), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), 0 ^ (~ (~ (1)))))) : _GLF_FUZZED(58692)) >> 0)))) * 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * _GLF_IDENTITY(1, clamp(1, 1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)) + 0)), (~ (_GLF_IDENTITY(~ (1), 0 + (~ (1))))) * 1)) * 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) * 1))), (~ (~ (1))) * 1)))))))) >> 0)))) | 0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), (_GLF_IDENTITY(~ (~ (1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), (_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1))))) + (5135 & 0)) : _GLF_FUZZED(58692)))) * 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))), (~ (~ (1))) * 1), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)) * 1), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)))))))) >> 0)))) | 0), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-66682)))), (_GLF_IDENTITY(~ (~ (1)), (true ? _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))) : _GLF_FUZZED(58692)))) * 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(1, min(1, 1))))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), 0 | (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, 0)))))), (~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * 1)))) * 1), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1)) * 1), _GLF_IDENTITY(~ (~ (1)), (~ _GLF_IDENTITY((~ (1)), min((~ (1)), _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1))))) * 1)))) * 1)))))))) >> 0)))) | 0)) / 1))) : _GLF_FUZZED(findMSB(-32594)))))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) ^ 0)) - 0), _GLF_IDENTITY((1), max((1), (1)))))))))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)), ~ (~ (1))))) * 1))) >> 0))), (false ? _GLF_FUZZED(-88218) : _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)), ~ (~ (1))))) * 1))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)), ~ (~ (1))))) * 1))) >> 0)))) >> 0)))) | 0, 0 | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), _GLF_IDENTITY((~ (~ (1))), int(_GLF_IDENTITY(ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), clamp(ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), _GLF_IDENTITY(ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), clamp(ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4((~ (~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))) * 1))) >> 0)))) | 0, _GLF_IDENTITY(int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> 0)))) | 0, 0)), (int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), ((~ (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), (~ (1)) >> 0), ~ (1), ~ (1))))))) * 1))) >> 0)))) | 0, 0))) >> (0 << _GLF_IDENTITY(int(5), int(5)))))))) : _GLF_FUZZED(findMSB(-32594)))), (false ? _GLF_FUZZED(38021) : _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0))))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))), (~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))))) | 0)) | (~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))))))) + 0)))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))) >> 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), ~ (~ ((1))))), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))) * 1))) >> _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(-85930))))))) | 0, 0 | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> 0)))) | 0, _GLF_IDENTITY(int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> 0)))) | 0, 0)), (int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> 0)))) | 0, 0))) >> (0 << _GLF_IDENTITY(int(5), int(5)))))))) : _GLF_FUZZED(findMSB(-32594)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))))), ((~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))))) >> 0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))))), ((~ (~ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1)))))))) >> 0)) << 0)))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))) * 1))) >> _GLF_IDENTITY(0, (0) >> (-93708 & (0 << _GLF_IDENTITY(int(2), int(2))))))))) | 0, 0 | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) | 0, _GLF_IDENTITY(int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ _GLF_IDENTITY((1), int(ivec2((1), 0))))) * 1))) >> 0)))) | 0, 0)), (int(ivec2((int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) * 1))) >> 0)))) | 0, 0))) >> (0 << _GLF_IDENTITY(int(5), int(5)))))))) : _GLF_FUZZED(findMSB(-32594))))) ^ 0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) - 0))), (~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) / (1 & 1))) | ((~ (1))))) * 1))) >> 0)))) | 0) : _GLF_FUZZED(findMSB(-32594)))))))), false || (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))))), (_GLF_IDENTITY(1, ~ (~ (1))))))))))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) - 0))), (~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) / (1 & 1))) | ((~ (1))))) * 1))) >> 0)))) | 0) : _GLF_FUZZED(findMSB(-32594)))))))))), _GLF_IDENTITY((bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (1)))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1)))), ~ (~ (1)))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (_GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0)))))))))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))), 0 ^ (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (~ (1)), (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) + 0)))))))) * 1))) >> 0)))) | 0) : _GLF_FUZZED(findMSB(-32594))))))))) && _GLF_IDENTITY(true, true && (true)), ! (! ((bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (1)))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (1)))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((~ (~ (0))), ((~ (~ (0)))) * 1) | (_GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0)))))))))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))), 0 ^ (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (~ (1)), (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) + 0)))))))) * 1))) >> 0)))) | 0) : _GLF_FUZZED(findMSB(-32594)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (1)))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (1)))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((~ (~ (0))), ((~ (~ (0)))) * 1) | (_GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0)))))))))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))), 0 ^ (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (~ (1)), (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) + 0)))))))) * 1))) >> 0)))) | 0) : _GLF_FUZZED(findMSB(-32594)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))))) >> 0))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (1)))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((~ (~ (0))), _GLF_IDENTITY(((~ (~ (0)))) * 1, (((~ (~ (0)))) * 1) | (((~ (~ (0)))) * 1))) | (_GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0)))))))))), (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ _GLF_IDENTITY((1), _GLF_IDENTITY((true ? (1) : _GLF_FUZZED(_injected_loop_counter)), 0 | (_GLF_IDENTITY((true ? (1) : _GLF_FUZZED(_injected_loop_counter)), 0 ^ ((true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))))))), 0 ^ (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (~ (1)), (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) + 0)))))))) * 1))) >> 0)))) | 0) : _GLF_IDENTITY(_GLF_FUZZED(findMSB(-32594)), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(findMSB(-32594)), (0 | 0), 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_FUZZED(findMSB(-32594)), (0 | 0), 1, 1)))))))) / 1))))))))) && true)))))))); _injected_loop_counter ++)
    {
     subgroupAll(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false))))) && true)) && true))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (! (! (false))))) && true)) && true))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7049.9435)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
