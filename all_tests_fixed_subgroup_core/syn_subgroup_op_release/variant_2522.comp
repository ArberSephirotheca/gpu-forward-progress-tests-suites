#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id;
 uvec4 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy = GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.xy;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_size;
 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz = GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid.xyz;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.z = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), 1.0)))).y))))
  return;
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.x = GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.z;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.w = subgroup_size;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.w;
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3], ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3])))).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y) ^ 0u)))), min(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3])).y, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y), uint(uvec4(clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3])).y, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y), _GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base[3])).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y), (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y)) * 1u)))))))))))))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x));
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.x = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-86.68)), vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + -1000.6762)))).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false)) && true)) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))), ((! (false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-58.41, -9976.4121)) : _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? injectionSwitch : _GLF_FUZZED(radians(vec2(-7.6, -863.395))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(5.7))), clamp(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(5.7))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(5.7))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))[1] : _GLF_FUZZED(5.7))))), clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[1]))), vec2(_GLF_FUZZED((-4.5)), _GLF_FUZZED(8160.2741)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0), clamp((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch[1]), bool(true))))))))) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))))).y))))).y), true && (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), false))), false))), true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, round(length(normalize(1.0))), 0.0), (_GLF_IDENTITY(vec3(0.0, round(length(normalize(1.0))), 0.0), clamp(vec3(0.0, round(length(normalize(1.0))), 0.0), vec3(0.0, round(length(normalize(1.0))), 0.0), vec3(0.0, round(length(normalize(1.0))), 0.0)))) * vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(4.9, 535.180)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(9481.3584), _GLF_FUZZED(-2.3)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y), false))), false))), true)))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4111.4762)))))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 1.0, 0.0, 0.0)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 uint workgroup_base = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.z * GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.y = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.y;
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.y = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.y + GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.x * GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id) * uvec4(1u, 1u, 1u, 1u)).zw) * ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), ((1u)) | 0u))) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, clamp((1u) / 1u, (1u) / 1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u)))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), _GLF_IDENTITY(uint(uint(min(((1u) / 1u), ((1u) / 1u)))), (uint(uint(min(((1u) / 1u), ((1u) / 1u))))) | (uint(uint(min(((1u) / 1u), ((1u) / 1u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup)), clamp((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup)), ((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | ((1u) / 1u))) - 0u), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), clamp(_GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u, clamp(_GLF_IDENTITY((1u) / _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((198312u & 0u), ((198312u & 0u)) | 0u)), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY(min(((1u) / 1u), ((1u) / 1u)), (min(((1u) / 1u), ((1u) / 1u))) | _GLF_IDENTITY(0u, (0u) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1u) / 1u), ~ (~ (_GLF_IDENTITY(((1u) / 1u), (((1u) / 1u)) - 0u)))), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((1u) / 1u), (_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) / 1u), (1u) / 1u, (1u) / 1u)))), _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))) / 1u, clamp(_GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(((1u) / 1u), min(((1u) / 1u), ((1u) / 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (1u) / 1u, (1u) / 1u))))))))) : _GLF_FUZZED(num_workgroup))) + 0u)))))), 1u) << _GLF_IDENTITY(uvec2(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(6u), (_GLF_IDENTITY(uvec2(6u), (uvec2(6u)) ^ _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(GLF_merged3_0_2_50_2_1_11_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basesubgroup_idsubgroup_size.xy) : uvec2(0u, 0u))))) | (uvec2(6u))), uvec2(0u, 0u) + (uvec2(6u))))) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))).y;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((1.6 - 43.37))), bool(false))), 0.0)), 0.0))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0))))))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))), false || (! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint next_virtual_gid = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.y + GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizesubgroup_local_id.xyz.x * GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y + (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.y + 1), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.y + 1), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.y + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (1u ^ 1u)) % GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y);
 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y)))), (false ? _GLF_FUZZED(68.14) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(1058.5255, -3.8)), (_GLF_FUZZED(vec2(1058.5255, -3.8))) * vec2(1.0, 1.0)))).y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)), (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8))) * mat2(1.0)))).y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(1058.5255, -3.8)), (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(vec2(-0.2, -960.337)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(1058.5255, -3.8)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(1058.5255, -3.8)), min(_GLF_FUZZED(vec2(1058.5255, -3.8)), _GLF_FUZZED(vec2(1058.5255, -3.8))))) / vec2(1.0, 1.0)))))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))))).y), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))), mix(vec2(_GLF_FUZZED(-108.982), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))))[0]) - 0.0), _GLF_FUZZED(3851.0202)), bvec2(true, false))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(1058.5255, mix(float(1058.5255), float(_GLF_FUZZED(-43.06)), bool(false))), -3.8)))).y)))), (false ? _GLF_FUZZED(68.14) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8))))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(1058.5255, -3.8), clamp(vec2(1058.5255, -3.8), _GLF_IDENTITY(vec2(1058.5255, -3.8), clamp(vec2(1058.5255, -3.8), vec2(1058.5255, -3.8), vec2(1058.5255, -3.8))), vec2(1058.5255, -3.8)))))).y, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(vec2(1058.5255, -3.8)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(1058.5255, -3.8)), (_GLF_FUZZED(vec2(1058.5255, -3.8))) * vec2(1.0, 1.0)))).y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z], uint(1), 4, 64, 4);
 if(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw.y + _GLF_IDENTITY(1, (1) >> 0) < GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid.w], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_11_1_1_14_2_1_14subgroup_idworkgroup_baseworkgroup_sizenext_virtual_gid.w], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))))), false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
