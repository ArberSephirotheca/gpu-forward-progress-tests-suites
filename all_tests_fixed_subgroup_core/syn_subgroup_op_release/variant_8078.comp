#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat3x4 _f0;
 mat2 _f1;
 bvec4 _f2;
 vec2 _f3;
 int _f4;
 bool _f5;
 vec3 _f6;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 vec2 _f1;
 mat3 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_14 {
 uint subgroup_local_id;
 mat3x4 _f0;
 uvec4 _f1;
 int _f2;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 mat4 _f1;
 mat2 _f2;
 bvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 uvec3 _f3;
 ivec3 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 bool _f1;
 uint _f2;
 int _f3;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 bvec3 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_12 _f0;
 uint _f1;
 float _f2;
 mat2 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 int _f3;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 _GLF_struct_5 _f1;
 mat4 _f2;
 mat2x3 _f3;
 bool _f4;
 bvec2 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec2 _f1;
 mat4 _f2;
 int _f3;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 float _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 bvec2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat4x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_12(_GLF_struct_10(mat4x2(1.0), ivec3(1)), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_11(mat3x4(1.0), true, 1u, 1)), 1u, 1.0, mat2(1.0), _GLF_struct_17(_GLF_struct_13(uvec2(1u), mat4(1.0), mat2(1.0), bvec4(true), bvec3(true)), _GLF_struct_14(gl_SubgroupInvocationID, mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec4(1u), 1), _GLF_struct_15(mat4x3(1.0), vec2(1.0), mat3(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (1.0))), float(_GLF_FUZZED(1.8)), bool(false)))), mat2x3(1.0)), uvec3(1u), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 0))), ivec3(1)))))), _GLF_struct_16(mat3x4(1.0), mat2(1.0), bvec4(true), vec2(1.0), 1, _GLF_IDENTITY(true, true && (true)), vec3(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(685.905)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_struct_1(_GLF_struct_0(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-3220.4353), _GLF_FUZZED(-80.16), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[3]), vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_FUZZED(-106.121), _GLF_IDENTITY(_GLF_FUZZED(834.953), max(_GLF_FUZZED(834.953), _GLF_IDENTITY(_GLF_FUZZED(834.953), max(_GLF_FUZZED(834.953), _GLF_FUZZED(834.953)))))), bvec4(true, true, false, false))), mat4x2(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), min(_GLF_IDENTITY(_GLF_FUZZED(-2985.9389), clamp(_GLF_FUZZED(-2985.9389), _GLF_FUZZED(-2985.9389), _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), float(mat2x4(_GLF_FUZZED(-2985.9389), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_FUZZED(-2985.9389)))), vec3(_GLF_FUZZED(-5.9), _GLF_FUZZED((true ? 596.845 : -9.5)), _GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0 : _GLF_FUZZED(-536.072)))) - 0.0))), bvec3(false, false, true)))) / vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-189.497), ((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), min(_GLF_IDENTITY(_GLF_FUZZED(-2985.9389), clamp(_GLF_FUZZED(-2985.9389), _GLF_FUZZED(-2985.9389), _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), float(mat2x4(_GLF_FUZZED(-2985.9389), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_FUZZED(-2985.9389)))), vec3(_GLF_FUZZED(-5.9), _GLF_FUZZED((true ? 596.845 : -9.5)), _GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0 : _GLF_FUZZED(-536.072)))) - 0.0))), bvec3(false, false, true)))) / vec3(1.0, 1.0, 1.0))[1], ((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), min(_GLF_IDENTITY(_GLF_FUZZED(-2985.9389), clamp(_GLF_FUZZED(-2985.9389), _GLF_FUZZED(-2985.9389), _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), float(mat2x4(_GLF_FUZZED(-2985.9389), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_FUZZED(-2985.9389)))), vec3(_GLF_FUZZED(-5.9), _GLF_FUZZED((true ? 596.845 : -9.5)), _GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0 : _GLF_FUZZED(-536.072)))) - 0.0))), bvec3(false, false, true)))) / vec3(1.0, 1.0, 1.0))[2]), vec3(((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), min(_GLF_IDENTITY(_GLF_FUZZED(-2985.9389), clamp(_GLF_FUZZED(-2985.9389), _GLF_FUZZED(-2985.9389), _GLF_IDENTITY(_GLF_FUZZED(-2985.9389), float(mat2x4(_GLF_FUZZED(-2985.9389), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_FUZZED(-2985.9389)))), vec3(_GLF_FUZZED(-5.9), _GLF_FUZZED((true ? 596.845 : -9.5)), _GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((vec3(1.0))[2], min(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + (_GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) / 1.0))), (vec3(1.0))[2]))) / 1.0 : _GLF_FUZZED(-536.072)))) - 0.0))), bvec3(false, false, true)))) / vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED((false ? vec2(-6.9, 3.1).t : 8.0)), _GLF_FUZZED(-8657.7416)), bvec3(true, false, false)))))), vec4(1.0), _GLF_struct_4(_GLF_struct_2(uvec2(1u), bvec3(true), mat2x3(1.0), 1.0, ivec2(1)), bvec2(true), _GLF_struct_3(mat2x4(1.0), bvec2(true), mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2706.4056) : 1.0)), 1.0))), 1)), _GLF_struct_7(mat4x2(1.0), _GLF_struct_5(vec4(1.0)), mat4(1.0), mat2x3(1.0), true, bvec2(true), _GLF_struct_6(vec2(1.0), mat4x3(1.0), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u)))), min(uvec2(1u), uvec2(1u)))) | (uvec2(1u))), 1)), _GLF_struct_8(_GLF_IDENTITY(ivec3(1), ~ _GLF_IDENTITY((~ (ivec3(1))), ((~ (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-45632)))) ^ 0))))) >> ivec3(0, 0, 0))), bvec4(true)), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-464.068) : injectionSwitch.y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_18._f4._f1.subgroup_local_id, (_GLF_struct_replacement_18._f4._f1.subgroup_local_id) ^ 0u), 0u | _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 1u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)) + _GLF_struct_replacement_18._f4._f1.subgroup_local_id), ((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id), _GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, ~ (~ (_GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, (((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u) ^ 0u)))))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id), _GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, ~ (~ (_GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, (((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u) ^ 0u)))))), uint(uint((_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id), _GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, ~ (~ (_GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, (((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u) ^ 0u))))))))), (_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id), _GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, ~ (~ (_GLF_IDENTITY(((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u, (((_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f4._f1.subgroup_local_id)) ^ 0u) ^ 0u))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))), 1.0, 1.0, tan(0.0), 1.0))).y)) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u) + (_GLF_IDENTITY((_GLF_struct_replacement_18._f4._f1.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (1))), ((_GLF_struct_replacement_18._f4._f1.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, (0) | 0)), 0 ^ (1)))) | ((_GLF_struct_replacement_18._f4._f1.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), _GLF_IDENTITY(0, max(0, 0)) ^ (1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid))) << 0u), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u & 1u, clamp(_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, 1u & _GLF_IDENTITY(1u, (1u) | (1u)))), 1u & 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & _GLF_IDENTITY(1u, (1u) | 0u)))) * (virtual_gid)), 0u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))) / 1u)))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((1u & 1u) * (virtual_gid), 0u ^ (_GLF_IDENTITY((1u & 1u) * (virtual_gid), uint(_GLF_IDENTITY(uint((1u & 1u) * (virtual_gid)), max(uint((1u & 1u) * (virtual_gid)), uint((1u & 1u) * (virtual_gid))))))))), 0u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((1u & 1u) * (virtual_gid), 0u ^ (_GLF_IDENTITY((1u & 1u) * (virtual_gid), uint(_GLF_IDENTITY(uint((1u & 1u) * (virtual_gid)), max(uint((1u & 1u) * (virtual_gid)), uint((1u & 1u) * (virtual_gid))))))))), 0u, 1u)) - uvec3(0u, 0u, 0u)), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & _GLF_IDENTITY(1u, (1u) / 1u)) * (virtual_gid)), 0u, 1u), (false ? _GLF_FUZZED(uvec3(33786u, num_workgroup, subgroup_size)) : uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u & 1u, 0u | (1u & 1u))) * (virtual_gid)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), max(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)))))), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) - uvec3(0u, 0u, 0u)))))))), ((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), clamp(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) >> uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) / uvec3(1u, 1u, 1u), ((uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) / uvec3(1u, 1u, 1u)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), 0u ^ ((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))), _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (false ? _GLF_FUZZED(uvec3(33786u, num_workgroup, subgroup_size)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), min(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), min(max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (false ? _GLF_FUZZED(uvec3(33786u, num_workgroup, subgroup_size)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), min(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (false ? _GLF_FUZZED(uvec3(33786u, num_workgroup, subgroup_size)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), min(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, (1u & 1u) * (virtual_gid)), 0u, 1u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_struct_replacement_18._f4._f1.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((! (false))), bool(bool(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), true && (! (((! (false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0)))) * exp(0.0))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0)))) * exp(0.0))))))))))))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0)))) * exp(0.0)))))))))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0)))) * exp(0.0)))))))))))), false || (((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0)))) * exp(0.0))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), true, false)))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
