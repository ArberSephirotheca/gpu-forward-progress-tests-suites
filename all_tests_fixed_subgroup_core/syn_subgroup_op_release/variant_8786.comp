#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(vec2(-86.46, -4.7)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.7, 8450.7077))))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-229.146)), bool(false))), injectionSwitch.y)))) * (injectionSwitch)) / vec2(1.0, 1.0))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.7, 8450.7077))))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(657.289), _GLF_FUZZED(5.3)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))))), vec2(1.0, 1.0))))).y, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.7, 8450.7077))))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))).y, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.7, 8450.7077))))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))).y, true, false))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) << uvec3(0u, 0u, 0u))) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)), ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))))) << uvec3(0u, 0u, 0u))) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))) + uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.471))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.471))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.471))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.471))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.471))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(70.14))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1649.6051)), vec2(_GLF_FUZZED(-2126.7268), (injectionSwitch)[1]), bvec2(false, true))), exp(0.0), log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(sin(0.0), 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0))).x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u))))) / 1u)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((1)) >> 0)) : _GLF_FUZZED(-14295)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(7.8)))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(486.103)), bool(false))), 1.0, 0.0)), (float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(2.6)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 1.0, 0.0)))), bool(true))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(486.103, 0.0 + (486.103)))), max(float(_GLF_FUZZED(486.103)), _GLF_IDENTITY(float(_GLF_FUZZED(486.103)), _GLF_IDENTITY((float(_GLF_FUZZED(486.103))), min((float(_GLF_FUZZED(486.103))), (float(_GLF_FUZZED(486.103))))) - 0.0))), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0))) / 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), max((_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, max(2, 2))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, (8) - 0), 8))))) | (~ (4)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (0 << _GLF_IDENTITY(int(8), int(8))) | (~ (4)))), min(~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(64971) : 0)) << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, int(ivec2(8, 1)))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(4, min(4, 4)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, min(4, 4))))), clamp(~ ((~ (_GLF_IDENTITY(4, min(4, 4))))), ~ ((~ (_GLF_IDENTITY(4, min(4, 4))))), _GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, min(4, 4))))), (~ ((~ (_GLF_IDENTITY(4, min(4, 4)))))) | (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, min(4, 4))))), (~ ((~ (_GLF_IDENTITY(4, min(4, 4)))))) | (~ ((~ (_GLF_IDENTITY(4, min(4, 4))))))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), ~ (~ ((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)), (true ? ~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / _GLF_IDENTITY(1, (1) | (1)))) : _GLF_FUZZED(51330))))))))))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), ~ (~ ((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4)))))), 0 | (int(4)))) / 1)), (true ? ~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), 0 | (int(4)))) / 1)) : _GLF_FUZZED(51330))))))))))))))), (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), ~ (~ ((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), 0 | (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))) : _GLF_FUZZED(51330)))))))))))))))) * 1), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), ~ (~ ((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1, (false ? _GLF_FUZZED(11437) : (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), (true ? ~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)) : _GLF_FUZZED(51330))))))))))))))), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)))), ~ (~ ((_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)), (true ? ~ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1)) : _GLF_FUZZED(51330))))))))))))))))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), clamp(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) * ivec3(1, 1, 1))))), (int(_GLF_IDENTITY(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), clamp(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(8, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) * ivec3(1, 1, 1)))))) / 1))), int(8))) | (~ (4)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), (0 << _GLF_IDENTITY(int(8), int(8))) | (~ (4))))) ^ 0, clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8)))))), int(int(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(ivec4(38893, 95510, 33615, -99634)[2]) : 0 << _GLF_IDENTITY(int(8), int(8))))))))))))) | (~ (4))), (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8)))))), int(int(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), min(int(8), int(8)))) * 1), int(8), int(8))))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))))))))))) | (~ (4)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | 0), 4)), 4))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), min(int(0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))))))), int(0 << _GLF_IDENTITY(int(8), int(8)))))), int(int(int(_GLF_IDENTITY(int(0 << _GLF_IDENTITY(int(8), int(8))), clamp(int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))), int(0 << _GLF_IDENTITY(int(8), int(8))))))))))) | (~ (4))))))) ^ 0, (~ (_GLF_IDENTITY(~ (4), (0 << _GLF_IDENTITY(int(8), int(8))) | (~ (4))))) ^ 0, _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : ~ (4)))) | (~ (4))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : ~ (4)))) | (~ (4))), 0, 0))) | 0)))))), 0 ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))), (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), 0 + (~ (4)))) >> 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(3203), (_GLF_FUZZED(3203)) | 0) : ~ (4)))) | (~ (_GLF_IDENTITY(4, (4) >> 0)))), 0, 0)), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : ~ (4)))) | (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), 0, 0), clamp(ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))) | (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), 0, _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : ~ (4)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (~ (_GLF_IDENTITY(4, int(ivec2(4, 1))))) << 0))), 0, 0), ivec3(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(3203) : ~ (_GLF_IDENTITY(4, max(4, 4)))))) | (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), 0, 0))))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(90547))), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(90547)))) >> 0))))))))) ^ 0)))))) ^ 0)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, _GLF_IDENTITY(4, (4) / 1));
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
