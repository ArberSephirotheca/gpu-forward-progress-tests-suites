#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), false || (false))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec3(_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), 0u | ((gl_WorkGroupSize.x)))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))) ^ 0u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u))), ((gl_WorkGroupSize.x)) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false))))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, tan(0.0), 1.0, 0.0))).x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-24.16))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6.7)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-24.16))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-24.16)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)))))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) / 1u, max(_GLF_IDENTITY(((workgroup_id)) / 1u, (((workgroup_id)) / 1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(((workgroup_id)) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(((workgroup_id)) / 1u, _GLF_IDENTITY(uint(uvec4(((workgroup_id)) / 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 1u)), (uint(uvec4(((workgroup_id)) / 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 1u))) - 0u)), (((workgroup_id)) / 1u) + 0u)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) | 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((_GLF_IDENTITY(4593.0468, (4593.0468) / 1.0)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8030.2923) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), max(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468))))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8030.2923) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), max(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468))))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8030.2923) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), max(_GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468)))), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468))))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))) * abs(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_IDENTITY(_GLF_FUZZED((4593.0468)), max(_GLF_FUZZED((4593.0468)), _GLF_FUZZED((4593.0468))))), vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))).y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(94.68) : injectionSwitch.y)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), min(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), vec3(mat2x3(vec3(injectionSwitch.y, 0.0, 1.0), 1.0, 1.0, 0.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(mat2x4(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)), min(float(mat2x4(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))))), min(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), _GLF_IDENTITY(float(float(0.0)), clamp(_GLF_IDENTITY(float(float(0.0)), clamp(_GLF_IDENTITY(float(float(0.0)), mix(float(_GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-3.2) : float(float(0.0))))), float(_GLF_FUZZED(-6774.7773)), bool(false))), float(float(0.0)), float(float(0.0)))), float(float(0.0)), float(float(0.0))))))), 1.0), vec3(vec3(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), _GLF_IDENTITY(float(float(0.0)), clamp(_GLF_IDENTITY(float(float(0.0)), clamp(_GLF_IDENTITY(float(float(0.0)), mix(float(_GLF_IDENTITY(float(float(0.0)), (false ? _GLF_FUZZED(-3.2) : float(float(0.0))))), float(_GLF_FUZZED(-6774.7773)), bool(false))), float(float(0.0)), float(float(0.0)))), float(float(0.0)), float(float(0.0))))))), 1.0))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), float(float(0.0))))))), 1.0))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), float(mat2x3(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), mix(float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0))), float(_GLF_FUZZED(7447.2319)), bool(false))), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), max(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))))), _GLF_IDENTITY(false, ! (! (false)))), false))), false, true)))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((4593.0468))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))), float(float(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0))))))))))), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, exp(0.0), 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (vec4(1.0, 0.0, 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)), (vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (vec4(1.0, 0.0, 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, abs(1.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(-5887.8415)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), min(float(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 1.0))), mix(float(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8766.6448))), 1.0)))), float(_GLF_FUZZED(-1412.4939)), bool(false))))))), _GLF_IDENTITY(false, true && (false))), false))), false, true)))))))))), true, false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((4593.0468))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(normalize(0.9)) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-7945.4825), _GLF_FUZZED((_GLF_IDENTITY(26.43, (false ? _GLF_FUZZED((false ? vec4(1.7, -8.6, -8918.3031, -82.56) : vec4(4435.7976, -1452.8503, 8171.5097, 889.693)).q) : 26.43)) + -6.0))), bvec2(false, false))))))[1]), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true)))), false, true))))), false)))))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))), float(_GLF_FUZZED(4.2)), bool(false))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) - 0.0), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_FUZZED(-18.03)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0), vec3(mat3x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0), mix(vec3(_GLF_FUZZED(-69.30), _GLF_FUZZED(-8620.1250), _GLF_FUZZED(-787.071)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[1], clamp((vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[1])), (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8374.0265) : injectionSwitch.y)))), 0.0, 1.0))[2]), bvec3(true, true, true))), 0.0, 1.0, 0.0)))), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true)))))), false || (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (false ? _GLF_FUZZED(1.4) : float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), max(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), max(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), max(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.9)), bool(false))), 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED(_GLF_IDENTITY((4593.0468), clamp((4593.0468), (4593.0468), (4593.0468))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.98)), vec2(_GLF_FUZZED(47.43), (injectionSwitch)[1]), bvec2(false, true))))[1], max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.98)), vec2(_GLF_FUZZED(47.43), (injectionSwitch)[1]), bvec2(false, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.98)), vec2(_GLF_FUZZED(47.43), (injectionSwitch)[1]), bvec2(false, true))))[1]))), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, cos(0.0))), 1.0))), 1.0)))), float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 1.0))))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (false ? _GLF_FUZZED(intBitsToFloat(-1074)) : float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, abs(0.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, abs(0.0), 0.0)))) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((mat4x2(80.69, 423.545, 3605.6978, 2947.1464, -3466.6276, 348.813, 4229.7031, 7839.5995) * vec4(-9.2, 84.85, 85.80, 8.7))))).y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x3(1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0)))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))) - abs(0.0)))), false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false, true)))))))))), true, false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((4593.0468))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-246.716, -153.851)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-246.716, -153.851)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-246.716, -153.851)))))), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-246.716, -153.851)))), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-246.716, -153.851)))))), bvec2(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true)))))))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), true))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0, 1.0, 0.0))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.9)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), max(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))))), false), false))), false, true)))))))))), true, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((4593.0468))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 ^ (0))), (false ? _GLF_FUZZED(55368) : ~ (_GLF_IDENTITY(0, 0 ^ (0)))))))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))) : _GLF_FUZZED(vec2(-246.716, -153.851)))), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(_GLF_FUZZED((+ 583.040))), bool(false))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (true ? vec3(injectionSwitch.y, 0.0, 1.0) : _GLF_FUZZED(vec3(-347.501, 0.2, -83.10)))))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, _GLF_IDENTITY(true, false || (true)))))))))))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((4593.0468))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 ^ (0))), (false ? _GLF_FUZZED(55368) : ~ (_GLF_IDENTITY(0, 0 ^ (0)))))))], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))) : _GLF_FUZZED(vec2(-246.716, -153.851)))), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(_GLF_FUZZED((+ 583.040))), bool(false))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (true ? vec3(injectionSwitch.y, 0.0, 1.0) : _GLF_FUZZED(vec3(-347.501, 0.2, -83.10)))))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), false, _GLF_IDENTITY(true, false || (true)))))))))))), true, false)))), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((_GLF_IDENTITY(4593.0468, max(4593.0468, 4593.0468))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(length(0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-373.069)), bool(false)))), 1.0)), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), max(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0)))))) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), vec3(_GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), min(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), _GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), max(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0)))))))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) / 1.0), float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))))))), true, false))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((_GLF_IDENTITY(4593.0468, max(4593.0468, 4593.0468))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(length(0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-373.069)), bool(false)))), 1.0)), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), max(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0)))))) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), vec3(_GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), min(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), _GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), max(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0)))))))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) / 1.0), float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))))))), true, false))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.52), _GLF_FUZZED((_GLF_IDENTITY(4593.0468, max(4593.0468, 4593.0468))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(length(0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-373.069)), bool(false)))), 1.0)), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), max(mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true)), mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), clamp(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))), bool(true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0))))), (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7.3), (vec3(injectionSwitch.y, 0.0, 1.0))[1], _GLF_FUZZED(-9833.0222)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_FUZZED(-3.8), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))), 1.0)))))) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), bvec2(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), vec3(_GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), min(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), _GLF_IDENTITY(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), max(vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0), vec4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0)))))))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) / 1.0), float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false), false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))))))), true, false))), true))))), true)))))))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) * 1), 1), (true ? clamp(1, _GLF_IDENTITY(1, (1) * 1), 1) : _GLF_FUZZED(abs(62013))))) & 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) / 1u)) | 0u) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), min(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), 0u | (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), min(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), 0u | (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), min(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), 0u | (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), min(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), 0u | (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), uint(uint(uint(_GLF_IDENTITY(1, int(ivec2(1, 1))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec4(1, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) >> (0 & -7063))), 0)), _GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0)))))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false, bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false, true, true))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false))), false, _GLF_IDENTITY(false, (false) || false), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), ~ (~ (_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (_GLF_IDENTITY(0u ^ (subgroup_size), 1u * (_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))))))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), ~ (~ (int(ivec3(0, 1, 0))))))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         subgroupAll(false);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(64, (64) | (64)), 4);
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(abs(-5727.5031)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      barrier();
                     do
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               subgroupAll(true);
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) + 0) & 39222); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((921.044 / -1326.5673)), _GLF_FUZZED(0.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0))), injectionSwitch)).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
