#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat4x3 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat2 _f3;
 bvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 vec3 _f1;
 uint _f2;
 bvec2 _f3;
 bvec3 _f4;
 uvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 vec3 _f1;
 uvec4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 ivec2 _f3;
 _GLF_struct_6 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.1)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.1)), bool(false)))) * 1.0)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), true && (_GLF_IDENTITY(bool(bool(bool(bool(true)))), true && (bool(bool(bool(bool(true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED((false ? 286.732 : (762.258)))), bool(false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
            barrier();
           barrier();
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true))))))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-564.002)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0))), 1.0), (mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (0.0) + 0.0), 0.0))), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0, mix(float(_GLF_FUZZED(5.1)), float((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0)))), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(590.023)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0))), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0)))) * (float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))))))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))))), bool(true))), 1.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[0], (vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(2.8)), bvec2(false, false)))).y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-9.8), (vec2(1.0, 0.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4643.9993) : 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, log(1.0))))) / determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - tan(log(1.0)))))), clamp((false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[0], (vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(2.8)), bvec2(false, false)))).y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-9.8), (vec2(1.0, 0.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4643.9993) : 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, log(1.0))))) / determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - tan(log(1.0)))))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[0], (vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(2.8)), bvec2(false, false)))).y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-9.8), (vec2(1.0, 0.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4643.9993) : 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, log(1.0))))) / determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - tan(log(1.0)))))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[0], (vec2(vec4(injectionSwitch, abs(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(2.8)), bvec2(false, false)))).y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-9.8), (vec2(1.0, 0.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4643.9993) : 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, log(1.0))))) / determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - tan(log(1.0)))))))))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0))), 1.0), (mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], (_GLF_IDENTITY((vec2(1.0, 0.0))[0], mix(float(_GLF_FUZZED(-654.778)), float((vec2(1.0, 0.0))[0]), bool(true)))) / 1.0), _GLF_FUZZED(-44.29)), vec2(_GLF_FUZZED(748.896), (vec2(1.0, 0.0))[1]), bvec2(false, true)))), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0)))).y)), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0)))), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(590.023)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, abs(0.0), sqrt(0.0)), (false ? _GLF_FUZZED(vec4(-7.4, -33.79, 2232.6441, -858.081)) : vec4(0.0, 1.0, abs(0.0), sqrt(0.0))))), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0)))) * (float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))))))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(1.0, 0.0)) * mat2(1.0))))), bool(true))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0))), 1.0), (mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0)))), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(590.023)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), min(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), abs(0.0), sqrt(0.0))), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0)))) * (float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(108.894, 269.059, -49.60, -7.4)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))))))))))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(_GLF_IDENTITY(bvec3(! (bool(true)), true, false), bvec3(bvec3(bvec3(! (bool(true)), true, false)))))))))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), mix(float(_GLF_FUZZED(-5308.7218)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), (_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0))))))) / 1.0)), bool(true))), sqrt(0.0), exp(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2(mat2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), mix(float(_GLF_FUZZED(-5308.7218)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), (_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0))))))) / 1.0)), bool(true))), sqrt(0.0), exp(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0))), 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0)))), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(590.023)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0))), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0)))) * (float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))))))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))))), bool(true))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), float(_GLF_FUZZED(1112.4184)), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))))), _GLF_IDENTITY(vec3(1.0, 0.0, abs(0.0)), vec3(mat2(vec3(1.0, 0.0, abs(0.0)), sqrt(cos(0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, abs(0.0))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-66.27, max(_GLF_IDENTITY(-66.27, (-66.27) / 1.0), -66.27)), -32.10, -9.5, -3.0, -685.474, 757.731, -399.467, -7.6)[1][1]) : dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.5))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4792.5432) : 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), (vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(1.0, 0.0, abs(0.0)))))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat4x2(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))))), 1.0), (mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) + 0.0), 0.0))), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(float(vec2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0)), (true ? float(vec2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0)) : _GLF_FUZZED(-9.5)))), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * 1.0), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), vec3(1.0, 0.0, abs(0.0)))), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(590.023)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(tan(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(abs(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-12.75))), 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0))), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), sqrt(0.0)))) * (float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))))))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, log(exp(0.0)), sqrt(0.0), 0.0, 1.0))))) * 1.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))))), bool(true))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), min(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), min(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), min(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), min(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) >> 0)))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) | (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (int(_GLF_IDENTITY(int(6), max(int(6), int(6))))))))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = ((-67178 * 51476) & _GLF_IDENTITY(0, min(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) * 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0), bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))))), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(true, ! (! (true))) && (_injected_loop_counter > 0))))), true, false)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false), true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (true ? mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, exp(0.0), 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0) : _GLF_FUZZED(mat2x4(-3414.9464, -38.83, 9.1, -335.233, -6670.6385, 4100.9333, -8924.8423, 88.74))))))))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat4(1.0), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_1(ivec4(1), mat3x2(1.0), mat3x4(1.0))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) ^ 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(0 & 32387, (0 & 32387) | (0 & 32387)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0 & 32387, (0 & 32387) | (0 & 32387)), 0 + (_GLF_IDENTITY(0 & 32387, (0 & 32387) | (0 & 32387))))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | ((subgroup_size))) | (subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), clamp(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)))) << 0u))) ^ 0u))), (_GLF_struct_replacement_3.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | ((subgroup_size))) | (subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), clamp(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)))) << 0u))) ^ 0u)))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(ivec4(1), _GLF_struct_4(mat3(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), vec3(1.0), uvec4(1u), uvec4(1u)), _GLF_struct_5(mat2(1.0), vec3(1.0), 1u, bvec2(true), bvec3(true), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (1u) + 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u)))) << 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u)))) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u)))) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u)))) << 0u)))))))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (1u) * 1u)), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, _GLF_IDENTITY(1u, (1u) << 0u)))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) * 1u, clamp((1u) * 1u, (1u) * 1u, _GLF_IDENTITY((1u) * 1u, ((1u) * 1u) - 0u)))), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), max(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), max(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | 0u) * 1u), 1u, 1u)))))))), (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))))), clamp(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), (~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))) << uvec3(0u, 0u, 0u)), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))), ~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u | (1u)), 1u), ~ (~ (clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u | (1u)), 1u)))))))))) - uvec3(0u, 0u, 0u)), 1u), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), 1u)), (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), min(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))) | (clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))))), (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) >> 0u), 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 1u)), 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), uint(uvec4(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u, 0u))), _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u)))))))) | ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) + 0u)) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, max(1u, 1u))), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) >> 0u), 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 1u)), 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), uint(uvec4(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u, 0u))), _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u)))))))) | ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) + 0u)) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, max(1u, 1u))), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) >> 0u), 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 1u)), 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), uint(uvec4(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u, 0u))), _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u)))))))) | ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) + 0u)) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 1u, 1u), clamp(clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, max(1u, 1u))), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))) >> 0u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) ^ 0u), 1u))))))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) | 0u)) | (1u)), 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) - 0u), 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))) >> 0u) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ((105054u % 76971u) & 0u) | (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))), ((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * _GLF_IDENTITY(1u, ~ (~ (1u)))), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, max(_GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, ~ (~ (_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, max(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u, (_GLF_IDENTITY((1u), ((1u)) / 1u) * 1u) << 0u)))))), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u))))), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u)))))) >> uvec3(0u, 0u, 0u)), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))))) - uvec3(0u, 0u, 0u)), 1u), (false ? _GLF_FUZZED(uvec4(100983u, 118856u, 189322u, 153995u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (1u) | (1u))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))) >> 0u) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ((105054u % 76971u) & 0u) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ((105054u % 76971u) & 0u) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))) + 0u), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), uint(uint(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), 0u, 1u, 0u)), 1u * (uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), uint(uint(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), 0u, 1u, 0u))))), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) * 1u), 1u, 1u)))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))) + uvec3(0u, 0u, 0u))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))), ((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))) | ((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) ^ 0u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))), 1u))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u))), 1u, 1u))) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packHalf2x16(vec2(9.7, 17.87))) : 1u))), 1u, 1u))))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ((uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))) | uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (1u) | 0u)), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))), (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, uint(uvec4(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u, (0u ^ 0u))))), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) * 1u, uint(uvec4((1u) * 1u, 0u, 0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) | (_GLF_IDENTITY(1u, (1u) * 1u))))), 1u, 1u))))))) - uvec3(0u, 0u, 0u)), 1u)) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u)))))), ((_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u))))))) - 0u) + 0u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), max((_GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(1u, (1u) * 1u)))) | (_GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), 1u * (_GLF_IDENTITY(1u, (1u) * 1u))), 1u, 1u)) - 0u)) | (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))))), clamp(~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(subgroup_size))) * (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), max(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u))))), (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), max(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4(1u, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))) * 1u), 1u, 1u)))))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), clamp(~ (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)) >> 0u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))), ~ (uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))))))) - uvec3(0u, 0u, 0u)), 1u))))))))), 1), ivec2(1), _GLF_struct_6(mat4x3(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.3)), bool(false))), 0.0, 1.0, 1.0)))), uvec2(1u), bvec4(true), mat2(1.0), bvec2(true), bvec3(_GLF_IDENTITY(true, (true) || false))), mat3x2(1.0)), mat3x4(1.0), uvec2(1u), _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, clamp(_GLF_struct_replacement_3.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, max(_GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base)), _GLF_struct_replacement_3.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, clamp(_GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_3.workgroup_base), clamp(uint(_GLF_struct_replacement_3.workgroup_base), uint(_GLF_struct_replacement_3.workgroup_base), uint(_GLF_struct_replacement_3.workgroup_base))))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(4), int(4))), (false ? _GLF_FUZZED(98521) : ((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) << 0)))) >> _GLF_IDENTITY(int(4), int(4)), (((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)))) | _GLF_IDENTITY((((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_IDENTITY(ivec2((((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) << 0))) | 0), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) + _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) / 1)))), (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (ivec2((((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), min(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), 1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))) | (1 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 26.06))), bool(false))))))))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_struct_replacement_8.next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, clamp(7, 7, 7))) + 0))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6))), ! (_GLF_IDENTITY(! (_injected_loop_counter > ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))), bool(bool(! (_injected_loop_counter > ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))))))))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, false, false)))) && true)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false)) && true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
          {
          }
         else
          {
           barrier();
          }
        }
       atomicStore(buf[_GLF_struct_replacement_8.next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(4.3, float(mat3(_GLF_IDENTITY(4.3, (true ? 4.3 : _GLF_FUZZED(-50.00))), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0))))), bool(false)))) / 1.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - vec2(0.0, 0.0)), vec2(0.0, 1.0)))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(_GLF_IDENTITY(false, (false) || false))))) / 1.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), vec2(0.0, 1.0)))) : _GLF_FUZZED(-94.03))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false, true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, false, false)))))))
                barrier();
              }
             else
              {
              }
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true))))))) || false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true), true, false))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(28.49)), vec2(_GLF_FUZZED(-8682.3149), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(vec4(6053.8462, -9.1, 50.69, -8069.9980).s)), float((injectionSwitch)[1]), bool(true)))), bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> (1 ^ 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), _GLF_IDENTITY((mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0))) * mat3(1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0))) * mat3(1.0)))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false || (_GLF_DEAD(false))), false, true))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}
