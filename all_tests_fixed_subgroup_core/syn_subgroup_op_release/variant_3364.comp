#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, ((false) && true) || false), false, false, true))), ((false) && true) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true), true)), false)))), false)))))))), false)))))) || false), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)) || false)))))))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ _GLF_IDENTITY((uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u))) << uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, ~ (~ (3u)))), uvec3(3u))), ((_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ _GLF_IDENTITY((uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), uvec3(uvec4(~ (uvec3(0u, 0u, 0u)), 0u))), 0u)))))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, ~ (~ (3u)))), uvec3(3u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) * (_GLF_IDENTITY(uvec3(3u), ~ (~ (uvec3(3u)))))), min(uvec3(3u), uvec3(3u)))))), (_GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) | (clamp(1u, 1u, 1u)))) | (clamp(1u, 1u, 1u))) : _GLF_FUZZED(subgroup_id))))) + 0u))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true)))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(-7.3)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(-7.3)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.6, -209.732)))).x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, 0u + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(30123u) : (workgroup_id))), ((workgroup_id)) | ((workgroup_id)))) : _GLF_FUZZED(subgroup_id)));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) << _GLF_IDENTITY(0u, min(0u, 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)))))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)))))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)))))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u))) | uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)), 0u + (uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u)), (uint(_GLF_IDENTITY(uint(~ (subgroup_size)), (uint(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))) ^ 0u))) * 1u))))))))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)))), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | 0u), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u) : 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), max(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) >> 0u)))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ _GLF_IDENTITY((~ (subgroup_id)), uint(uvec4((~ (subgroup_id)), 1u, 1u, 1u)))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))) * 1u)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), (uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))))), uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (0u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0u), ((0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), max((~ (0u)), (~ (0u)))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), min((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u)))))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))))), (uvec2(uvec2(uvec2(0u, 0u)))) - uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-59.65, -9051.1034)) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | 0u), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u) : 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), max(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) >> 0u)))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ _GLF_IDENTITY((~ (subgroup_id)), uint(uvec4((~ (subgroup_id)), 1u, 1u, 1u)))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))) * 1u)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), (uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))))), uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (0u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0u), ((0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), max((~ (0u)), (~ (0u)))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), min((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u)))))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))))), (uvec2(uvec2(uvec2(0u, 0u)))) - uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-59.65, -9051.1034)) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))) << uvec2(0u, 0u))) << uvec2(0u, 0u)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))), (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u ^ ((0u) + 0u))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), ~ (~ (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), (uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), 0u)) + uvec2(0u, 0u))) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u))))) ^ uvec2(0u, 0u))))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(0u, 0u))), (uvec2(uvec2(uvec2(0u, 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)))))) << uvec2(0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))), (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u ^ ((0u) + 0u))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), ~ (~ (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), (uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), 0u)) + uvec2(0u, 0u))) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u))))) ^ uvec2(0u, 0u))))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(0u, 0u))), (uvec2(uvec2(uvec2(0u, 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)))))) << uvec2(0u, 0u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), 0u, 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))), (0u) << 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, 0u ^ ((0u) + 0u))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u))), ~ (~ (uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) << 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u), ~ (subgroup_id)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))) | (~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))))))))) * subgroup_size)))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), (uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), 0u)) + uvec2(0u, 0u))) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u))))) ^ uvec2(0u, 0u))))) ^ _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(0u, 0u))), (uvec2(uvec2(uvec2(0u, 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)))))) << uvec2(0u, 0u))))))) | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicExchange(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), (subgroup_size) + 0u))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, log(abs(1.0)), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat4(vec2(1.0, 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(623.543) : exp(0.0))), 0.0, 0.0))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(sqrt(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4x3(0.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-2.4, -8.1, 784.684, 8.6, 45.05, -8883.8648, -584.326, -56.88, -45.07, 9814.6562, -7.4, -9566.0823)))))))), _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat4(vec2(1.0, 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(exp(0.0), 0.0, 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9203.8685)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y)))) - vec2(0.0, 0.0))))))), float(_GLF_FUZZED(-192.134)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED((+ 47.12))))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY((round(length(normalize(vec2(1.0, 1.0))))) * _GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED((-0.8 * -552.042))), float((round(length(normalize(vec2(1.0, 1.0))))) * _GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true)))), round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED((+ 47.12))))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), (round(length(normalize(vec2(1.0, 1.0))))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(4.5, -26.53, 8324.0954, 425.268, 21.60, 2136.2939, -1.0, 7.2))))))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED((+ 47.12))))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) * _GLF_IDENTITY(1.0, (1.0) + 0.0)), round(length(_GLF_IDENTITY(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (true ? normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) : _GLF_FUZZED(vec2(-27.08, 188.367)))))))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat4x3(_GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (round(length(normalize(vec2(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0)))))))), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y)) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))), length(vec2(0.0, 0.0)), 1.0), mat2(1.0) * (mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), length(vec2(0.0, 0.0)), 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 0.0))), length(vec2(0.0, 0.0)), 1.0), mat2(1.0) * (mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), injectionSwitch.y)) - 0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(38.10)), bool(false))), 1.0))))))), mix(float(_GLF_FUZZED((586.145 / -3.9))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) * _GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(vec4(-141.540, -8.4, 86.67, -776.973))) : injectionSwitch)).x)) > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((586.145 / -3.9))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED((586.145 / -3.9))), float(injectionSwitch.x), bool(true))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) * 1.0, float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) + 0.0)) * 1.0, min((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y), max(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y), _GLF_IDENTITY((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y)), min((clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y)), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y)))) / 1.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))))) * 1.0, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) * 1.0)), exp(0.0), 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(32.59), _GLF_FUZZED(37.64)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(acosh(304.884)))), _GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(782.548) : _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(4.5)), vec2(_GLF_FUZZED(-8.3), (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))).y)))), false, true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)), float(mat4x2(float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0))), length(vec2(0.0, 0.0)), 1.0), mat2(1.0) * (mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), length(vec2(0.0, 0.0)), 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.4))), 1.0)), 1.0)), 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), length(vec2(0.0, 0.0)), 1.0), mat2(1.0) * (mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0), vec4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(2498.4329))) : _GLF_FUZZED(1.5))))))))), length(vec2(0.0, 0.0)), 1.0))))))), mix(float(_GLF_FUZZED((586.145 / -3.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-90.49) : float(injectionSwitch.x))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-90.49) : float(injectionSwitch.x))))), min(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(-90.49), (true ? _GLF_FUZZED(-90.49) : _GLF_FUZZED(5720.3762))) : float(injectionSwitch.x))))), (float(float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-90.49) : float(injectionSwitch.x)))))) / 1.0), float(float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-90.49) : float(injectionSwitch.x)))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))))))))) * _GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, exp(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))), 0.0)))), 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, exp(0.0), 0.0, 1.0)))))))) && true)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((586.145 / -3.9))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED((586.145 / -3.9))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), bool(true))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.3))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))).y, injectionSwitch.y))) * 1.0, float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) * 1.0, min((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))).y : _GLF_FUZZED(3428.6471)))))) * cos(0.0)), injectionSwitch.y))) * 1.0, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec2(injectionSwitch))).y, injectionSwitch.y))) * 1.0)), exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(transpose(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))), log(1.0), 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(acosh(304.884)))), (true ? _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(acosh(304.884)))) : _GLF_FUZZED(6.2))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(4.5, (4.5) - determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat3(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(_GLF_FUZZED(-8.3), (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(4.5, (4.5) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), vec2(_GLF_FUZZED(-8.3), (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(4.5, (4.5) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), vec2(_GLF_FUZZED(-8.3), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), vec4(mat3x2(vec4(injectionSwitch, 1.0, 1.0), 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)))))))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(inversesqrt((vec2(-903.379, -8.3) + -31.80)))))).y)))), false, true, true)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3388.0550, 18.15)))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-0.7, max(_GLF_IDENTITY(-0.7, (-0.7) + 0.0), -0.7))) : injectionSwitch.y)))))), true, false, false))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true), false, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))) || false), false))))), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), true && (false || ((false))))) && _GLF_IDENTITY(true, false || (true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.46)), bool(false))), injectionSwitch.y)))))), float(_GLF_FUZZED(42.34)), bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}
