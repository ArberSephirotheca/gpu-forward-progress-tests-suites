#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), false || ((bool(bool(false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) || false), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && ((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true)))))))))), false, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && ((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true)))))))))), false, false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && ((_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8607.1169 * (- -362.980)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)), (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))) / 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0 * (float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y, true)))))))))), false, false)))))) && true)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.x = num_workgroup, ~ (~ (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.x = num_workgroup)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, (1u) | (1u)), ~ (_GLF_IDENTITY(~ (0u ^ 1u), (~ (_GLF_IDENTITY(0u ^ 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ 1u)))) | (~ (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, min(0u ^ 1u, 0u ^ 1u))) | (0u ^ 1u)))))))))), 1u))), max(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, 1u, 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, min(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size))))).y, 0u | (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, (1u) | (1u)), ~ (_GLF_IDENTITY(~ (0u ^ 1u), (~ (_GLF_IDENTITY(0u ^ 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ 1u)))) | (~ (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, min(0u ^ 1u, 0u ^ 1u))) | (0u ^ 1u)))))))))), 1u))), max(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, 1u, 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, min(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size))))).y, 0u | (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.y)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, (1u) | (1u)), ~ (_GLF_IDENTITY(~ (0u ^ 1u), (~ (_GLF_IDENTITY(0u ^ 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ 1u)))) | (~ (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, min(0u ^ 1u, 0u ^ 1u))) | (0u ^ 1u)))))))))), 1u))), max(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, uint(uvec3(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z, 1u, 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, min(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size))))).y, 0u | (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.y)), 0u, 1u, 1u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)) | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)) - 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u))) + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id))) | 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << 0u)) - 0u) + subgroup_local_id))) + 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), max(uint(uint((subgroup_size))), uint(uint((subgroup_size)))))) >> 0u)), (true ? clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (subgroup_size))) >> 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), _GLF_IDENTITY((subgroup_size) >> 0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) >> 0u, ((subgroup_size) >> 0u) | ((subgroup_size) >> _GLF_IDENTITY(0u, ~ (~ (0u)))))), ((_GLF_IDENTITY((subgroup_size) >> 0u, (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u) >> 0u) | ((subgroup_size) >> 0u)))) ^ 0u))))) : _GLF_FUZZED(16773u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), _GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), min((virtual_gid), (virtual_gid)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u)))))), 0u ^ ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u)))))))) - 0u) + 0u)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), max((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), uint(uint((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))))))) - 0u, ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u) + 0u)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u, ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u) + 0u), (true ? _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u, ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u) + 0u) : _GLF_FUZZED(uint(27282))))), 1u, ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 1u, 1u))), uint(1u)))))), ~ (~ (_GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, (_GLF_IDENTITY((virtual_gid) - 0u, ((virtual_gid) - 0u) | (_GLF_IDENTITY((virtual_gid) - 0u, 0u | ((virtual_gid) - 0u))))) | ((virtual_gid) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))) - 0u, ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u) + 0u)), _GLF_IDENTITY(1u, (1u) << 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))) | (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u, 0u | ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u)), ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) << 0u))))) - 0u) + 0u)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)), min((virtual_gid), (virtual_gid)))) - 0u) + 0u)), 1u, ((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (virtual_gid), 0u | (_GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - 0u, ((_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) - _GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) | (virtual_gid))))))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) / 1u))))], uint(1), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ (~ (64))), 64)), 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false))))))))) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), false)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false))))))))) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(false, (false) && true))) || false), ! (! (((bool(_GLF_IDENTITY(false, (false) && true))) || false)))), bool(bool(! ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false))))))))) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true), false)))), false)))))), false))), _GLF_IDENTITY(true, ! (! (true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0, 1.0, sin(0.0)), transpose(transpose(mat2x4(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0, 1.0, sin(0.0))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))))) - virtual_gid), uint(uvec3((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))))) - virtual_gid), 1u, 1u)))) : _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), 1u * (((subgroup_local_id)))), (_GLF_IDENTITY(((subgroup_local_id)), 1u * (((subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), 1u * (((subgroup_local_id)))), (true ? _GLF_IDENTITY(((subgroup_local_id)), 1u * (((subgroup_local_id)))) : _GLF_FUZZED(bitfieldExtract(subgroup_local_id, 43177, -84631)))))))) + 0u))) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(93.95)))) ^ ((1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
