#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false))), ! (! (bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), false))))), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)))))) || false)))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), bool(bvec3(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), false, true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false))), ! (! (bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), false))))), true))) && true, ((bool(bvec2(_GLF_DEAD(false), true))) && true) || false)))))) || false)))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), bool(bvec3(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), false, true))))))))), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), true && ((bool(bool(_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))), ! (_GLF_IDENTITY(! (! (! (bool(bool(_GLF_DEAD(false)))))), (! (! (! (bool(bool(_GLF_DEAD(false))))))) || false))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false)))) && true), false || (_GLF_DEAD(false))))))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (false)))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)) || false)), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)) || false)), true, false))))))))) && (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))), false, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))), false, false), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)))) : uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, 1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)), uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 0u, 0u)), 0u) ^ (_GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)))) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))[1], gl_NumWorkGroups[2])).x, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u))) - 0u), 1u))))))), uint(uint(uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 1u * (1u)))), 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)) : uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u))) | (1u)), 1u, 1u)), ((false ? _GLF_FUZZED(uvec4(107234u, 57630u, 38141u, 106445u)) : uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))), gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (! (! (bool(_GLF_IDENTITY(false, false || (false)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(false, false || (false))) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) || (false))), true)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || (! (! (bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false))), true)), true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false))), true)), true)))))), true, true)))))))))))))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(! (false), true), false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(! (false), true), false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((false), true && ((false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true))))))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), true)), false)), false)))))))), true)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(! (false), true), false), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(! (false), true), false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec4((false), true, false, false))) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, true, false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))), bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false))))), ! (! ((bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec4((false), true, false, false))) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec4((_GLF_IDENTITY((false), true && ((false)))), false, true, false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))), bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)))), false), true))), true)))))), true && (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec2(true, false)))))), bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false))))))) || false)))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false || (false), true && (false || (false))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (! (true && (false)))), false)))), _GLF_IDENTITY(false, bool(bool(false))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (false)), false || (false))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (! (true && (false)))), false)))), _GLF_IDENTITY(false, bool(bool(false))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (false)), false || (false))) && true))))))))), false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), (bool(bvec4(_GLF_DEAD(false), false, false, false))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), false || (((false)))))) || false)) && true) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-466.545), _GLF_FUZZED(8.8)), bvec2(false, false))))), mix(vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-2.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(54.81)), bool(false))) : _GLF_FUZZED(552.475))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(54.81)), bool(false))) : _GLF_FUZZED(552.475))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0))), (float(mat2x3((injectionSwitch)[0], abs(exp(0.0)), 0.0, 1.0, 1.0, abs(1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(54.81)), bool(false))) : _GLF_FUZZED(552.475)))))))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(21.99)))))), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u | 0u))) : workgroup_base), max((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)))) * 1u), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))), clamp((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)) ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), 1u), (uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), 1u), min(uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), 1u), uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))))), 1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) | (_GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) + 0u)))), ((~ _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) | (_GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) + 0u))))) | (_GLF_IDENTITY((~ _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) | (_GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) + 0u)))), ((~ _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) | (_GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) + 0u))))) | 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), clamp(0u ^ (subgroup_size), 0u ^ (subgroup_size), 0u ^ (subgroup_size))))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u)))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(uvec2(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(uvec2(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(uvec2(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(uvec2(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(uvec2(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), (min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), (min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) ^ 0u)), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), (min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) ^ 0u)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), (min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) ^ 0u))))) << 0u) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), min(subgroup_id, subgroup_id)) * subgroup_size, (0u | 0u) + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, 1u))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(134762u) : max(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & _GLF_IDENTITY((1u & 1u), 0u ^ ((1u & 1u))))), subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))) : _GLF_FUZZED(num_workgroup))) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), (uint(0u)) + 0u)))), (uint(0u)) >> 0u))) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (workgroup_base)), workgroup_base))))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x)))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x)))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x))))) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x)))), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x)))), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x))))) | 0u), uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 1.0, 0.0))).x))))))))) ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u | (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) >> 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (true ? _GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))) - 0u))), (clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))) / 1u)) : _GLF_FUZZED(subgroup_local_id)))) * subgroup_size, (0u | 0u) + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u)))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(num_workgroup))) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base) ^ 0u)), 0u ^ _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), clamp(((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), min(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))) - 0u)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size, (0u | 0u) + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) * subgroup_size)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), clamp(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(33838u) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base) ^ 0u)), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (0u | 0u) + (subgroup_id))) / 1u), min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size, (0u | 0u) + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) * subgroup_size)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), clamp(max(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), uint(uint(~ (subgroup_size))))) >> 0u))), subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(33838u) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) : _GLF_FUZZED(num_workgroup)))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) : workgroup_base), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), 0u ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : workgroup_base), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(num_workgroup) : uint(1u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) + uvec3(0u, 0u, 0u))) | (uvec3(subgroup_id, 0u, 1u))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id)))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-773.286)), vec2(_GLF_FUZZED(-288.197), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u)))))) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) / 1u)))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(100239u) : _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)))), _GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))), clamp((_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))), (_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))), (_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))))), (_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))), (_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))))) | ((0u | 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u))))), (true ? _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(94252u) : 0u))), _GLF_IDENTITY(1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))), 1u * (_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))), clamp(1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))), 1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))), 1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u))))))))) : _GLF_FUZZED(num_workgroup)))) | ((0u | 0u)), (_GLF_IDENTITY((0u | 0u), 1u * (_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_size) : (0u | 0u)))))) | ((0u | 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id), _GLF_IDENTITY(max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)), (max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))) / 1u) : _GLF_FUZZED(workgroup_base))), max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(num_workgroup))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(31.24)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))).x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true))))))))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), (injectionSwitch.y) - abs(0.0)), injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, sqrt(0.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 1.0, length(0.0)))) > injectionSwitch.y), true, true, false))), true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.62)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(19.03) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-46.62)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.62)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(19.03) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-46.62)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)), 1u), (uvec4(subgroup_id * subgroup_size, 0u, 1u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(38121u) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(uint(0u), uint(0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u)) % subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))) < subgroup_size, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, 0 | (2))))))), clamp((_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, 0 | (2))))))), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, 0 | (2))))))), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, 0 | (2))))))))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))), ((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(-8.9)) : _GLF_IDENTITY(2, (2) / 1))))))) | 0) | 0 : _GLF_FUZZED(66602))), (0 | 0)))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0), clamp(2, 2, 2)))) | 0) | 0 : _GLF_FUZZED(_GLF_IDENTITY(66602, (66602) | (66602))))), (0 | 0))))), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0), clamp(2, 2, 2)))) | 0) | 0 : _GLF_FUZZED(_GLF_IDENTITY(66602, (66602) | (66602))))), (0 | 0))))), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0), clamp(2, 2, 2)))) | 0) | 0 : _GLF_FUZZED(_GLF_IDENTITY(66602, (66602) | (66602))))), (0 | 0))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), float(mat3x2(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))), (mat3x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), float(mat3x2(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0))))) * mat3(1.0)))).y)) || false)) || (_GLF_IDENTITY(false, false || (false))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.8)), bool(false)))), float(mat3x4(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.8)), bool(false)))), log(1.0), sqrt(0.0), 0.0, 1.0, exp(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true)))))) && true, true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true)))))) && true)))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false)))) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true))))))))) && true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(degrees(-2.9)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(degrees(-2.9)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-895.083, -501.252)))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-270.613, 15.12)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.0, -1603.0542)))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))), mix(vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(57.94)), vec2(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))))[1], max(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))))[1], ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))))[1]))), bvec2(true, true)))), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (sin(vec2(0.0, 0.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, sin(0.0)), (mat4(injectionSwitch, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(float(mat4x2((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[0], 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), max(float(mat4x2((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[0], 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(mat4x2((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[0], 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), _GLF_FUZZED(float(-79721))), vec2(_GLF_FUZZED(float(131863u)), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))), true), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(false)))))))))))), bvec2(bvec4(bvec2(false, false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((- 0.6)), _GLF_FUZZED(945.168)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(int(2)))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(2, int(int(2)))), 1, 1)), (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(2, int(int(2)))), 1, 1)), (int(ivec3(int(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))), (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879)))))) | (int(_GLF_IDENTITY(int(int(2)), (true ? int(int(2)) : _GLF_FUZZED((false ? -15426 : -29879))))))))))))), min(_GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), (int(int(2))) | (int(int(2))))) ^ 0), int(int(2)))))), 1, 1))) - 0)) | 0))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(22.87), _GLF_FUZZED((5.9 + -43.85))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(22.87), _GLF_FUZZED((5.9 + -43.85))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(22.87), _GLF_FUZZED((5.9 + -43.85))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)), false)) : _GLF_FUZZED(vec2(429.765, 5.5))))) / sqrt(vec2(1.0, 1.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) + 0), 1)), (1) | (1)), 1), (ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)) - ivec2(0, 0))))]), vec2(_GLF_FUZZED(22.87), _GLF_FUZZED((5.9 + -43.85))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(22.87), clamp(_GLF_IDENTITY(_GLF_FUZZED(22.87), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(22.87), (_GLF_FUZZED(22.87)) - 0.0))), _GLF_FUZZED(22.87), _GLF_FUZZED(22.87))), _GLF_FUZZED((5.9 + -43.85))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5543.5396, 60.21)) : injectionSwitch)))).x > injectionSwitch.y))))), false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_id))))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), false))) && ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(91.44), (false ? _GLF_FUZZED(-27.22) : _GLF_FUZZED(91.44))), _GLF_FUZZED(417.410)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(35.47)), bvec2(false, false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5628.4064)), float(injectionSwitch.x), bool(true)))), 1.0))).y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
