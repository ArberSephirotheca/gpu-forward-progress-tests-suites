#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.6) : injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-5.3, -8.0)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))))) || false), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), _GLF_IDENTITY(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))) || false))))), (_GLF_IDENTITY(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))) || false))))), (_GLF_IDENTITY(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))) || false))))), false || (((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))) || false)))))))) || false)) && true) && true), bool(bool((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))))) || false)))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(-65.82))) < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4((false), false, true, false))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(-65.82))) < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4((false), false, true, false))), false)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (injectionSwitch.x > injectionSwitch.y)) || (false)))), (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))) || false), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))) || false)))))))
              {
               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sqrt(1.0))))))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), 1)), 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, 0 | (0))), ((0 ^ _GLF_IDENTITY(0, 0 | (0)))) ^ 0), ~ _GLF_IDENTITY((~ ((0 ^ _GLF_IDENTITY(0, 0 | (0))))), int(int((~ ((0 ^ _GLF_IDENTITY(0, 0 | (0)))))))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) - 0) ^ (0 << _GLF_IDENTITY(int(2), int(2)))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(254.964) : (1.0)))) / 1.0))))), ((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), min((1.0), (1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0), (mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))))), cos(0.0), 1.0, 1.0, 1.0)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7837.2871) : 1.0)), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(normalize(1.6)) : _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false))), float(_GLF_IDENTITY(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), min(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))))))))) - 0.0) * (1.0))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), max(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2672.7887)))), float(_GLF_FUZZED(45.30)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(90.33)), bool(false))), log(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0) * (1.0), (false ? _GLF_FUZZED(-391.521) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (false ? _GLF_FUZZED(4004.8585) : _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED((mat2(9901.7050, 938.063, -4.1, -9479.4629) * vec2(-571.559, -89.03))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))))).x, (false ? _GLF_FUZZED(log2(4.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))).x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(round(injectionSwitch)))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), transpose(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * 1.0))) - 0.0) * (1.0)))))), (transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(mat2x3(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-5357.6646, 56.61, -456.315, fract(44.50))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29))) / mat2(1.0, 1.0, 1.0, 1.0)))) : mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-6.2 / -2.6))), bool(false))), 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, 1.0, 0.0, log(1.0), sqrt(1.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2471.3193) : 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0)), 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.38)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.06))) : _GLF_FUZZED(9.2))), 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), sqrt(1.0) * (float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-710.361) : injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(mix(vec2(-9.6, 6.4), injectionSwitch, bvec2(false, false)), injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(59.93, 9.3, 2048.3642, 36.01)))))) + _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), ((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(vec4(4145.4991, -60.09, -1.5, -0.0).p), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(1982.9469)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch) * mat2(1.0)), max(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-43.62), _GLF_IDENTITY((max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))[1], mix(float((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), float(_GLF_FUZZED(24.64)), bool(false)))), vec2((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(8.8)), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false))))))) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0) : _GLF_FUZZED(1951.4488))), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))))).x) + 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(254.964) : (1.0)))) / 1.0))))), ((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), min((1.0), (1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0), (mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))))), cos(0.0), 1.0, 1.0, 1.0)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7837.2871) : 1.0)), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(normalize(1.6)) : _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false))), float(_GLF_IDENTITY(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), min(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))))))))) - 0.0) * (1.0))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), max(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2672.7887)))), float(_GLF_FUZZED(45.30)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(90.33)), bool(false))), log(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0) * (1.0), (false ? _GLF_FUZZED(-391.521) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (false ? _GLF_FUZZED(4004.8585) : _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED((mat2(9901.7050, 938.063, -4.1, -9479.4629) * vec2(-571.559, -89.03))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))))).x, (false ? _GLF_FUZZED(log2(4.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))).x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(round(injectionSwitch)))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), transpose(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * 1.0))) - 0.0) * (1.0)))))), (transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(mat2x3(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-5357.6646, 56.61, -456.315, fract(44.50))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29))) / mat2(1.0, 1.0, 1.0, 1.0)))) : mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-6.2 / -2.6))), bool(false))), 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, 1.0, 0.0, log(1.0), sqrt(1.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2471.3193) : 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0)), 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.38)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.06))) : _GLF_FUZZED(9.2))), 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), sqrt(1.0) * (float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-710.361) : injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(mix(vec2(-9.6, 6.4), injectionSwitch, bvec2(false, false)), injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(59.93, 9.3, 2048.3642, 36.01)))))) + _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), ((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(vec4(4145.4991, -60.09, -1.5, -0.0).p), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(1982.9469)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch) * mat2(1.0)), max(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-43.62), _GLF_IDENTITY((max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))[1], mix(float((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), float(_GLF_FUZZED(24.64)), bool(false)))), vec2((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(8.8)), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false))))))) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0) : _GLF_FUZZED(1951.4488))), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))))).x) + 0.0))) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(254.964) : (1.0)))) / 1.0))))), ((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), min((1.0), (1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0), (mat2((1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(6636.7416))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0)))))), cos(0.0), 1.0, 1.0, 1.0)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7837.2871) : 1.0)), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(normalize(1.6)) : _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false))), float(_GLF_IDENTITY(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), min(float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))), float(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-7234.5934)), bool(false)))))))))) - 0.0) * (1.0))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), max(float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat4x3(0.0, 1.0, sin(length(vec2(0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2672.7887)))), float(_GLF_FUZZED(45.30)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(90.33)), bool(false))), log(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0) * (1.0), (false ? _GLF_FUZZED(-391.521) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (false ? _GLF_FUZZED(4004.8585) : _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED((mat2(9901.7050, 938.063, -4.1, -9479.4629) * vec2(-571.559, -89.03))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))))).x, (false ? _GLF_FUZZED(log2(4.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(5.0) : (1.0))) - 0.0) * (1.0)))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), (mat2x3(transpose(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))) * mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))).x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(round(injectionSwitch)))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), transpose(_GLF_IDENTITY(transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * 1.0))) - 0.0) * (1.0)))))), (transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(mat2x3(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-5357.6646, 56.61, -456.315, fract(44.50))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29)), (_GLF_FUZZED(mat2(3956.3149, 699.050, -1833.8505, -43.29))) / mat2(1.0, 1.0, 1.0, 1.0)))) : mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-6.2 / -2.6))), bool(false))), 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))))))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, 1.0, 0.0, log(1.0), sqrt(1.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2471.3193) : 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0)), 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.38)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.06))) : _GLF_FUZZED(9.2))), 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), sqrt(1.0) * (float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0, (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(447.520)), bool(false)))) - 0.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-710.361) : injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(mix(vec2(-9.6, 6.4), injectionSwitch, bvec2(false, false)), injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(59.93, 9.3, 2048.3642, 36.01)))))) + _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0)))), ((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(vec4(4145.4991, -60.09, -1.5, -0.0).p), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(1982.9469)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch) * mat2(1.0)), max(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-43.62), _GLF_IDENTITY((max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))[1], mix(float((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), float(_GLF_FUZZED(24.64)), bool(false)))), vec2((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(8.8)), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false))))))) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))) * (1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0) : _GLF_FUZZED(1951.4488))), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0))))), (mat2(_GLF_IDENTITY(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0))) + (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0) * (1.0))))), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))))).x) + 0.0))) > injectionSwitch.y)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true))))))) && true) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(float(-92023))), vec2(_GLF_FUZZED(-157.319), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (~ (1)))]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat2(max(1.0, 1.0), 1.0, 1.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(49898) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) + 0))), (0) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 & 1) & 1)), (ivec2(_injected_loop_counter, (_GLF_IDENTITY((1 & 1), ((1 & 1)) * 1) & 1))) ^ ivec2(0, 0)))) < 1, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 & 1) & 1)), (ivec2(_injected_loop_counter, (_GLF_IDENTITY((1 & 1), ((1 & 1)) * 1) & 1))) ^ ivec2(0, 0)))) < 1), bool(bvec3(bool(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 & 1) & 1)), (ivec2(_injected_loop_counter, (_GLF_IDENTITY((1 & 1), ((1 & 1)) * 1) & 1))) ^ ivec2(0, 0)))) < 1), true, false)))))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         for(int _injected_loop_counter = ((_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(4), int(4)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) / (1 & 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) / (1 & 1))))), (int((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) / (1 & 1)))))) ^ 0)), 1 * (int(_GLF_IDENTITY(int((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) / (1 & 1))))), (int((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), (int(4)) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) / (1 & 1)))))) ^ 0)))))), _GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | 0), 4))) - 0)), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4))))) * 1))))))) * 1) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) - (0 >> _GLF_IDENTITY(int(6), int(6))))) / 1)) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED((_GLF_IDENTITY((mat4x3(-1367.3340, 7.0, _GLF_IDENTITY(-3425.7241, min(-3425.7241, _GLF_IDENTITY(-3425.7241, mix(float(_GLF_FUZZED(9700.7207)), float(-3425.7241), bool(true))))), 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, _GLF_IDENTITY(-1.0, min(-1.0, -1.0)), -1.1) , _injected_loop_counter), (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, _GLF_IDENTITY(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(-8755.3220))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0)), 0.0 + (float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0))))), -1.8, -1.0, -1.1) , _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * (0 | 1))) | (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, -1.0, -1.1) , _injected_loop_counter)))))) | 0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED((_GLF_IDENTITY((mat4x3(-1367.3340, 7.0, _GLF_IDENTITY(-3425.7241, min(-3425.7241, _GLF_IDENTITY(-3425.7241, mix(float(_GLF_FUZZED(9700.7207)), float(-3425.7241), bool(true))))), 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, _GLF_IDENTITY(-1.0, min(-1.0, -1.0)), -1.1) , _injected_loop_counter), (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, _GLF_IDENTITY(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(-8755.3220))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0)), 0.0 + (float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0))))), -1.8, -1.0, -1.1) , _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * (0 | 1))) | (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, -1.0, -1.1) , _injected_loop_counter)))))) | 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED((_GLF_IDENTITY((mat4x3(-1367.3340, 7.0, _GLF_IDENTITY(-3425.7241, min(-3425.7241, _GLF_IDENTITY(-3425.7241, mix(float(_GLF_FUZZED(9700.7207)), float(-3425.7241), bool(true))))), 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, _GLF_IDENTITY(-1.0, min(-1.0, -1.0)), -1.1) , _injected_loop_counter), (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, _GLF_IDENTITY(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(-8755.3220))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0)), 0.0 + (float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0))))), -1.8, -1.0, -1.1) , _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * (0 | 1))) | (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, -1.0, -1.1) , _injected_loop_counter)))))) | 0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED((_GLF_IDENTITY((mat4x3(-1367.3340, 7.0, _GLF_IDENTITY(-3425.7241, min(-3425.7241, _GLF_IDENTITY(-3425.7241, mix(float(_GLF_FUZZED(9700.7207)), float(-3425.7241), bool(true))))), 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, _GLF_IDENTITY(-1.0, min(-1.0, -1.0)), -1.1) , _injected_loop_counter), (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, _GLF_IDENTITY(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(-8755.3220))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0)), 0.0 + (float(vec2(_GLF_IDENTITY(78.16, (true ? 78.16 : _GLF_FUZZED(1.7))), 1.0))))), -1.8, -1.0, -1.1) , _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * (0 | 1))) | (mat4x3(-1367.3340, 7.0, -3425.7241, 8.6, 5234.1877, 6858.7396, 7093.2658, -129.522, 78.16, -1.8, -1.0, -1.1) , _injected_loop_counter)))))) | 0)) >> 0))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), _GLF_IDENTITY((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))))))))))) | _GLF_IDENTITY(1, (1) ^ int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2560.8039)), vec2(_GLF_FUZZED(-12.23), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)) ? _GLF_FUZZED(7736.0190) : _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? -5850.1587 : -3.2))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), injectionSwitch.x)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-864.369)), bool(false))), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             for(int _injected_loop_counter = (0 & 13575); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))))))))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))))
                              barrier();
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))), vec2(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))), min((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + vec2(0.0, 0.0)).y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))) + vec2(0.0, 0.0)).y), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))) + vec2(0.0, 0.0)).y), float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))) + vec2(0.0, 0.0)).y), float(float((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.73, -118.993))))) + vec2(0.0, 0.0)).y)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-353.786)), bool(false))))))))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), bool(bvec2(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), true)))) && true))))))))
                                    barrier();
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), true, true, false))))));
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - length(vec2(0.0, 0.0))) > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) > ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) >> 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), (4) - (0 & 59226))))) ^ 0)); _injected_loop_counter --)
              {
               do
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), 0 ^ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), int(ivec4(1 << _GLF_IDENTITY(int(0), int(0)), 1, 0, 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0)))))), max(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0)))))), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0)))))))), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0)))))), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (false ? _GLF_FUZZED(56165) : ~ (int(0))))))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 1 * (_GLF_FUZZED(_injected_loop_counter)))) | (_GLF_FUZZED(_injected_loop_counter))), _GLF_FUZZED(_injected_loop_counter))) : 0))) | 0)))) >> _GLF_IDENTITY(0, (0) ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) | 1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))), clamp(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 ^ (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) | ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) >> 0) | 1), ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | (int(0)), (_GLF_IDENTITY((int(0)) | (int(0)), 0 | ((int(0)) | (int(0))))) ^ 0)), 0, 1, 0))) : _GLF_FUZZED(-47816))))), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 | (0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0)))), 0 + ((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 | (0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0)))))) >> 0) | 1)) | ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0)))), 0 + ((((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0))))) >> 0))))), ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)), ~ (~ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) << 0, int(ivec2(_GLF_IDENTITY((int(0)) << 0, max((int(0)) << 0, (int(0)) << 0)), 0))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), int(0))) ^ (0 & -3915))))) << (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))) & (26478 >> 86754), min((0 << _GLF_IDENTITY(int(8), int(8))) & (26478 >> 86754), (0 << _GLF_IDENTITY(int(8), int(8))) & (26478 >> 86754))))) >> 0) | 1))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sqrt(0.0), tan(0.0), length(sin(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))).y)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.7164)), bvec2(true, false))).y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false)), false)))), true))), _GLF_IDENTITY(false, ! (! (false)))))))))))))))))))))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true, true)))))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))))))) || false, false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter > 0, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), true, true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), true, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), true, true)))))), true, false), false)))))) || false), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))) > 0, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-905.293), _GLF_FUZZED(-230.694)), bvec2(false, false))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))) > 0, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-905.293), _GLF_FUZZED(-230.694)), bvec2(false, false))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false))))))))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(8), int(8))) + (_injected_loop_counter --)), (false ? _GLF_FUZZED(23880) : _GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8))) + (_injected_loop_counter --)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_injected_loop_counter), 0, 0), (ivec3(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(0, max(0, 0)), 0)) ^ ivec3(0, 0, 0)))) : _GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (8), (~ (8)) * 1)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (8), (~ (8)) * 1))) ^ 0, 1 * (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (8), (~ (8)) * 1))) ^ 0, ((~ (_GLF_IDENTITY(~ (8), (~ (8)) * 1))) ^ 0) | 0)))))), int(8))) + (_injected_loop_counter --)))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)))))
                          {
                           barrier();
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(radians(23.16)) : injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))))) && true)))))), true, true, true)))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))
                          barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true) && (false)))))) || false)))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-773.882)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(42455u, 188463u, 97523u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-773.882)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(42455u, 188463u, 97523u))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(0), int(0)))))) != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (true)))), false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / 1)), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 0)), 0 ^ (int(ivec3(2, 0, 0)))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bool((_GLF_DEAD(false)) && true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) && true)))))) || false)))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! ((_GLF_DEAD(false)))))))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))) && true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9740.2748)))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), true)))), false)))), true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true)))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), true)))), false)))), true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true)))))) && true)))))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) || false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(((workgroup_size * workgroup_id)) ^ 0u, _GLF_IDENTITY((0u | 0u) | (((workgroup_size * workgroup_id)) ^ 0u), ((0u | 0u) | (((workgroup_size * workgroup_id)) ^ 0u)) / 1u))), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), min(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), min(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), min(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), min(uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u), uvec3(_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))), 1u, 0u)))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), 1u, 0u, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), max(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u))))))) * workgroup_id))) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) ^ 0u), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u))))))), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((workgroup_size * workgroup_id)) ^ 0u), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) | (workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) ^ 0u), (_GLF_IDENTITY((workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))), _GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))))) * workgroup_id), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) + 0u)) | ((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))))), (uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))))) | 0u))) | (workgroup_size * workgroup_id))))))), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u) ^ 0u), _GLF_IDENTITY(((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), max(((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) ^ 0u), (_GLF_IDENTITY((workgroup_size * workgroup_id), 0u + (_GLF_IDENTITY((workgroup_size * workgroup_id), (true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(subgroup_size))))) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id)))) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) >> 0u) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 1u, 0u)))))) | _GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(((workgroup_size * workgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | 0u) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))), 1u * (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))))))) | (workgroup_size * workgroup_id)) | ((_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), max(((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 0u | ((workgroup_size * workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_size * workgroup_id), (true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(subgroup_size))))) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) << 0u))))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | _GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id)))) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)))) >> 0u) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))))) - 0u)), 0u)))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6531.2442) : injectionSwitch.y)), injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6531.2442) : injectionSwitch.y)), injectionSwitch.y)), false, false, false)))))))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.3)), bool(_GLF_IDENTITY(false, (false) && true)))))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), false, true))))))))))));
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 | (0 & -41262), (1 & 1) * (0 | (0 & -41262))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))) != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (0u | 0u) | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), max(uvec4(subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec4(subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), max(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))))))))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), 1u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), 1u, 0u, 1u))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))))))), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (uvec4(~ (subgroup_local_id + 1), 1u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicAdd(workgroup_base, num_workgroup)) : 1u))))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))), (subgroup_local_id + 1))), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u))))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))))))), min((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1), 1u, 0u, 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u))))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u))), max((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1), 1u, 0u, 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u))))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u))), (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1), 1u, 0u, 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), 1u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), uvec4(2u))) | (uvec4(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 0u, 1u))))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u))))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ _GLF_IDENTITY((((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))), (_GLF_IDENTITY((((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))), ~ (~ ((((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))))))) >> 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u)), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))), (~ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u)))) | uvec4(0u, 0u, 0u, 0u))))) | (uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))))) | 0u))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u)))), 0u ^ (((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u), clamp(_GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u), _GLF_IDENTITY(uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4(~ (subgroup_local_id + 1), 1u, 0u, 1u))) | 0u))))))))))))))) % subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-52.67) : injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (_GLF_DEAD(false)) && true))), true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), false || ((! (true)))))), true, false)), false), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))), true, false)), false), true)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))))))))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), min(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(uint(0u ^ (subgroup_local_id + 1)))), _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), max(0u ^ (subgroup_local_id + 1), 0u ^ (subgroup_local_id + 1)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), _GLF_IDENTITY(min(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(uint(0u ^ (subgroup_local_id + 1)))), _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), max(0u ^ (subgroup_local_id + 1), 0u ^ (subgroup_local_id + 1)))), 1u * (min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), uint(_GLF_IDENTITY(uint(0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(uint(0u ^ (subgroup_local_id + 1)), (uint(0u ^ (subgroup_local_id + 1))) >> 0u)) | (uint(0u ^ (subgroup_local_id + 1)))))), _GLF_IDENTITY(0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-93454)))) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), max(0u ^ (subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))))))) : _GLF_FUZZED(workgroup_id))) < subgroup_size)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u)))) - (0u | 0u))], uint(2), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
            }
           else
            {
            }
          }
         subgroupAll(false);
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bool(! (_GLF_WRAPPED_LOOP(false))))))));
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y)))), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y)))), false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5900.1210), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))))).x)) > injectionSwitch.y)))), false))), false, false, true))), true)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(-4755)), _GLF_FUZZED(0.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))));
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ! (! ((! (bool(bvec4(false, true, true, true)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ! (! ((! (bool(bvec4(false, true, true, true)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ! (! ((! (bool(bvec4(false, true, true, true)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false), (bool(bvec4(false, true, true, true))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ! (! ((! (bool(bvec4(false, true, true, true)))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))))))))))) && true)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))), bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))), false, true, false)))))))))))) && true)))))))) || false)))))))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(228.978, 29.52, 83.15, 59.55, -7.4, 427.939) * vec3(-5.2, -9.3, 5525.7696))) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, 1.0 * (_GLF_IDENTITY((injectionSwitch.x) * 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(3.4)), bool(false))) + ((injectionSwitch.x) * 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | 0)), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 1), (ivec2(4, 1)) * ivec2(1, 1)))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(72.04, 65.25, 13.36).p) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false, false), false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false)) || false)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), false)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false || (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(false, false || (false))))) || false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false || (false))))) || false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(false, false || (false))))) || false))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(false, false || (false))))) || false))), true), true)))))))) || false)) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (-53225 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))), mix(float(_GLF_FUZZED(float(-66301))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), bool(true)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(float(-66301))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x)))) / 1.0)), bool(true))))) / 1)), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))), mix(float(_GLF_FUZZED(float(-66301))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), bool(true)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(float(-66301))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x)))) / 1.0)), bool(true))))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(34798) : int(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) ? _GLF_FUZZED(34798) : int(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.7)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.7)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))) | 0))) ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && ((! (false)))), ! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
          }
         subgroupAll(true);
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))).y)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))), false, true, true)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))), false, true, true))))))))) && true))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true)))))) && true)))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y, mix(float(_GLF_FUZZED(-5464.9710)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 4906.5894)))).y), bool(true)))) + 0.0)))))))))))));
  }
 else
  {
  }
}
