#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-942.622), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(0.7)), bvec2(true, false)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, sqrt(0.0), log(1.0), 1.0)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false, true), true)))))), false)))))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y), false, true, false))), true && (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y), false, true, false)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, true))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-109.981))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) || false)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, false || (false)), false, false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))) + 0.0), (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, 0u + (0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldExtract(subgroup_id, -30711, -60991)) : 0u))) >> 0u))) | (gl_NumWorkGroups.x)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ((false)) && true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4((vec4(injectionSwitch, 0.0, 1.0))[0], _GLF_FUZZED(vec4(-40.20, 1.1, 79.90, 7063.1367).b), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(-7.7)), vec4(_GLF_FUZZED(177.769), (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(1335.7168), (vec4(injectionSwitch, 0.0, 1.0))[3]), bvec4(false, true, false, true))))))).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))), false || (bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), min(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))))).y))))))))) && true)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)), 1u)) * (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u ^ (0u))))))) ^ 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((~ _GLF_IDENTITY((subgroup_size), ~ (~ _GLF_IDENTITY(((subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_size))))))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), ((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))) >> 0u)) << 0u)), ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (~ ((subgroup_size))), (_GLF_IDENTITY(~ (~ ((subgroup_size))), max(~ (~ ((subgroup_size))), ~ (~ ((subgroup_size)))))) | (~ (~ ((subgroup_size))))))))) ^ 0u)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) >> (0u & 43636u))))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))), (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) << 0u))) << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))) - 0u)), 0u ^ (~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((~ _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (true ? ~ ((subgroup_size)) : _GLF_FUZZED(105167u)))))))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u), (subgroup_size)))) | ((subgroup_size))), ~ (~ ((subgroup_size))))))) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) ^ 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), uint(1u))) ^ ((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))) - 0u))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))))))), min((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))))))), (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))))))))))) - 0u))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), uint(uint(~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))))) - 0u))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), 0u | (((~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (~ ((subgroup_size))), (_GLF_IDENTITY(~ (~ ((subgroup_size))), clamp(~ (~ ((subgroup_size))), ~ (~ ((subgroup_size))), ~ (~ ((subgroup_size)))))) >> 0u))))))) - 0u)))))))) ^ 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))), (subgroup_size) - 0u), _GLF_IDENTITY(min(subgroup_size, subgroup_size), 1u * (min(subgroup_size, subgroup_size)))), max((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))), (subgroup_size) - 0u), _GLF_IDENTITY(min(subgroup_size, subgroup_size), 1u * (min(subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))), (subgroup_size) - 0u), _GLF_IDENTITY(min(subgroup_size, subgroup_size), 1u * (min(subgroup_size, subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.8)), bool(false)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), (bool(bvec3(! (_GLF_DEAD(false)), false, true))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size), ~ (~ (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false))) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)), (true ? mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)) : _GLF_FUZZED(5.1)))) - 0.0) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false))) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)), (true ? mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)) : _GLF_FUZZED(5.1)))) - 0.0) > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false))) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)), (true ? mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8531.8046)), bool(false)) : _GLF_FUZZED(5.1)))) - 0.0) > injectionSwitch.y)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) << 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-165.410) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.0)))))))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true))) || false))), false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4((false), _GLF_IDENTITY(true, false || (true)), false, true))) || false)))))) && true))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1145.4511), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1145.4511), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(201.860) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1145.4511), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1145.4511), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(201.860) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))) && true))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)))))) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec4(3, 1, 0, 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | (3)), max(_GLF_IDENTITY(3, (3) | (3)), _GLF_IDENTITY(_GLF_IDENTITY(3, (3) | (3)), (_GLF_IDENTITY(3, (3) | (3))) + 0)))))), _GLF_IDENTITY((~ (~ (int(3)))), min((~ (~ (int(3)))), (~ (~ (int(3)))))) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))), 0 + (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY((~ (~ (int(3)))), min((~ (~ (int(3)))), (~ (~ (int(3)))))) + 0)))), ((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY((~ (~ (int(3)))), min((~ (~ (int(3)))), (~ (~ (int(3)))))) + 0))))) << 0))), (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))), (false ? _GLF_FUZZED(mix(-22909, -10490, false)) : (0) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(3))), clamp(_GLF_IDENTITY((~ (int(3))), int(int((~ (int(3)))))), (~ (int(3))), (~ (int(3))))), _GLF_IDENTITY((~ (~ (int(3)))), ((~ (~ (int(3))))) - 0) + 0)))), ((_GLF_IDENTITY(0, (0) | (0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))))))), (~ (~ (int(3)))) + 0))))) / 1)))) | _GLF_IDENTITY((_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0)))), ((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))))) | (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(3))), 1 * (~ (~ (int(3))))), (~ (~ (int(3)))) + 0)))), ~ (~ ((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0)))))))))), ((_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), max(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, 0 ^ (0)))), 0)))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(3)), (_GLF_IDENTITY(~ (int(3)), max(_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))), ~ (int(3))))) - 0)), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(3)), (_GLF_IDENTITY(~ (int(3)), max(_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))), ~ (int(3))))) - 0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(~ (int(3)), (_GLF_IDENTITY(~ (int(3)), max(_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))), ~ (int(3))))) - 0))))))) + 0)))), ((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) * 1))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0, max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0, clamp((_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0, (_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0, (_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))) - 0)))))) | (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))), ~ (~ _GLF_IDENTITY(((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0))))), (((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0)))))) | (((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0))))))))))))) | ((_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(_injected_loop_counter) : 3)), clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), max(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0)) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), 1, 0, 0)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), max(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0)) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), 1, 0, 0))) | 0), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), 0 + (_GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))))), (~ (~ (int(3)))) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, 3)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, 3)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), ((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, 3)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) >> 0)) + 0), max(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), min(_GLF_IDENTITY((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), ((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))) / 1), (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))))), (~ (~ (int(3)))) + 0), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0)) + 0), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), _GLF_IDENTITY((~ (~ (int(3)))) + 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (~ (~ (int(3)))) + 0))), max(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), _GLF_IDENTITY((~ (~ (int(3)))) + 0, max((~ (~ (int(3)))) + 0, (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (_GLF_IDENTITY(~ (int(3)), int(int(~ (int(3))))))) + 0), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))), (~ (~ (int(3)))) + 0)) + 0), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), clamp((int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))), (int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))))))))), (~ (~ (int(3)))) + 0))), 1, 0, 0))) | 0)) * 1))))), ((0) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))))))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (_GLF_IDENTITY(~ (int(3)), 0 ^ (~ (int(3)))))) + 0))), clamp(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))), 0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0))), _GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))))) << 0))) | (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) + 0)))), ~ (~ ((0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(1, (1) | (1)) * (int(3))), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, (3) - 0)))), _GLF_IDENTITY((~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0, ((~ (~ (int(_GLF_IDENTITY(3, (3) ^ 0))))) + 0) ^ 0))))))))))))))), 0 ^ (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), ~ (~ (int(3)))))))), int(3))), int(3))), ~ (~ (int(3))))))))), 0, 0), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), 0 ^ (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), ~ (~ (_GLF_IDENTITY((int(3)), min((int(3)), (int(3)))))))), max(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), ~ (~ (_GLF_IDENTITY((int(3)), min((int(3)), (int(3)))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), ~ (~ (_GLF_IDENTITY((int(3)), min((int(3)), (int(3)))))))), min(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), ~ (~ (_GLF_IDENTITY((int(3)), min((int(3)), (int(3)))))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), ~ (~ (_GLF_IDENTITY((int(3)), min((int(3)), (int(3)))))))))))))))))), 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-88084)))) / 1)), (ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) - 0)) >> 0), _GLF_IDENTITY((0), ((0)) - 0) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), 3)))))))), clamp((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), _GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), 3)))))))))), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), 3)))))))), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, clamp(3, 3, 3)), 3))))))))))), 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, max(3, 3)), (3) | (3))), ~ (~ (int(3)))))), ~ (~ ((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, max(3, 3)), (3) | (3))), ~ (~ (int(3)))))))))))), 0, 0)) / ivec4(1, 1, 1, 1))) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((-17182 + -33964)) : 0), 1 * (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((-17182 + -33964)) : 0), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((-17182 + -33964)) : 0)) / 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0)), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0)), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0))), (clamp(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0)), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0)), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-17182 + -33964)) : 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ (int(3))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))), 0 + ((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))))), _GLF_IDENTITY(0, max(0, 0)), 0), max(ivec4(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((-17182 + -33964), (_GLF_IDENTITY((-17182 + -33964), (false ? _GLF_FUZZED(-26160) : (-17182 + -33964)))) / 1)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ (int(3))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), _GLF_IDENTITY(0, max(0, 0)), 0), ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))))), false))) ? _GLF_FUZZED((-17182 + -33964)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 1 * (0)), 0))), ~ (0), ~ (0))))), (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ _GLF_IDENTITY((int(3)), 0 + ((int(3))))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))), 0))))) + (ivec4(3, 1, 0, 1)), (ivec4(0, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))))), 0, 1, (1 ^ 1)))))) + _GLF_IDENTITY((ivec4(3, 1, 0, 1)), ~ (~ ((ivec4(3, 1, 0, 1)))))) / ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(_GLF_IDENTITY(clamp(1, 1, 1), int(ivec3(clamp(1, 1, 1), 0, 1))), _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(73311) : _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, 1, 1)))))) | 0), clamp(1, 1, 1)))))))))), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), true)))))) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), true)))))) && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), true)))))) && (false)))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-46.71)), bool(false)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-665.918), _GLF_FUZZED(33.65)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-665.918), _GLF_FUZZED(33.65)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-665.918), _GLF_FUZZED(33.65)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-39.48)), bool(false))), injectionSwitch.y))), false))) || false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
        break;
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463)))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463)))))), (true ? (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463)))))) : _GLF_FUZZED(_injected_loop_counter))), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463)))))), (true ? (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(46463, 0 ^ (46463)))))) : _GLF_FUZZED(_injected_loop_counter))), 1))))) + (-77627 & 0))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(asin(dot(vec4(-2.9, -1.2, -5.2, 7.8), vec4(-5.9, -60.66, 6.0, -747.497)))) : injectionSwitch[1])))).x, 1.0, exp(0.0), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))))).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))))) / 1.0), injectionSwitch[1])).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x, 1.0, exp(0.0), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-2.8, -8029.8926))))).y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY((181712u & 115607u), max((181712u & 115607u), (181712u & 115607u))))), _GLF_FUZZED((864.399 / (0.5 * 4.6)))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0))))))[1]), bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, true)))), true, false))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(3.7, 0.0 + (3.7)), 1.6)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((4721.9827 + 7.1), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), (true ? float(_GLF_FUZZED(-7.2)) : _GLF_FUZZED(-5084.2308))), float((4721.9827 + 7.1)), bool(true))))), bvec2(true, false))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(3.7, 0.0 + (3.7)), 1.6)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((4721.9827 + 7.1), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7.2, min(-7.2, _GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(32.24), max(_GLF_IDENTITY(_GLF_FUZZED(32.24), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(32.24), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat3x4(_GLF_FUZZED(32.24), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_FUZZED(32.24)))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, min(-7.2, _GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2)))))), bool(true)))), float((4721.9827 + 7.1)), bool(true))))), bvec2(true, false))))).x > injectionSwitch.y)) || false))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
