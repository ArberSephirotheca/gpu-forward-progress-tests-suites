#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_IDENTITY(false, ! (! (false))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(-7669.0571))))), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 1.0)))) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0)))))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.4), float(vec3(_GLF_FUZZED(-4.4), 1.0, 0.0)))), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), mix(float(_GLF_FUZZED(8.9)), float(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-820.354), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(889.596)), bvec2(true, false)))))[1]), bool(true)))), bool(true)))), bvec2(false, true)))))[0], _GLF_FUZZED(8.6)), max(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(-0.2, 74.07, 476.976, -1953.2294))))) * _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(68.37, 2.9))))) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true)))), bvec2(false, true)), mix(vec2(_GLF_FUZZED(float(-64610)), _GLF_FUZZED(-2.1)), vec2((mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true)))), bvec2(false, true)))[0], (mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), min((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch))))) + vec2(0.0, 0.0))[1]), bool(true)))), bvec2(false, true)))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(8.6)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bvec2(false, true))), mix(vec2(_GLF_FUZZED(6.2), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bvec2(false, true))))[1]), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(3902.6927)), vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-4.4)), float((mat2(1.0) * (injectionSwitch))[1]), bool(true))))), 0.0, 0.0, 0.0, length(0.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bvec2(false, true))))[0], _GLF_FUZZED(-41.94)), bvec2(true, false)))))[0], _GLF_FUZZED(8.6)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.7), max(_GLF_FUZZED(7.7), _GLF_IDENTITY(_GLF_FUZZED(7.7), float(vec4(_GLF_FUZZED(7.7), 1.0, 1.0, 0.0))))), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-242.274, 9817.4436, _GLF_IDENTITY(1.7, max(_GLF_IDENTITY(1.7, max(_GLF_IDENTITY(1.7, clamp(1.7, 1.7, 1.7)), 1.7)), 1.7)), 2.4, -7.5, 871.301))))), min(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-242.274, 9817.4436, 1.7, 2.4, -7.5, 871.301))))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-242.274, 9817.4436, 1.7, 2.4, -7.5, 871.301)))))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(9969.5606), _GLF_FUZZED(-2914.2897)), bvec2(false, false))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(918.623, 993.531)) : injectionSwitch)).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false, false))) || false))), true, false))))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), ! (! (bool(_GLF_IDENTITY((false), ! (! ((false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4453.0148))), 0.0)), 1.0)), 1.0)))) * 1.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 1.0, 1.0)) * mat2(1.0), (_GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 1.0, 1.0)) * mat2(1.0), (_GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 1.0, 1.0)) * mat2(1.0), ((mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))) * 1.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)) * mat2(1.0))))))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(4.6, 8959.6321)))).y)) && true)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), length(0.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (true ? mat2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0) : _GLF_FUZZED(mat2(0.2, -5.8, 6.0, -9.3))))))), bool(true))), sqrt(0.0), length(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))) * 1.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.7) : injectionSwitch.x))) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)) * mat2(1.0), (false ? _GLF_FUZZED(mat2(-8124.0181, -2.1, -9791.0798, -53.23)) : (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)) * mat2(1.0)))))))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (false))))))) || _GLF_IDENTITY(false, ! (! (false)))), true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 1u, 0u, _GLF_IDENTITY((148291u & 0u), max(_GLF_IDENTITY((148291u & 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, false, false))) ? (148291u & 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((148291u & 0u), 0u + ((_GLF_IDENTITY(148291u, clamp(148291u, 148291u, _GLF_IDENTITY(148291u, clamp(148291u, 148291u, 148291u)))) & 0u)))))))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 1u, 0u, _GLF_IDENTITY((148291u & 0u), max(_GLF_IDENTITY((148291u & 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, false, false))) ? (148291u & 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((148291u & 0u), 0u + ((_GLF_IDENTITY(148291u, clamp(148291u, 148291u, _GLF_IDENTITY(148291u, clamp(148291u, 148291u, 148291u)))) & 0u)))))))), _GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 1u, 0u, _GLF_IDENTITY((148291u & 0u), max(_GLF_IDENTITY((148291u & 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, false, false))) ? (148291u & 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((148291u & 0u), 0u + ((_GLF_IDENTITY(148291u, clamp(148291u, 148291u, _GLF_IDENTITY(148291u, clamp(148291u, 148291u, 148291u)))) & 0u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))) ^ 0u)), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))))))))), (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))), ~ (subgroup_id)))))) >> 0u) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, int(int(0))) ^ (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(((subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(24280) : _GLF_IDENTITY(1, 0 + (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1)))))) | (1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) ^ 0u), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 1u, 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, int(int(0))) ^ (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(((subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(24280) : _GLF_IDENTITY(1, 0 + (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1)))))) | (1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) ^ 0u), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 1u, 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, uint(uvec3(subgroup_local_id + 1, 1u, 0u)))))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((++ subgroup_size)) : subgroup_size))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), clamp(_GLF_IDENTITY(0u | (1u), (0u | (1u)) ^ 0u), 0u | (1u), 0u | (1u))))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 1u, 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (false ? _GLF_FUZZED((~ subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (28737u & 0u) ^ (subgroup_local_id + 1)))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 1u, 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))) / 1u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 1u, 0u)))))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((++ subgroup_size)) : subgroup_size))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), ((_GLF_IDENTITY(1u, 0u | (1u)))) | ((_GLF_IDENTITY(1u, 0u | (1u))))) << 0u))))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u & 58457u)), uint(4u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (true ? _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | 0u) : _GLF_FUZZED(workgroup_base))))], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), 0 | (~ (4))))), (4) | (_GLF_IDENTITY(4, (4) / 1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), false)))))))))))) && (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ((! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))), true, true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))))), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))) || false)), ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))) || false))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))), (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) + 1, (subgroup_local_id + 1) / 1u))) < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-723.366) : sqrt(1.0)))) - 0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), vec2(1.0, 0.0))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-154.261) : 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(29.06)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1274.9949)), bool(false)))), bool(true))), 1.0), vec2(0.0, 1.0))), 1.0))))))), 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), vec2(1.0, 0.0))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-154.261) : 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))))))), 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9948.1020)), bool(false)))))), 1.0)))), 0.0), vec2(1.0, 0.0))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-154.261) : 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(602.136), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-28.62)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(14.09)))), 1.0))))))), 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-154.261) : 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))), 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-5.8)))), float(_GLF_FUZZED(8.1)), bool(false))), 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.7)), float(0.0), bool(true)))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9948.1020)), bool(false)))))), 1.0)))), 0.0), vec2(1.0, 0.0))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-154.261) : 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 0.0))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(602.136), (vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.1) : 0.0)), 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-28.62)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(14.09)))), 1.0))))))), 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y))) && true)))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), true)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)))), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), _GLF_IDENTITY((0u ^ (next_virtual_gid)) / 1u, (false ? _GLF_FUZZED(workgroup_id) : (0u ^ (next_virtual_gid)) / 1u)))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), clamp(0u ^ (next_virtual_gid), 0u ^ (next_virtual_gid), 0u ^ (next_virtual_gid))))))))], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-78.35))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
}
