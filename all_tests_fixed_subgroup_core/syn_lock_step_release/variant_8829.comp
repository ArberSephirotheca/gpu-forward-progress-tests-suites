#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 & 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(47.23)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (int(6)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))), true)))))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, bool(bool(false))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false)))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1)) & 1), ~ (~ (_GLF_IDENTITY((1 & 1), ((_GLF_IDENTITY(1, max(1, 1)) & 1)) | ((1 & 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec2(false, false))) && true))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), min(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(54.10)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)))))) && true), false, false))) || false)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)))))) && true), false, false))) || false))))))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)))))) && true), false, false))) || false))))))), true, true, false))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) | 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(findLSB(31192u)) : _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-13781), clamp(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-13781), (true ? 1 : _GLF_FUZZED(-13781)) | (true ? 1 : _GLF_FUZZED(-13781))), true ? 1 : _GLF_FUZZED(-13781), true ? 1 : _GLF_FUZZED(-13781))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))), false || (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))))))) && true)))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), true, true))), ! (! (! (false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-87883) : 1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0), 0 | (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)))) << 0))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-59.03), (_GLF_FUZZED(-59.03)) - 0.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(ceil(dot(5.1, 2.3))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(71.06)), float(injectionSwitch.y), bool(true)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))) || false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(81.09)), vec2(_GLF_FUZZED(-90.11), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0)], injectionSwitch[1]), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(7), (int(7)) >> 0))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / (1 ^ 0)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat2x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0))))) * mat2(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), mat2(mat4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (false ? _GLF_FUZZED(vec2(5.5, -35.86)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)))), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(6899.1139)), bvec2(false, false))).y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-26.65, 4.6, 3.4).x)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) || false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0) : _GLF_FUZZED((15.71 + mat2(7.6, 471.584, -128.929, 25.10))))), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * vec2(1.0, 1.0)) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-292.277), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-98.52)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))) - vec2(0.0, 0.0))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), mix(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(9.3)), vec2((clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[0], (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[1]), bvec2(true, true)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), max(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6030.4874, 4160.1659)) : (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0)), 0.0))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-277.324, 0.1, -794.924, 6246.8968)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0)))) - log(vec2(1.0, 1.0)))), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 1.0, 1.0))) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.6) : 0.0)))))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1685.1559) : injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.7))))) < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0) : _GLF_FUZZED((15.71 + mat2(7.6, 471.584, -128.929, 25.10))))), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * vec2(1.0, 1.0)) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-292.277), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-98.52)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))) - vec2(0.0, 0.0))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), mix(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(9.3)), vec2((clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[0], (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[1]), bvec2(true, true)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), max(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6030.4874, 4160.1659)) : (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0)), 0.0))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-277.324, 0.1, -794.924, 6246.8968)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0)))) - log(vec2(1.0, 1.0)))), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 1.0, 1.0))) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.6) : 0.0)))))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1685.1559) : injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.7))))) < injectionSwitch.y))))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0) : _GLF_FUZZED((15.71 + mat2(7.6, 471.584, -128.929, 25.10))))), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * vec2(1.0, 1.0)) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-292.277), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-98.52)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))) - vec2(0.0, 0.0))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), mix(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(9.3)), vec2((clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[0], (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))))[1]), bvec2(true, true)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), max(vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), vec4(vec2(0.0, 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)))) : _GLF_FUZZED((mat3x2(-81.22, 7935.3832, 6608.7162, -6.1, -9.6, -4.6) * mat2x3(-3872.6825, 185.132, 35.35, -5688.8331, 467.610, 9.4)))))), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6030.4874, 4160.1659)) : (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)))), mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-7.5)), bvec2(false, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0)), 0.0))), injectionSwitch)), 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0))), (clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-277.324, 0.1, -794.924, 6246.8968)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-7187.6477, -258.400, -7.8, 4.1), vec4(9.3, 4539.1973, 467.104, -8.4))) : 1.0)), 0.0)))) - log(vec2(1.0, 1.0)))), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 1.0, 1.0))) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.6) : 0.0)))))).y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1685.1559) : injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.7))))) < injectionSwitch.y))))), true), true, true)))))))))) || false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), false || (bool(bvec4((false), true, true, _GLF_IDENTITY(false, false || (false))))))), ! (! (! (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) || (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, log(1.0), 1.0), (mat2x3(injectionSwitch, 0.0, 1.0, log(1.0), 1.0)) * mat2(1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            barrier();
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)))
      {
       barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * _GLF_IDENTITY((int(5)), ((int(_GLF_IDENTITY(5, ~ (~ (5)))))) | ((int(_GLF_IDENTITY(5, clamp(5, 5, 5)))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), 0 + (0 >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, clamp(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base) - uvec3(0u, 0u, 0u)))), (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base) / uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 1u, 1u)).y;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) << 0), _GLF_IDENTITY((0), ((0)) | (1 ^ 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0)))))))), mix(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0)), (false ? _GLF_FUZZED((734.338 * 7379.2409)) : _GLF_IDENTITY(clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0)), min(clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0)), _GLF_IDENTITY(clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0)), float(mat4(clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0), _GLF_IDENTITY(transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (true ? _GLF_IDENTITY(transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-705.026))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, cos(0.0), 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(5.6, -6246.6855, 616.551, -9801.9252, -5485.5164, 3.8, -19.86, 9857.0431, 5692.9342)))))))))), float(_GLF_FUZZED(44.92)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((0 & 16289) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > _GLF_IDENTITY(0, clamp(0, 0, 0)))), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x)))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
                  barrier();
                }
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(0, clamp(0, 0, 0)) & 97652))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
                      {
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       barrier();
                      }
                    }
                  }
                 do
                  {
                   do
                    {
                     do
                      {
                       do
                        {
                         barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), (! (bool(_GLF_WRAPPED_LOOP(false)))) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), (! (bool(_GLF_WRAPPED_LOOP(false)))) && true), true, false)), false, true, false))))))))))));
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 & (true ? (45102 / 31739) : -37399)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 & (true ? (45102 / 31739) : -37399)), (_injected_loop_counter > (0 & (true ? (45102 / 31739) : -37399))) || false), false, false)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), min((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED((51347 ^ _injected_loop_counter)))), int(1), int(1))))), (0 >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)).y, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-19415 & _GLF_IDENTITY(0, min(0, 0)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 | 1), min((_GLF_IDENTITY(1, ~ (~ (1))) | 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), clamp(ivec3(1, 1, 0), ivec3(1, 1, 0), ivec3(1, 1, 0))), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))))) * ivec3(1, 1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) + (-45058 & 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), 1)), (int(ivec3(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), 1))) | 0)), 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))))) * ivec3(1, 1, 1)))), ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, _GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, _GLF_IDENTITY(0, 0 + (0)), 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> _GLF_IDENTITY(ivec3(0, 0, 0), max(_GLF_IDENTITY(ivec3(0, 0, 0), min(_GLF_IDENTITY(ivec3(0, 0, 0), (false ? _GLF_FUZZED(ivec3(-94657, 15136, 59851)) : ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0))))), ivec3(0, 0, 0))))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))))) * ivec3(1, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), 0, 0))), min((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), 0, 0))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), 0, 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))))) * ivec3(1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), min((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0)))))) / ivec3(1, 1, 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))))) * ivec3(1, 1, 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))))) * ivec3(1, 1, 1))))))) ^ 0), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, _GLF_IDENTITY(0, 0 | (0)))) >> ivec3(0, 0, 0))), 0)), (ivec3(ivec4((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, _GLF_IDENTITY(0, (0) << 0))) >> ivec3(0, 0, 0))), 0))) * ivec3(1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0))), ivec3(0, 0, 0) | ((_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) >> ivec3(0, 0, 0)))))) ^ (ivec3(0, 0, 0) | ivec3(0, 0, 0))))) * ivec3(1, 1, 1)))))) | 1, (false ? _GLF_FUZZED(bitCount(subgroup_local_id)) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)), 1, 0), (_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0), _GLF_IDENTITY((ivec3(1, 1, 0)) >> ivec3(0, 0, 0), ((ivec3(1, 1, 0)) >> ivec3(0, 0, 0)) | ivec3(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))))) * ivec3(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) / 1))))) | 1)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), (true ? ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))) : _GLF_FUZZED(99821)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) | (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))), (_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) | (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))) | (_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) | (max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z) / 1u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), uvec3(0u, 0u, 0u) ^ (~ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base))))).z, 0u, 0u, 1u)) | (uvec4(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z, 0u, 0u, 1u))))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), clamp((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), ~ (~ ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)))))))).z + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))).x, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) >> (uvec2(0u, 0u) | uvec2(0u, 0u))), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(2u), uvec2(2u))) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) >> (uvec2(0u, 0u) | uvec2(0u, 0u))))).x) << 0u))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) / 1u))), _GLF_IDENTITY(0u, ~ (~ (0u))) + (_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(6797u, 34098u)))).x) << _GLF_IDENTITY(0u, (0u) | (0u)))))))) * 1u) + GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & int((2.1 * 6692.0671)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))).y)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(uint(uvec2(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(1u, ~ (~ (1u))))), 0u ^ (uint(uvec2(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), ~ (~ (1u))))))))) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u))))), 0u | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u))))), ~ (~ ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, ~ (~ (7u)))), uint(7u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_local_id) : 7u)), 7u)))), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u | (uint(7u))), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED((workgroup_base * 101704u)) : _GLF_IDENTITY(uint(7u), (uint(7u)) / (1u ^ 0u)))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_local_id) : 7u)), 7u)))), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u | (uint(7u))), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED((workgroup_base * 101704u)) : _GLF_IDENTITY(uint(7u), (uint(7u)) / (1u ^ 0u))))))))))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), min((1u << _GLF_IDENTITY(uint(7u), uint(7u))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))))))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), (uint(7u)) ^ 0u), uint(7u)))), max(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(subgroup_id, 0u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(2.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), min(_GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(subgroup_id, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(subgroup_id, 0u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-743.162), (_GLF_FUZZED(-743.162)) / 1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))))), _GLF_IDENTITY(uvec4(subgroup_id, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED((workgroup_base --)))))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(subgroup_id, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(subgroup_id, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) + (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size)), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)))))), (max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base))))))) ^ uvec3(0u, 0u, 0u))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size)), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)))))), (max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base))))))) ^ uvec3(0u, 0u, 0u))).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size)), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)))))), (max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base), (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)) | (true ? GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base))))))) ^ uvec3(0u, 0u, 0u))).y) / 1u) : _GLF_FUZZED(workgroup_base))) + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(3592.9090)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(3592.9090)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), false, false, false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(3592.9090)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, 1.0, cos(0.0), sqrt(1.0), 0.0, 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x = next_virtual_gid, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x = next_virtual_gid) << 0u);
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-8104.4784)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base, (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base) | (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base)).x), _GLF_IDENTITY(min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x)))), min(min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x)))), min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x))))))), (true ? ~ (_GLF_IDENTITY(min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x)))), min(min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x)))), min((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base.x))))))) : _GLF_FUZZED(workgroup_size)))))) << 0u)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), ~ (~ (int(4)))))), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(-9.5, -202.462))) : injectionSwitch)).y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), false, true, _GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bvec4(false, false, true, false))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-1.6, 9.9, -33.59, -8.2, -0.1, 581.742)) : mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0))))).x > injectionSwitch.y) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-1.6, 9.9, -33.59, -8.2, -0.1, 581.742)) : mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), max(tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), (tan(0.0)) * 1.0))), 0.0, 0.0, 1.0))))).x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-1.6, 9.9, -33.59, -8.2, -0.1, 581.742)) : mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-779.677) : _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0)))))) + length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), tan(0.0), tan(0.0))), max(tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), (tan(0.0)) * 1.0))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(9.0, -4.7)) : vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-1.6, 9.9, -33.59, -8.2, -0.1, 581.742)) : mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-779.677) : _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0)))))) + length(vec4(0.0, 0.0, 0.0, 0.0))), tan(0.0), tan(0.0))), max(tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), clamp(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))))), (tan(0.0)) * 1.0))), 0.0, 0.0, 1.0))))))).x > injectionSwitch.y) && true)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2969.8684), _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((64.29 + 80.25))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))) && true))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1)), 1 * (int(ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) ^ 0), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, min(64, 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (false ? _GLF_FUZZED(33046) : min(64, 64))))))) - 0)), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 64)), 1, 1, 1)), 1 * (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1), min(ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1), ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) ^ 0), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, min(64, 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (false ? _GLF_FUZZED(33046) : min(64, 64))))))) - 0)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) | (64)), min(64, 64)), 1, 1, 1)), 1 * (int(ivec4(_GLF_IDENTITY(64, min(64, 64)), 1, 1, 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | (64)))), (_GLF_IDENTITY(64, min(64, 64))) ^ 0), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, min(64, 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (false ? _GLF_FUZZED(33046) : min(64, 64))))))) - 0))))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(35134, max(35134, 35134))) : 4)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false))), bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))))))))))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 & (-39027 - (83212 + 86955))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))))))), true)), true && (bool(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (injectionSwitch.x < injectionSwitch.y)))), false, false))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))))), bool(bool(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))), true && (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0))), true, _GLF_IDENTITY(true, true && (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (injectionSwitch.x < injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(0.0), 1.0)), 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), true))), false, false)))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x)) > injectionSwitch.y)))) && true))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 1))))) / _GLF_IDENTITY(1, (1) ^ 0))) << _GLF_IDENTITY(int(0), int(0)), clamp(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 1))))) << _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ~ (~ ((1)))))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-73.11)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 1))))) << _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(229.866, 42.84)))).x)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 1))), (_GLF_IDENTITY(int(1), int(ivec4(int(1), 1, _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) + (0 >> _GLF_IDENTITY(int(6), int(6))))), 1)))) + 0))) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))), false || (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), true, false))))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))) || false, (((false)) || false) && true)) && true))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((false)) || false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false))))), true, false))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (! (false)))), true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(false))))))), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -1.3)))).x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false)), (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? vec4(injectionSwitch, 1.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y)) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033))), max(_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033))), (_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))) * 1.0)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y)))))), true, true, false))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(_GLF_IDENTITY(bool(! (! (bool(bool(false))))), ! (! (bool(! (! (bool(bool(false))))))))))))), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -1.3)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -1.3)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -1.3)))).x > injectionSwitch.y) || false))))))), bool(bvec4(bool(bvec4((false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? vec4(injectionSwitch, 1.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y)) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-6630.9033) : _GLF_FUZZED(-4.1)))) - 0.0)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-6630.9033) : _GLF_FUZZED(-4.1)))) - 0.0)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y))), bool(bvec4(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_IDENTITY(_GLF_FUZZED(-6630.9033), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-6630.9033) : _GLF_FUZZED(-4.1)))) - 0.0)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y))), true, false, false))))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bool(bool(bvec4((false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false), bool(bvec4(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-63.41), _GLF_FUZZED(vec2(-7402.7359, -0.1).y), _GLF_FUZZED(-3898.1734), _GLF_FUZZED(29.01)), vec4((vec4(injectionSwitch, 1.0, 0.0))[0], (vec4(injectionSwitch, 1.0, 0.0))[1], (vec4(injectionSwitch, 1.0, 0.0))[2], (vec4(injectionSwitch, 1.0, 0.0))[3]), bvec4(true, true, true, true))) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y)) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y)))))), true, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.y), bool(true))))))), true, true, false)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? vec4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.7))), 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? vec4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.7))), 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y))))) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, log(1.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, length(vec2(0.0, 0.0)))), 1.0))), injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y)))))), true, true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (true ? vec4(injectionSwitch, 1.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)))))).x > injectionSwitch.y)) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), (vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033))))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), clamp(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y))))))))), true, true, false))), false || (_GLF_IDENTITY(bool(bvec4((false), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch, 1.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)), (true ? true ? vec4(injectionSwitch, 1.0, 0.0) : _GLF_FUZZED(vec4(-0.6, 7349.3456, 663.168, 3241.7728)) : _GLF_FUZZED((1755.1714 + vec4(-558.093, 6.3, -6513.8659, 2.5))))))))).x > injectionSwitch.y)) || false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6630.9033, max(-6630.9033, -6630.9033))), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), bvec2(_GLF_IDENTITY(true, false || (true)), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), (vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033))))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), clamp(vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))), vec2(_GLF_FUZZED(-742.638), _GLF_IDENTITY(_GLF_FUZZED(-6630.9033), clamp(_GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033), _GLF_FUZZED(-6630.9033)))))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y))))))))), true, true, false))))))))))) && true))))))) && true))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size), uvec3(0u, 0u, 0u) + (~ (GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size))))).x], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.26) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (51468 & 0)); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)) << 0))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(385.467)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(float(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0), (vec4(float(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)) * vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(84.56, -4.0, -4902.4200, -7.5).p)), float(1.0), bool(true))), 1.0))), (float(_GLF_IDENTITY(vec4(float(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0), (vec4(float(1.0), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED((7010.5130 * 264.985)), _GLF_FUZZED(-3279.8399)), bvec2(false, false))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))) + 0.0)))), 1.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))), (sqrt(0.0)) - 0.0), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(385.467)), bool(false))) + 0.0))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), int(3)))), clamp(int(int((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), int(int((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), int(int((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! (_GLF_IDENTITY(true, ! (! (true))))), true, true))))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))), true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))), bool(bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false)))))))), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), tan(0.0), 1.0)))), float(_GLF_FUZZED(968.376)), bool(false))), injectionSwitch[1])).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), tan(0.0), 1.0)))), float(_GLF_FUZZED(968.376)), bool(false))), injectionSwitch[1])).x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(true ? int(2) : _GLF_FUZZED(-61992), (true ? int(2) : _GLF_FUZZED(-61992)) | 0))), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 + (int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(71429))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
