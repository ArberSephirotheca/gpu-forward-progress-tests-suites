#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 bvec4 _f1;
 float _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 uvec3 _f1;
 vec2 _f2;
 uvec3 _f3;
 mat4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 mat4x3 _f1;
 bool _f2;
 vec2 _f3;
 float _f4;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 mat3x2 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 uint _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_7 {
 uint num_workgroup;
 uvec2 _f0;
 mat4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uvec4 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 int _f1;
 uint _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 uint _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2x4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bvec2 _f1;
 vec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 uint _f2;
 _GLF_struct_2 _f3;
 vec2 _f4;
 mat4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_0 {
 uint virtual_gid;
 ivec4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-25.47)), bool(false))), injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id;
 uvec4 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec3 GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
  {
   GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uvec4 GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uvec2 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.zw = GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
  {
   GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy = _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.zw, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.zw) | (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.zw));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true)))))))) || false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), true), true, true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         for(int _injected_loop_counter = (31948 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = (-55911 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uvec4 GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true))) && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)), true, true, false))), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), false || (! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), false || (! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), false || (! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false))))))), bool(bvec3(bool(_GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), false || (! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false))))))), false, true))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ((bool(bool(false)))) || false)))))))))))))))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.1)), bvec2(true, false))), injectionSwitch)).y))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & int(1.3))); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & 19339) & 4304)); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(76.72)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))) < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 ^ 1))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        break;
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0))) != 1); _injected_loop_counter ++)
      {
       _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy, clamp(GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy, GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy, GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy)), (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.xy) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), true && (! (false)))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           continue;
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-57.66), _GLF_FUZZED(21.77)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           break;
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (0 | 0)))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x = subgroup_id;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y = GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))));
                }
               else
                {
                }
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))));
          }
        }
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-755.563)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-755.563)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-755.563)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-755.563)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-755.563)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), true, false))))))) || false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3940.0475), _GLF_FUZZED(4.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (false ? _GLF_FUZZED(351.007) : _GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), min(float((injectionSwitch)[0]), float((injectionSwitch)[0])))) * 1.0), (float((injectionSwitch)[0])) + 0.0)) - 0.0))), float(_GLF_FUZZED(-35.22)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3940.0475), _GLF_FUZZED(4.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (false ? _GLF_FUZZED(351.007) : _GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), min(float((injectionSwitch)[0]), float((injectionSwitch)[0])))) * 1.0), (float((injectionSwitch)[0])) + 0.0)) - 0.0))), float(_GLF_FUZZED(-35.22)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(44.54), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) + (_GLF_FUZZED(44.54))), _GLF_FUZZED(-679.711)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))), true))).y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), true && (! (false || (false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((5821.5048 / 3.7))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((5821.5048 / 3.7))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            continue;
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - 0.0)), sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(737.501)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), float(_GLF_FUZZED(740.619)), bool(false)))), bool(true)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) + 0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))));
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z = subgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     break;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.w = GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z, (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.w = GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z) + _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, min(4u, 4u)))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec2(4u, 0u)), uint(uvec2(uint(uvec2(4u, 0u)), 1u))))), 1u * (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), (_GLF_IDENTITY(4u, uint(uint(4u)))) | (_GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (uint(4u))), (_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))) << 0u)) | 0u)) : _GLF_FUZZED(118994u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (true ? ~ (4u) : _GLF_FUZZED(173853u)))))), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))), max((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (true ? uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))) : _GLF_FUZZED(subgroup_size))))))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, max(1u, 1u)) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, 4u)), (_GLF_IDENTITY(4u, max(4u, 4u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4u)))))))))) >> 0u), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, 1u))), 4u)), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), 0u, 0u))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)), (_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)), (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))) | (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))) / 1u))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(uvec2(43769u, 37438u)[_GLF_IDENTITY(1, (1) << 0)]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))) | (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), uint(uvec3((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) - 0u), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, _GLF_IDENTITY(4u, (true ? _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)) : _GLF_FUZZED((++ subgroup_id))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(43769u, 37438u)[1], ~ (~ (uvec2(43769u, 37438u)[1])))) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(46.30), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(233.127)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-363.060), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, _GLF_IDENTITY(4u, (true ? _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)) : _GLF_FUZZED((++ subgroup_id))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(43769u, 37438u)[1], ~ (~ (uvec2(43769u, 37438u)[1])))) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(46.30), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(233.127)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-363.060), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(172060u))), 1u)), ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), 0u, 0u)))) - 0u))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u)))))), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u)))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u))))))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152201u) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))) | 0u)))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, uint(uint(4u))))), _GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(4u, 4u), (max(4u, 4u)) | (max(4u, 4u)))), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))), (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), uint(uvec3(_GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), max((~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))), (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), clamp(_GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u))))), _GLF_IDENTITY(0u ^ (0u), ~ (_GLF_IDENTITY(~ (0u ^ (0u)), uint(uvec2(~ (0u ^ (0u)), 0u)))))))))))) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), 0u + (_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(148476u))), clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))) + 0u)) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), min(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ((true ? 1u : _GLF_FUZZED(subgroup_id))) - 0u))))) >> 0u) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(uvec2(43769u, 37438u)[1]) : _GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 4u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u), (max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u)) / 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), 1u * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))) * (uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))))))))), 0u, 0u))))))))) - 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), clamp(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, (4u) | 0u), 4u), clamp(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) >> 0u)), 4u, 4u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) - 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) << 0u)), 4u, _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, (4u) ^ 0u), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | _GLF_IDENTITY((clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)), ((clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) | 0u))), 4u, 4u))) * 1u))) / 1u)))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / 1u)), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), (_GLF_IDENTITY(4u, uint(uint(4u)))) | (_GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, 0u ^ (4u))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u)))), 0u ^ (~ (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u)) ^ 0u))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u))))))))) | 0u)) | 0u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u * (uint(4u)), (true ? 1u * (uint(4u)) : _GLF_FUZZED(subgroup_id))))))), 0u + (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), clamp(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, (4u) | 0u), 4u), clamp(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) >> 0u)), 4u, 4u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) - 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) << 0u)), 4u, _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), _GLF_IDENTITY(4u, (4u) ^ 0u), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | _GLF_IDENTITY((clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)), ((clamp(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uint(4u), (uint(4u)) | 0u))), 4u, 4u))) * 1u))) / 1u)))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / 1u)), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, uint(uint(4u))), (_GLF_IDENTITY(4u, uint(uint(4u)))) | (_GLF_IDENTITY(4u, uint(uint(4u))))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, _GLF_IDENTITY(4u, 0u ^ (4u))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u)))), 0u ^ (~ (uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)) << 0u)) ^ 0u))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4u, 4u)))) / 1u))))))))) | 0u)) | 0u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u * (uint(4u)), (true ? 1u * (uint(4u)) : _GLF_FUZZED(subgroup_id)))))))))), uint(uvec2((~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u), 0u | (clamp(_GLF_IDENTITY(4u, uint(uint(4u))), 4u, 4u)))) / 1u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(1u * (uint(4u)), (1u * (uint(4u))) | (1u * (uint(4u))))))))), (0u | 0u)))) | 0u))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y = GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.w;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -32623)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) + (0 >> _GLF_IDENTITY(int(8), int(8)))))
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y = subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w = GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false)))))))))
        {
         GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.z = GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                    barrier();
                  }
                 break;
                }
               continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
                    continue;
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0)))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (75172 & (-64429 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (~ (((0 << _GLF_IDENTITY(int(4), int(4)))) << 0)))) >> 0)), (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (~ (((0 << _GLF_IDENTITY(int(4), int(4)))) << 0)))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (~ (((0 << _GLF_IDENTITY(int(4), int(4)))) << 0)))) >> 0)), max(~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (~ (((0 << _GLF_IDENTITY(int(4), int(4)))) << 0)))) >> 0)), ~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4)))) << 0, ~ (~ (((0 << _GLF_IDENTITY(int(4), int(4)))) << 0)))) >> 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                    }
                  }
                }
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || ((! (false))))))))))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-81.27)), float(injectionSwitch[1]), bool(true))))).y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x = GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              break;
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (73868 & 0)); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(bvec2(true), mat2(1.0), _GLF_struct_4(_GLF_struct_1(ivec2(1), ivec4(1), vec2(1.0)), ivec3(1), 1u, _GLF_struct_2(uvec2(1u), bvec2(true), vec4(1.0), mat4x3(1.0), bvec3(true), vec4(1.0)), vec2(1.0), mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec4(-7393.4534, 882.872, -454.848, -9.0)[2])))), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat4(1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1])), (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(78.64), _GLF_FUZZED(6.5)), bvec2(false, false))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.2))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(7.1)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(176.255), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(7.1)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(7.1)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))))[0], _GLF_FUZZED(230.391)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 2.3 : -8.3))), bool(false))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))) ? 0.0 : _GLF_FUZZED(4.8))) : _GLF_FUZZED(60.72))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x))), mat2x4(1.0), bvec4(true))), _GLF_struct_10(_GLF_struct_5(mat4x3(1.0), 1, 1u), _GLF_struct_6(mat2x4(1.0), uvec4(1u), 1u), _GLF_struct_7(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x, uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << 0u))))) << 0u)), mat4(1.0), vec2(1.0)), _GLF_struct_8(mat4x3(1.0), _GLF_IDENTITY(1u, max(1u, 1u)), uvec4(_GLF_IDENTITY(1u, (1u) ^ (1u ^ 1u)))), 1u, _GLF_struct_9(bvec3(true))), _GLF_struct_16(mat4x2(1.0), mat3x2(1.0), _GLF_struct_11(ivec2(1), _GLF_IDENTITY(vec2(1.0), vec2(mat4x2(vec2(1.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0)))))), float(_GLF_FUZZED((64.84 + 8687.7232))), bool(false)))) * exp(0.0)), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))), _GLF_struct_12(mat3x2(1.0), mat4x3(1.0), true, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))))), min(1.0, 1.0))), 1.0), _GLF_struct_13(vec2(1.0), uvec3(1u), vec2(1.0), uvec3(1u), mat4(1.0), ivec3(1)), _GLF_struct_14(vec3(1.0), bvec4(true), 1.0, mat2x3(1.0)), _GLF_struct_15(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(subgroup_id, -78358, 72847), (bitfieldExtract(subgroup_id, -78358, 72847)) | (0u ^ 0u))))) | (_GLF_IDENTITY(1u, min(1u, 1u))))), bvec4(true), mat3x2(1.0), vec3(1.0), 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y;
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(false)) || false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
              }
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(float(197366u)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                          break;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 | 1) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ _GLF_IDENTITY((~ (int(6))), max((~ (int(6))), (~ (int(6)))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))))))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       break;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-93.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5612.2025), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(90.88)), bvec2(true, false)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(6.2)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
         return;
        }
      }
     else
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        return;
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))) && true))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) || false))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             else
              {
               return;
              }
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z) : gl_WorkGroupID.x)), gl_WorkGroupID.x)), 0u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z = workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z) - 0u), (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z) - 0u)) << 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, _GLF_IDENTITY((GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z), (_GLF_IDENTITY((GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z), ((GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z)) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z) - 0u))) - 0u, ((~ (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z) - 0u))) - 0u) | 0u))) ^ _GLF_IDENTITY((0u & 61152u), ~ (~ ((0u & 61152u)))))))), ((GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x = GLF_merged2_0_2_55_2_1_12GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeworkgroup_id.z)) ^ 0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y = GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          break;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, clamp(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(103719u) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), clamp(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), _GLF_IDENTITY(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), clamp(_GLF_IDENTITY(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), uvec2(uvec4(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), 0u, 0u))), _GLF_IDENTITY(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), max(max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))), max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy)))))), max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy))))))))).y, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y) / 1u), (true ? false ? _GLF_FUZZED(103719u) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, max(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy))))).y, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y) / 1u) : _GLF_FUZZED((subgroup_size & atomicAnd(subgroup_size, 122809u))))))), _GLF_IDENTITY(uint(uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u)), 1u * (_GLF_IDENTITY(uint(uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u)), uint(uvec4(uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy, uvec2(uvec4(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))).y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u), (uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u)) >> uvec2(0u, 0u)))), (uvec2(uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u), (uvec2(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y, 0u)) >> uvec2(0u, 0u))))) >> uvec2(0u, 0u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.y * GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y));
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y + GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x, ivec4(1));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(injectionSwitch, mod(2.1, 16.76), 7.1)) : injectionSwitch))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(injectionSwitch, mod(2.1, 16.76), 7.1)) : injectionSwitch))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))))
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
              {
              }
             else
              {
               return;
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6689.9695)), bvec2(true, false))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).xy.y, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y)), (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y) - 0u), clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size[0], GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size[1], GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size[2])).y * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y)), max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y)))), (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y) - 0u), GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).xy.y, min(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).xy.y, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))), (uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).xy.y)), max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, uvec2(0u, 0u) | (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy)).y) - 0u, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, uvec2(0u, 0u) | (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy)).y) - 0u, 0u)), 0u + (uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, uvec2(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u) | (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy)).y) - 0u, 0u)))))), GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y)), (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y) - 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)).xy.x + 1, max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, clamp(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy)))).x + 1, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (true ? GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(198342u, 159426u, 104405u, 101841u)))).xy.x + 1))) % GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, min((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, uvec4(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[0], _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[1], max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[1], GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[1])), _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[2], min(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[2], 0u ^ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[2])), GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[2])), GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size[3]))) * uvec4(1u, 1u, 1u, 1u)).xy.x + 1, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x + 1, GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x + 1))) % GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy, (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), uvec2(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec2(1u), uvec2(1u)))))).x + 1, max(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x + 1, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x, (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size.xy.x) << 0u) + 1))) % _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, min(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size), min(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_55_2_1_17_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_local_idsubgroup_size)))))).xy.y)));
 do
  {
   GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size))), (uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size, uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size, (GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size) | (GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size), uvec3(uvec4(uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size), 1u)))))) + ((uvec3(187488u, 168482u, 95813u) & uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), false)), false, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), false)), false, false)))))) || false))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))) && true)) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x = GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z, (true ? _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x = GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z, 0u | (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x = GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z)) : _GLF_FUZZED(atomicCompSwap(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(atomicCompSwap(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w), (atomicCompSwap(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w)) << 0u), (_GLF_IDENTITY(atomicCompSwap(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w), (atomicCompSwap(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w, GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w)) << 0u)) * 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, ! (! (false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))) && true))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) || false))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0)), dot(vec4(length(0.0), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)).x)), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.5)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 1.0))))) > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))))))), false, true, true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, false))) && true)))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(665.486, -1.3)) : injectionSwitch.y)))))) || false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false), true, false))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false), true, false)), true, true)))))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false))))))))) || _GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || false))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))))))))))))))))), false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = ((0 | 0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
  {
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_0.virtual_gid], _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_id) : uint(1))) : _GLF_FUZZED(workgroup_base))), 4, _GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, (0 | 0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(66878) : 0))))), _GLF_IDENTITY(4, 0 ^ (4)));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) - 0)), 1 * (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) - 0)), min(max(1, _GLF_IDENTITY(1, (1) - 0)), max(1, _GLF_IDENTITY(1, (1) - 0))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).xy, clamp(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).xy, _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_53_2_1_16_3_1_17GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).xy)).x], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(2, min(2, 2))) / 1)) * ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, (4) | 0))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
