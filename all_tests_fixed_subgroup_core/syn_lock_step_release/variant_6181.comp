#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u), _GLF_IDENTITY(0u ^ ((gl_NumWorkGroups.x)), 0u | (0u ^ ((gl_NumWorkGroups.x))))))), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), (true ? (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id))), (gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-26870) : 1))], gl_NumWorkGroups[2])) / uvec3(1u, 1u, 1u)))) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, 0u + (7u))), uvec3(7u)))).x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x : _GLF_FUZZED(11972u))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) >> 0u, clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) >> 0u, ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) >> 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) >> 0u)))))), 0u | (~ (gl_NumWorkGroups.x))))) ^ 0u)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), (clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) * 1u, 0u + ((workgroup_id) * 1u))))) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 2.2)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9310.0650)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, true), false)))))))))
        break;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))) && true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4950.6852)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            continue;
           break;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, length(sin(vec4(0.0, 0.0, 0.0, 0.0))), tan(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
             continue;
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))))))))), (true ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(385.647))), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))))))))), (true ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(385.647))), injectionSwitch.x)), (true ? int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), transpose(transpose(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))))))))), (true ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(385.647))), injectionSwitch.x)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (! (! (_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-7087.1643)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), true, false, true))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))), true, false, _GLF_IDENTITY(true, ! (! (true)))))))) && true))))
            return;
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2(max(injectionSwitch, injectionSwitch), 1.0, 1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))), (1.0)))), 1.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.9))))), 0.0 + (1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)))), mat4(1.0) * (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))))), clamp(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)))), mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.71)), bool(false)))), float(_GLF_FUZZED(17.64)), bool(false))))))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(17.64)), max(_GLF_IDENTITY(float(_GLF_FUZZED(17.64)), (_GLF_IDENTITY(float(_GLF_FUZZED(17.64)), mix(float(float(_GLF_FUZZED(17.64))), float(_GLF_FUZZED(-1956.2611)), bool(false)))) * cos(0.0)), float(_GLF_FUZZED(17.64)))), _GLF_IDENTITY(bool(false), (bool(false)) && true))))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))), float(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false))))))))), float(float(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(17.64)), bool(false)))))))))))), 0.0, 1.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED((+ 7599.2172))), float(_GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0), log(1.0)))), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(34.03, _GLF_IDENTITY(-3.3, (-3.3) * 1.0))) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(34.03, -3.3)) : injectionSwitch)) - vec2(0.0, 0.0))).y))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) - 0.0), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, log(1.0), 0.0)))))))), vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))) * (1.0)), 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(512.261) : 1.0), mix(float(_GLF_FUZZED(2.8)), float((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(512.261) : 1.0)), bool(true)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), abs(0.0), 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.3)))), float(_GLF_FUZZED(-4.8)), bool(false))))), 1.0), (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (1.0)), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat2x3(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), log(1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-35.09)))), bool(true))), sqrt(1.0), 0.0, 0.0, determinant(mat2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0 * (float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-35.09)))), bool(true))), sqrt(1.0), 0.0, 0.0, determinant(mat2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), abs(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(min(vec2(-27.24, -8.6), -9.6)))))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0)))))))), round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))[1], _GLF_FUZZED(37.83), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4(_GLF_FUZZED(5974.7362), _GLF_FUZZED(986.795), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(37.52)), bvec4(false, false, true, false))))) : _GLF_FUZZED(vec4(143.409, 3.5, -750.025, 8.6))))), mix(float(_GLF_FUZZED(7.7)), float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), bool(true)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((72.06 - pow(-23.45, 32.51))) : 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), 0.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), float(mat3x2(float(vec4(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) - 0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-7.6, 47.58)) : normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))))))) : _GLF_FUZZED(2688.6920))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-514.286)), float(1.0), bool(true))), 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-36.23)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y))))), _GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(12.99) : 1.0)), 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((72.06 - pow(-23.45, 32.51))) : 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), 0.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), float(mat3x2(float(vec4(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) - 0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-7.6, 47.58)) : normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))))))) : _GLF_FUZZED(2688.6920))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-514.286)), float(1.0), bool(true))), 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-36.23)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y))))), _GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(12.99) : 1.0)), 1.0, 1.0, 1.0))))), vec2(1.0, 1.0) * (vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((72.06 - pow(-23.45, 32.51))) : 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), 0.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), float(mat3x2(float(vec4(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) - 0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-7.6, 47.58)) : normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))))))) : _GLF_FUZZED(2688.6920))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-514.286)), float(1.0), bool(true))), 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-36.23)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y))))), _GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(12.99) : 1.0)), 1.0, 1.0, 1.0))))))), vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((72.06 - pow(-23.45, 32.51))) : 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), 0.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), float(mat3x2(float(vec4(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) - 0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-7.6, 47.58)) : normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))))))) : _GLF_FUZZED(2688.6920))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-514.286)), float(1.0), bool(true))), 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-36.23)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) * mat2(1.0)))).y))))), _GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(12.99) : 1.0)), 1.0, 1.0, 1.0))))))))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0)))), 1.0), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), max(round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0)))), 1.0), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0)))), 1.0), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(vec3(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(vec3(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(vec3(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], (normalize(vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(6766.9097)), bvec2(false, false))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-3409.2743) : _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.7))), injectionSwitch.y))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))))))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0), 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-5987.8307)), bool(false))))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (1.0)), 1.0)), cos(vec2(0.0, 0.0)) * ((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[1], (false ? _GLF_FUZZED(-8.7) : (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))[1]))), vec2(_GLF_FUZZED(-94.03), _GLF_FUZZED(519.758)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? 1.0 : _GLF_FUZZED(9207.3705))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? 1.0 : _GLF_FUZZED(9207.3705))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? 1.0 : _GLF_FUZZED(9207.3705))), injectionSwitch.y))))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(221.456)), float(1.0), bool(true))), 1.0)))))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), clamp(float(_GLF_IDENTITY(vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0), min(vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0), vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)))), float(vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), float(vec4(1.0, cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), mix(vec2((normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))[0], (normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))[1]), vec2(_GLF_FUZZED(-75.96), _GLF_FUZZED(-4406.5862)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))))), 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2(((vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(sin(6683.5192)) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))[0], ((vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(-196.577), _GLF_FUZZED(-7.2)), bvec2(false, false))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), (_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), min(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2x4(vec2(1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)), min(vec2(mat2x4(vec2(1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)), vec2(mat2x4(vec2(1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))))), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), (true ? round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))) : _GLF_FUZZED(768.659))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), max(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(0.0, 0.0))))))))))) - 0.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2(((vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0))), max(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (max(vec2(1.0, 1.0), vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)))))))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y)))))[0], ((vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), (_GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), max(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (false ? _GLF_FUZZED(vec2(-85.96, -4.3)) : max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))), 0.0), (vec4(1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, exp(0.0)), vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), clamp(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(116.430)), bool(false))) : _GLF_FUZZED(-4287.2224))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))), (false ? _GLF_FUZZED(116.626) : round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(-196.577), _GLF_FUZZED(-7.2)), bvec2(false, false))) * mat2(1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-548.006) : 1.0)), 1.0))).x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0), (vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.4)), float(1.0), bool(true))))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0 + (length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.4)), float(1.0), bool(true))))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.4)), float(1.0), bool(true))))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x3(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.4)), float(1.0), bool(true))))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-5682.6427, 342.111)) : (vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.4)), float(1.0), bool(true))))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0, 0.0))))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(12.33))))), (false ? _GLF_FUZZED(sinh(-0.4)) : _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(12.33))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(12.33))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(12.33)))))) - 0.0), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FUZZED(-38.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(12.33))))))))) - 0.0), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), (round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true))), 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 1.0 * (length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY((normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY((normalize(vec2(1.0, 1.0))), vec2(mat3x4((normalize(vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (normalize(vec2(1.0, 1.0))))) * mat2(1.0))))), length(normalize(vec2(1.0, 1.0))))))), (_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-744.958)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0))), 1.0 * (length(_GLF_IDENTITY(normalize(vec2(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), (normalize(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8200.8486)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : mix(float(1.0), float(_GLF_FUZZED(-8200.8486)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0))) * mat2(1.0))))), length(normalize(vec2(1.0, 1.0)))))))) / 1.0))) * 1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), (round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true))), 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 1.0 * (length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY((normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY((normalize(vec2(1.0, 1.0))), vec2(mat3x4((normalize(vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (normalize(vec2(1.0, 1.0))))) * mat2(1.0))))), length(normalize(vec2(1.0, 1.0))))))), (_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-744.958)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0))), 1.0 * (length(_GLF_IDENTITY(normalize(vec2(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), (normalize(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8200.8486)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : mix(float(1.0), float(_GLF_FUZZED(-8200.8486)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0))) * mat2(1.0))))), length(normalize(vec2(1.0, 1.0)))))))) / 1.0))) * 1.0), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, cos(0.0), 0.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) * 1.0), round(length(normalize(vec2(1.0, 1.0)))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat3(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0) * (1.0))), float(_GLF_FUZZED(24.87)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), mix(float(_GLF_FUZZED(6.7)), float(injectionSwitch.y), bool(true))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0), (false ? _GLF_FUZZED(radians(vec2(vec4(799.715, -2648.1245, -4.1, 6.5)))) : _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))), clamp((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1])) - vec2(0.0, 0.0))) * mat2(1.0), (vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0)))))), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), ((injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-262.699)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0), (false ? _GLF_FUZZED(radians(vec2(vec4(799.715, -2648.1245, -4.1, 6.5)))) : _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))), clamp((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1])) - vec2(0.0, 0.0))) * mat2(1.0), (vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0)))))), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), ((injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-262.699)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0), (false ? _GLF_FUZZED(radians(vec2(vec4(799.715, -2648.1245, -4.1, 6.5)))) : _GLF_IDENTITY((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))), clamp((vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(70.21), (_GLF_FUZZED(70.21)) + 0.0), (injectionSwitch)[1])) - vec2(0.0, 0.0))) * mat2(1.0), (vec2(_GLF_FUZZED(70.21), (injectionSwitch)[1])) * mat2(1.0)))))), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), ((injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-262.699)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))) || false)), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))) || false))) || false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(776.979, -583.004)) : injectionSwitch)).y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (bool((injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(96.39))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))) || false))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), (_GLF_WRAPPED_IF_TRUE(true)) || false))
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY((-47907 ^ 37308) & 0, ((-47907 ^ 37308) & 0) | 0)) ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && (false))))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                  }
                 else
                  {
                  }
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true)))
                      break;
                     return;
                    }
                   return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       break;
                      }
                     continue;
                    }
                  }
                 for(int _injected_loop_counter = (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(ivec4(int(int(1)), 1, 0, 1)))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (0 ^ 0) | (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      continue;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3453.1506) : injectionSwitch.y))))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-457.941)), bvec2(true, false)))) / vec2(1.0, 1.0))), clamp(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-457.941)), bvec2(true, false)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-457.941)), bvec2(true, false)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-457.941)), bvec2(true, false)))) / vec2(1.0, 1.0)))))).y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))) / 1.0))).y)), false, false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, _GLF_IDENTITY(false, false || (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, _GLF_IDENTITY(false, false || (false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))).y)), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], injectionSwitch[1])))).y)), false, false)))), false)))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bool((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), false, false, false))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))) / 1.0))).y)), false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1945.9054 / 7.7)), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(length(injectionSwitch))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0), mat3x2(mat3x4(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))), false)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), (min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), min(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))) / 1.0)))).y)))))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1945.9054 / 7.7)), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(length(injectionSwitch))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0), mat3x2(mat3x4(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))), false)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), (min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), min(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))) / 1.0)))).y)))))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1945.9054 / 7.7)), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(length(injectionSwitch))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0), mat3x2(mat3x4(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))), false)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), (min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), min(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))) / 1.0)))).y)))))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], min(injectionSwitch[1], injectionSwitch[1]))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))).y)))), false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 0, (0 ^ 0), 0))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), _GLF_IDENTITY((_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), min(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), min(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0))))) * (1 & 1)))), ((_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), min(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), min(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-11610)), ((true ? 4 : _GLF_FUZZED(-11610))) | 0))))) * (1 & 1))))) << 0))), clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-11610))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-11610))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-11610))), clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-11610))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(83059))))) : _GLF_FUZZED(-11610))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-11610))))))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), max((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569))) / 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(float(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), max((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569))) / 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), max((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(563.569))) / 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))) > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((false ? -1.7 : 9269.9982))), max(_GLF_IDENTITY(float(_GLF_FUZZED((false ? -1.7 : 9269.9982))), mix(float(_GLF_FUZZED(7.4)), float(float(_GLF_FUZZED((false ? -1.7 : 9269.9982)))), bool(true))), float(_GLF_FUZZED((false ? -1.7 : 9269.9982))))), bool(false)))) - length(0.0)), true, true)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((false ? -1.7 : 9269.9982))), max(_GLF_IDENTITY(float(_GLF_FUZZED((false ? -1.7 : 9269.9982))), mix(float(_GLF_FUZZED(7.4)), float(float(_GLF_FUZZED((false ? -1.7 : 9269.9982)))), bool(true))), float(_GLF_FUZZED((false ? -1.7 : 9269.9982))))), bool(false)))) - length(0.0)), true, true))) || false), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true))), true && (_GLF_IDENTITY(! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true))), false || (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)))))))))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, true, false))), ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y, true, true))) || false) && true)))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)))))), (_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true))))))) || false)))) || false, ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y, true, true))) || false) && true))))), bool(bvec4(true && (! (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true)))))), (_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, true))))))) || false)))) || false, ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y, true, true))) || false) && true))))), true, true, true))))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
}
