#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)) | _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u)))), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) / 1u), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(8), int(8))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, mix(float(_GLF_IDENTITY(+ -4.0, mix(float(_GLF_FUZZED(8042.3727)), float(+ -4.0), bool(true)))), float(_GLF_FUZZED(-231.974)), bool(false))))), max(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), min(_GLF_IDENTITY(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, (-4.0) - 0.0))), float(vec3(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_FUZZED((+ -4.0)), _GLF_FUZZED((+ -4.0))))) / sqrt(_GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))))), _GLF_FUZZED((+ -4.0)))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), clamp(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED((+ -4.0)))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)), (true ? _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)) : _GLF_FUZZED(-4331.3439))))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)), min(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))))))))), _GLF_FUZZED((+ -4.0)))))))))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(float(25103u))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ -4.0), 0.0 + ((+ -4.0)))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (false ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))))), _GLF_FUZZED((+ -4.0)))))))))), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ -4.0), 0.0 + ((+ -4.0)))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (false ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))))), _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), min((+ -4.0), (+ -4.0)))))))))))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.01), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ -4.0), 0.0 + ((+ -4.0)))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (false ? _GLF_FUZZED(6163.2562) : _GLF_FUZZED((+ -4.0)))))), _GLF_FUZZED((+ -4.0)))))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true)))))), _GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), clamp(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, (+ -4.0) - 0.0))), (_GLF_FUZZED((+ -4.0))) / 1.0), _GLF_FUZZED((+ -4.0)))), max(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_FUZZED(_GLF_IDENTITY((+ -4.0), mix(float(_GLF_FUZZED(-337.533)), float(_GLF_IDENTITY((+ -4.0), mix(float(_GLF_FUZZED(-31.74)), float(_GLF_IDENTITY((+ -4.0), min((+ -4.0), (+ -4.0)))), bool(true)))), bool(true))))) + 0.0), min(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(-4.0, 1.0 * (-4.0))), bool(true)))) - tan(0.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(6163.2562, (6163.2562) + 0.0)) : _GLF_FUZZED((+ -4.0)))))), _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ _GLF_IDENTITY(-4.0, (-4.0) - 0.0))) - 0.0)))))))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(float(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_FUZZED(_GLF_IDENTITY((+ _GLF_IDENTITY(-4.0, float(mat4x2(_GLF_IDENTITY(-4.0, abs(0.0) + (-4.0)), 0.0, 1.0, determinant(mat4(1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6718.0057) : 1.0)), 0.0, 1.0, 0.0)), 1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((+ -4.0), max(_GLF_IDENTITY((+ -4.0), min((+ -4.0), (+ -4.0))), (+ -4.0))), ((+ -4.0)) / 1.0), (+ -4.0)))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), max(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), min(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ -4.0)) / 1.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652)), 0.0 + ((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(_GLF_IDENTITY(6163.2562, mix(float(6163.2562), float(_GLF_FUZZED(50.93)), bool(false)))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0))))))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), min(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ -4.0)) / 1.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652)), 0.0 + ((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(_GLF_IDENTITY(6163.2562, mix(float(6163.2562), float(_GLF_FUZZED(50.93)), bool(false)))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0))))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), min(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ -4.0)) / 1.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652)), 0.0 + ((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(_GLF_IDENTITY(6163.2562, mix(float(6163.2562), float(_GLF_FUZZED(50.93)), bool(false)))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), min(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ -4.0)) / 1.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652)), 0.0 + ((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(_GLF_IDENTITY(6163.2562, mix(float(6163.2562), float(_GLF_FUZZED(50.93)), bool(false)))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (vec3(mat3x4(_GLF_IDENTITY(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0), (vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0)) * vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), float(vec3(_GLF_FUZZED((+ -4.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED((+ -4.0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), min(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED(_GLF_IDENTITY((+ -4.0), ((+ -4.0)) / 1.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652)), 0.0 + ((true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(_GLF_IDENTITY(6163.2562, mix(float(6163.2562), float(_GLF_FUZZED(50.93)), bool(false)))))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), clamp(_GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))), _GLF_IDENTITY(_GLF_FUZZED(6163.2562), (true ? _GLF_IDENTITY(_GLF_FUZZED(6163.2562), min(_GLF_FUZZED(6163.2562), _GLF_FUZZED(6163.2562))) : _GLF_FUZZED(-817.652))))) : _GLF_FUZZED((+ -4.0)))))))))), _GLF_FUZZED((+ -4.0)))))))))), float(injectionSwitch.y), bool(true)))))))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[0])), injectionSwitch[1]), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[0])), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[0])), injectionSwitch[1])) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[0])), injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))), false, false))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))), false, false))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) || false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(0.8)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(0.8)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch)).y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) / 1u))), 0u ^ (1u))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) && true)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(0u, (0u) | 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((1u), ~ (~ ((1u)))))) / 1u))), 0u ^ (1u)))))) ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), 1u)), 1u) * (gl_WorkGroupID))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), uint(uvec4(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (0u | 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)))), 1u) * (gl_WorkGroupID)))))) ^ uvec3(0u, 0u, 0u)).x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u, 1u, 1u), 0u)), (uvec3(uvec4(uvec3(1u, 1u, 1u), 0u))) | (uvec3(uvec4(uvec3(1u, 1u, 1u), 0u))))) * (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u, 1u, 1u), 0u)), (uvec3(uvec4(uvec3(1u, 1u, 1u), 0u))) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (1u)), 1u, 1u), 0u))))) * (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x))))), gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (~ (~ (workgroup_size * workgroup_id))) * 1u))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) / 1u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((int(4)) ^ 0, ((int(4)) ^ 0) << 0) : _GLF_FUZZED(-74437)))))))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
    }
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(14129) : int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), true && ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), ! (! (! ((false))))))))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), ! (! (! ((false)))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! ((false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), true && (! (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! ((false)))))) && true)))), true && ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! ((false)))))))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 | (_injected_loop_counter ++), 0 ^ (_GLF_IDENTITY(0 | (_injected_loop_counter ++), 0 + (0 | (_injected_loop_counter ++)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, (0) ^ 0))); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
