#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_70_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid;
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_70_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idsubgroup_local_id.xyz = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
  }
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz = GLF_merged2_0_3_70_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idsubgroup_local_id.xyz;
 uvec4 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.xy = GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))) | (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.xy = GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy = GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.xy;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w = subgroup_id;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)).y;
  }
 else
  {
  }
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, 0u + (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_70_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x = GLF_merged2_0_3_70_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idsubgroup_local_id.w;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id))[2], GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id[3])).x;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true, false))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) && true))
    {
     GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.z = num_workgroup;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.x = GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.z;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = (0 & 60255); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.x = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.x, 1u * (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.x = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(min(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size, GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size)))).x;
 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z = GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.w;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.z = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.z;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 uint virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w))) ^ 0u) * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy, max(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy, GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy)).y + GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid, (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid) ^ 0u)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(985.054, -40.50)))), injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.3) : injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id))) | (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id)).w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)) + ((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x + 1) % GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, min(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)))), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id : _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id))).w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)) + ((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x + _GLF_IDENTITY(1, (1) - 0)) % _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, min(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y) / 1u)) | 0u)))), (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, ~ (~ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id))).w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y))), min(min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y))), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y))), uint(uint(min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, (1u ^ 1u) ^ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, uint(_GLF_IDENTITY(uvec2(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u), (uvec2(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u)) | (uvec2(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u))))))) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, _GLF_IDENTITY(0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w), max(0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w), 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)))) * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy), _GLF_IDENTITY(uvec2(uvec2(~ (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy))), clamp(uvec2(uvec2(~ (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy))), uvec2(uvec2(~ (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy))), uvec2(uvec2(~ (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy)))))))).y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y), max(max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, _GLF_IDENTITY(0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w), uint(uvec3(0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w), 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y), 0u | (max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)))))), min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, clamp(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id, ~ (~ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id))), GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id)).w, 0u ^ (GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w))) + 0u) * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y, GLF_merged3_0_2_51_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupsubgroup_id.w * GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y))))))))) + ((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x + 1) % GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.xy.y)) * 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
  }
 else
  {
   GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.w = next_virtual_gid;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizevirtual_gidworkgroup_size.z], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY((false ? _GLF_FUZZED(bitCount(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) : _GLF_IDENTITY(1, ~ (~ (1)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(bitCount(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y) | (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)))) : _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(ivec3((~ (1)), (1 | 1), 0))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) : _GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(bitCount(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) : _GLF_IDENTITY(1, ~ (~ (1)))) | 0)), (false ? _GLF_FUZZED(bitCount(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) : _GLF_IDENTITY(1, ~ (~ (1)))))), (false ? _GLF_FUZZED(bitCount(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (1)))))))), 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
        return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)), false || ((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (false) && true), false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))) || false)), _GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(true, true))) && true, ! (_GLF_IDENTITY(! ((bool(bvec2(true, true))) && true), false || (! ((bool(bvec2(true, true))) && true))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false, _GLF_IDENTITY(false, true && (false))))) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))) && true))) && true), true, false, _GLF_IDENTITY(true, bool(bool(true)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (false) && true), false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))) || false)), _GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(true, true))) && true, ! (_GLF_IDENTITY(! ((bool(bvec2(true, true))) && true), false || (! ((bool(bvec2(true, true))) && true))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false, _GLF_IDENTITY(false, true && (false))))) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))) && true))) && true), true, false, _GLF_IDENTITY(true, bool(bool(true)))))), true, true, true))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)), true, true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-966.320), _GLF_FUZZED(-8599.2960)), bvec2(false, false))), 0.0, abs(0.0)))), vec2(mat2((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0)))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))), (true ? float(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))) : _GLF_FUZZED(float(49309)))))) + (_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-966.320), _GLF_FUZZED(-8599.2960)), bvec2(false, false))), 0.0, abs(0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-966.320), _GLF_FUZZED(-8599.2960)), bvec2(false, false))), 0.0, abs(0.0)))), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-966.320), _GLF_FUZZED(-8599.2960)), bvec2(false, false))), 0.0, abs(0.0)))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-966.320), _GLF_FUZZED(-8599.2960)), bvec2(false, false))), 0.0, abs(0.0)))))))), vec2(mat2((injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - sin(0.0)) : _GLF_FUZZED(-4066.7122)))), 0.0, 0.0)))))) : _GLF_FUZZED(vec2(1449.2478, 69.64)))).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_idnext_virtual_gid.w], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, 0), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), 1), ~ (~ (ivec4(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), 1))))))) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(43861, -3091, -44800)))), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, 0), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), 1), ~ (~ (ivec4(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 1 * (max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, _GLF_IDENTITY(0, max(0, 0))), 1))))))) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(43861, -3091, -44800)))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(25327))), 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, _GLF_IDENTITY(0, min(0, 0)), 0))))))), 1, 0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), min(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))))) >> 0)), 1, 0), (ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), 1, 0)) - ivec3(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), (~ (0)) | 0))), 0)) : _GLF_FUZZED(ivec3(43861, -3091, -44800)))))) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 0 | (max(2, 2)))) / 1))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0), (ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)) | (ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED((74074 << 21083)) : _GLF_IDENTITY(2, (2) << 0))), max(2, 2))), int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (_GLF_IDENTITY(2, max(2, 2))) | (_GLF_IDENTITY(2, max(2, 2))))), 0, 0, 0))))))))) << 0))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-45017) : 1)), (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (0 ^ 0) | (_GLF_IDENTITY(2, 0 | (2)))), 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, 0 ^ (2)), 1)), clamp(int(ivec2(_GLF_IDENTITY(2, 0 ^ (2)), 1)), int(ivec2(_GLF_IDENTITY(2, 0 ^ (2)), 1)), int(ivec2(_GLF_IDENTITY(2, 0 ^ (2)), 1))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2))))), 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-15663))))) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), clamp(int(_GLF_IDENTITY(2, max(2, 2))), int(_GLF_IDENTITY(2, max(2, 2))), int(_GLF_IDENTITY(2, max(2, 2)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) / 1)) | 0)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), clamp(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))), 0 | (_GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), min((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), min((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), min((_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(ivec4(int(_GLF_IDENTITY(2, max(2, 2))), 0, 0, 0)))))))))))))) >> 0), int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), (1) << 0), 0 | (_GLF_IDENTITY(1, (1) << 0))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), (1) << 0), 0 | (_GLF_IDENTITY(1, (1) << 0))))) * (_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, min(2, 2)), 2), (_GLF_IDENTITY(max(_GLF_IDENTITY(2, min(2, 2)), 2), (max(_GLF_IDENTITY(2, min(2, 2)), 2)) + 0)) | (max(_GLF_IDENTITY(2, min(2, 2)), 2))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), max(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2))), int(_GLF_IDENTITY(2, max(2, 2)))))) ^ 0), int(ivec4(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(53079))), max(2, 2))) + (0 << _GLF_IDENTITY(int(6), int(6)))))), 2)), 2))), 0, 0, 0))))))), 1, 0, 1)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0, ((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0) | ((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0))) | ((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0)))) >> 0), 64, 4);
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     do
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))) / 1.0)) + 0.0), injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), injectionSwitch.x), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), float(vec2(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0)))))))))) - 0.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))) / 1.0)) + 0.0), injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), injectionSwitch.x), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), float(vec2(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0)))))))))) - 0.0) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(step(3066.9139, -82.59)))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))), injectionSwitch.x)) * 1.0), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))), max((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(50.89)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0)))))) / 1.0)) + 0.0), injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), injectionSwitch.x), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.2, 82.43)))).x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), injectionSwitch.x)), float(vec2(clamp(min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0)))))))))) - 0.0) > injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-667.132), _GLF_FUZZED((703.805 / -173.593))), bvec2(false, false))).x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true)))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
      {
       return;
      }
    }
  }
}
