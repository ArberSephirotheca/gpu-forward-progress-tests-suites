#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-0.6, -6921.8113)))).x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.1)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.4) : 1.0)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(5237.6363) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), ((~ (gl_WorkGroupID.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), uint(uvec4(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), 0u, 0u, 0u)))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), min(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), _GLF_IDENTITY(((~ (gl_WorkGroupID.x))), (((~ (gl_WorkGroupID.x)))) | 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) ^ (~ (gl_WorkGroupID.x)))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), ((~ _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec4((gl_WorkGroupID.x), 0u, 1u, 1u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(315.023, 4.6)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (gl_WorkGroupID.x)))))), (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (0u | 0u) + ((~ (gl_WorkGroupID.x))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (0u | 0u) + ((~ (gl_WorkGroupID.x))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))), (_GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ _GLF_IDENTITY((~ (num_workgroup)), uint(_GLF_IDENTITY(uvec3((~ (num_workgroup)), 0u, 0u), (_GLF_IDENTITY(uvec3((~ (num_workgroup)), 0u, 0u), (uvec3((~ (num_workgroup)), 0u, 0u)) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.9, 2006.4762)) : injectionSwitch))) - sin(vec2(0.0, 0.0))).y))))) : _GLF_FUZZED(subgroup_local_id))))))) * 1u)) + 0u) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))))))))))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), _GLF_IDENTITY(((~ (gl_WorkGroupID.x))), _GLF_IDENTITY((((~ (gl_WorkGroupID.x)))) << 0u, (_GLF_IDENTITY((((~ (gl_WorkGroupID.x)))) << 0u, ~ (~ ((((~ (gl_WorkGroupID.x)))) << 0u)))) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u)) | (num_workgroup)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ _GLF_IDENTITY((~ (num_workgroup)), clamp((~ (num_workgroup)), (~ (num_workgroup)), (~ (num_workgroup)))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), ~ _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))), min((_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))), (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-6624.9674 - -63.45))), float(0.0), bool(true))), injectionSwitch.x))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), min(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) | (~ (gl_WorkGroupID.x))))))))))))) : _GLF_FUZZED(subgroup_local_id)), ~ (~ ((true ? _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), ((~ (gl_WorkGroupID.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), uint(uvec4(false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(uvec2(~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (~ (~ (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(591.605, -850.233, -750.647, 8.7, 9.7, 9.6, 2313.7507, 6.7, -730.119, -90.52, -8.4, -9586.6264, -7458.2420, 3.9, -2669.4237, -1017.2372)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0), (false ? _GLF_FUZZED(mat4(-456.678, 34.02, -299.533, 34.20, 5.7, -7.4, 8.4, 486.050, 1802.9942, 3.2, -585.225, 468.439, -467.908, 30.58, 237.554, 698.469)) : mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(1142.9436, -8827.1176, 4753.0703).t) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0))))))), injectionSwitch.y))))) : _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(dot(vec3(2883.1003, 6.9, 9.6), vec3(-677.754, -0.5, 731.616)))) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))))))) ^ (~ (gl_WorkGroupID.x)))))), 0u, 0u, 0u)))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), min(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), _GLF_IDENTITY(((~ (gl_WorkGroupID.x))), (((~ (gl_WorkGroupID.x)))) | 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) ^ (~ (gl_WorkGroupID.x)))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), ((~ _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec4((gl_WorkGroupID.x), 0u, 1u, 1u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(315.023, 4.6)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (gl_WorkGroupID.x)))))), (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (0u | 0u) + ((~ (gl_WorkGroupID.x))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (_GLF_IDENTITY((~ (gl_WorkGroupID.x)), (0u | 0u) + ((~ (gl_WorkGroupID.x))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))), (_GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_FUZZED((~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ _GLF_IDENTITY((~ (num_workgroup)), uint(_GLF_IDENTITY(uvec3((~ (num_workgroup)), 0u, 0u), (_GLF_IDENTITY(uvec3((~ (num_workgroup)), 0u, 0u), (uvec3((~ (num_workgroup)), 0u, 0u)) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.9, 2006.4762)) : injectionSwitch))) - sin(vec2(0.0, 0.0))).y))))) : _GLF_FUZZED(subgroup_local_id))))))) * 1u)) + 0u) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))))))))))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupID.x)), _GLF_IDENTITY(((~ (gl_WorkGroupID.x))), _GLF_IDENTITY((((~ (gl_WorkGroupID.x)))) << 0u, (_GLF_IDENTITY((((~ (gl_WorkGroupID.x)))) << 0u, ~ (~ ((((~ (gl_WorkGroupID.x)))) << 0u)))) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (~ (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u)) | (num_workgroup)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(~ _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ _GLF_IDENTITY((~ (num_workgroup)), clamp((~ (num_workgroup)), (~ (num_workgroup)), (~ (num_workgroup)))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), ~ _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))), min((_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))), (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-6624.9674 - -63.45))), float(0.0), bool(true))), injectionSwitch.x))))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), min(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) | (~ (gl_WorkGroupID.x))))))))))))) : _GLF_FUZZED(subgroup_local_id))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(8.1)), bool(false)))), float(float(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), mix(float(_GLF_FUZZED(3.6)), float(max(injectionSwitch[1], injectionSwitch[1])), bool(true))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(8.1)), bool(false)))), float(float(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), mix(float(_GLF_FUZZED(3.6)), float(max(injectionSwitch[1], injectionSwitch[1])), bool(true))))))))).x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)))))) | 0u)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), ((subgroup_local_id + 1)) | 0u)) | ((subgroup_local_id + 1)))) / 1u) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(30.85, 39.75).s)), float(injectionSwitch.y), bool(true))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))) && true)), true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, false, false, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, false, false, true))))) && true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bool(false))), true)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) && true)), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bool(false))), true)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) && true)), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bool(false))), true)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) && true)), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) && true), true, true))) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4369.7423))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-262.709)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))) + (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), ! (! (false))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))))) || false)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), ! (! (false))))) || false)), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), ! (! (false))))) || false)), false, true, true)))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), clamp((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), 0u | ((next_virtual_gid) | (next_virtual_gid))), max((next_virtual_gid) | (next_virtual_gid), _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : (next_virtual_gid) | (next_virtual_gid))))))))))), uint(uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 1u, 1u, 0u)))))], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-4.1)), bool(false)))), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-4.1)), bool(false)))), injectionSwitch.x)) > injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
