#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(mat2x4((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(mat2x4((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0) || false)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))); _injected_loop_counter ++)
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (_GLF_IDENTITY(false, (false) && true)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 | 1), 0 ^ _GLF_IDENTITY(((1 | 1)), (((1 | 1))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))))) & _GLF_IDENTITY(1, 1 * (1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 1), bool(bool(_injected_loop_counter != (1 ^ 1))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)))) || false)), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))))
  barrier();
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, ~ (~ (0))))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(-61051) : _injected_loop_counter --)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(false, (false) || false), true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))))), true)), true, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))) | _GLF_IDENTITY(_GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), max((uvec3(uvec3(gl_NumWorkGroups))), (uvec3(uvec3(gl_NumWorkGroups))))), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED((24473u ^ (uvec3(68472u, 63175u, 139402u) % 61379u))) : uvec3(gl_NumWorkGroups))))), (false ? _GLF_FUZZED(uvec3(31581u, 44436u, 63670u)) : (uvec3(uvec3(gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(50749u, 37627u, 175074u)))), ((uvec3(uvec3(gl_NumWorkGroups))) | _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY((true ? _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(31581u, 44436u, 63670u)) : (uvec3(uvec3(gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(50749u, 37627u, 175074u))), ((true ? _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(31581u, 44436u, 63670u)) : (uvec3(uvec3(gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(50749u, 37627u, 175074u)))) ^ uvec3(0u, 0u, 0u)))) | ((uvec3(uvec3(gl_NumWorkGroups))) | _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), (true ? _GLF_IDENTITY((uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))), (false ? _GLF_FUZZED(uvec3(31581u, _GLF_IDENTITY(44436u, min(_GLF_IDENTITY(44436u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (44436u)), 44436u)), 63670u)) : (uvec3(uvec3(gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(50749u, 37627u, 175074u)))))))).x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), true)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((false)) && true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.9), clamp(_GLF_FUZZED(8.9), _GLF_FUZZED(8.9), _GLF_IDENTITY(_GLF_FUZZED(8.9), abs(1.0) * (_GLF_FUZZED(8.9))))), max(_GLF_IDENTITY(_GLF_FUZZED(8.9), clamp(_GLF_FUZZED(8.9), _GLF_FUZZED(8.9), _GLF_IDENTITY(_GLF_FUZZED(8.9), abs(1.0) * (_GLF_FUZZED(8.9))))), _GLF_IDENTITY(_GLF_FUZZED(8.9), clamp(_GLF_FUZZED(8.9), _GLF_FUZZED(8.9), _GLF_IDENTITY(_GLF_FUZZED(8.9), abs(1.0) * (_GLF_FUZZED(8.9)))))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.x), bool(true)))) + 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)))) || false))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))))).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(932.171))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0))))).y))), true, false, false))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, sqrt(0.0)))), 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(530.594))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5216.2635)))) * 1.0)))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), 1.0), vec3(sqrt(0.0), 0.0, 1.0)), dot(vec3(0.0, sqrt(0.0), 1.0), vec3(sqrt(0.0), 0.0, 1.0))), sin(0.0)))), 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(mat4x3(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.53)), float(0.0), bool(true))), 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-6.6))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(1.0), 0.0, cos(0.0), exp(0.0))), min(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(1.0), 0.0, cos(0.0), exp(0.0))), float(mat3x4(float(mat2x3(1.0, 1.0, abs(1.0), 0.0, cos(0.0), exp(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(mat2x3(1.0, 1.0, abs(1.0), 0.0, cos(0.0), exp(0.0)))))), determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0)), (true ? 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(-3381.9086)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true)))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((-446.530 - mat3(342.474, 2.5, 4.0, -754.320, -923.249, -4.1, 604.361, 412.360, -61.58))) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, abs(1.0), abs(0.0), 0.0, 0.0, determinant(mat2(sqrt(0.0), 0.0, 1.0, 0.0)), 1.0))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))), (true ? min(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, min((0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, (false ? _GLF_FUZZED(69.77) : (0.0) * 1.0))))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), min(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))), 0.0, 0.0)), _GLF_IDENTITY(float(mat4x3(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 1.0, abs(0.0), 0.0)), min(float(mat4x3(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(1.0), _GLF_FUZZED(float(false)), (vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(9523.7143)), vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], (vec4(0.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(4225.9604), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, 0.0))[3], mix(float((vec4(0.0, 0.0, 0.0, 0.0))[3]), float(_GLF_FUZZED(-5.6)), bool(false)))), bvec4(true, true, false, true))), 0.0, 0.0)), vec4(mat3x4(vec4(mat2x3(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(1.0), _GLF_FUZZED(float(false)), (vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(9523.7143)), vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], (vec4(0.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(4225.9604), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, 0.0))[3], mix(float((vec4(0.0, 0.0, 0.0, 0.0))[3]), float(_GLF_FUZZED(-5.6)), bool(false)))), bvec4(true, true, false, true))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0))))), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), float(float(determinant(mat2(0.0, 0.0, 0.0, 0.0))))), sin(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(injectionSwitch, vec2(6.5, -8097.4184))) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, abs(0.0), 0.0)), float(mat4x3(dot(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 1.0, abs(0.0), 0.0))))))) : _GLF_FUZZED(vec4(484.634, -7918.4116, -9.6, 9924.3373)[1])))))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))).y))))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, sqrt(1.0), 0.0), (true ? vec4(1.0, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED((vec4(-88.03, 0.5, 67.45, 164.752) + roundEven(vec4(91.13, -9.9, -6.8, 4.2)))))), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)), float(_GLF_FUZZED(1.7)), bool(false))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(9.4) : determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), max(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), (vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))) * mat4(1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5216.2635), max(_GLF_IDENTITY(_GLF_FUZZED(-5216.2635), float(mat2(_GLF_FUZZED(-5216.2635), 0.0, 1.0, 1.0))), _GLF_FUZZED(-5216.2635)))))) * 1.0), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5216.2635), max(_GLF_IDENTITY(_GLF_FUZZED(-5216.2635), float(mat2(_GLF_FUZZED(-5216.2635), 0.0, 1.0, 1.0))), _GLF_FUZZED(-5216.2635)))))) * 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5216.2635), max(_GLF_IDENTITY(_GLF_FUZZED(-5216.2635), float(mat2(_GLF_FUZZED(-5216.2635), 0.0, 1.0, 1.0))), _GLF_FUZZED(-5216.2635)))))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5216.2635), max(_GLF_IDENTITY(_GLF_FUZZED(-5216.2635), float(mat2(_GLF_FUZZED(-5216.2635), 0.0, 1.0, 1.0))), _GLF_FUZZED(-5216.2635)))))) * 1.0), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5216.2635), max(_GLF_IDENTITY(_GLF_FUZZED(-5216.2635), float(mat2(_GLF_FUZZED(-5216.2635), 0.0, 1.0, 1.0))), _GLF_FUZZED(-5216.2635)))))) * 1.0) : _GLF_FUZZED(6.8)))))))), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), sqrt(1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) + (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4579.7936) : 0.0))), vec4(0.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), float(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), 1.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(-749.522, -57.20))))), vec4(0.0, 0.0, 0.0, 1.0)), float(mat4x3(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-6.6), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), float(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), 1.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(-749.522, -57.20))))), vec4(0.0, 0.0, 0.0, 1.0)), float(mat4x3(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-6.6), true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), float(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.3)), float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true))), 1.0, 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(-749.522, -57.20))))), vec4(0.0, 0.0, 0.0, 1.0)), float(mat4x3(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(float(dot(vec4(1.0, 1.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-6.6))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8245.5783)))), float(_GLF_FUZZED((- 392.246))), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0))) + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.46))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), 1.0 * (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8245.5783)))), float(_GLF_FUZZED((- 392.246))), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0))) + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.46))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), 1.0 * (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8245.5783)))), float(_GLF_FUZZED((- 392.246))), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0))) + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.46))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), 1.0 * (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))))), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))).y)))))) && true) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bool(! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), bool(bool(! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), bool(bool(! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))) || false)), true, false)))))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true && (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))
      {
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8661.2614, 5576.7042)) : injectionSwitch)), injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) | _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (workgroup_base) / 1u)) - 0u)))), 0u, 1u, (1u & _GLF_IDENTITY(1u, uint(uint(1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) / 1u) * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) / _GLF_IDENTITY(1u, 0u ^ (1u))) * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))))), ((subgroup_id * subgroup_size)) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)), _GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u))))) - 0u) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) | 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(bitfieldReverse(-61935)))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_injected_loop_counter < 1))), false || (! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))) && true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false, true, false)))))) || false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uvec3(subgroup_size, 0u, 0u))), ~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u)))))), _GLF_IDENTITY(~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u))))), _GLF_IDENTITY(0u ^ (~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u)))))), (0u ^ (~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u))))))) ^ 0u))))))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))))) ^ 0u)))) + 0u) % subgroup_size)))), clamp((((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(~ (~ (uint(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(subgroup_size, 0u, 0u)) << (uvec3(0u, 0u, 0u) & uvec3(195876u, 111394u, 122859u))))))), 0u ^ (~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u)))))))))))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), (false ? _GLF_FUZZED((subgroup_size / num_workgroup)) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1)))), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1)))), (55680u & 0u) | (_GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))))))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))))) + 0u) % subgroup_size)))), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u))))), 0u ^ (~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u)))))))))))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1))))))))))) + 0u) % subgroup_size)))), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 0u)), ~ (~ (uint(uvec3(subgroup_size, 0u, 0u))))), uint(_GLF_IDENTITY(uint(uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(~ (~ (uint(uint(uvec3(subgroup_size, 0u, 0u))))), 0u ^ (~ (~ (uint(uint(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), 0u, 0u)))))))))))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u | ((subgroup_local_id + 1)), 1u * (0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, 0 ^ (1))))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))))) + 0u) % subgroup_size)))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true))))))
    break;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false))))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec3(1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(125.932) : injectionSwitch.y)))))) && (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)), ! (! (! (false))))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                    }
                   barrier();
                  }
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))));
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(-6.4)), vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), bvec2(true, true))))), 0.0, 0.0, sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0))).y) && true), false, false, true)))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-60692) : _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))))))), 4, 64, 4);
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))
            break;
           barrier();
          }
         barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(12222) : 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
}
