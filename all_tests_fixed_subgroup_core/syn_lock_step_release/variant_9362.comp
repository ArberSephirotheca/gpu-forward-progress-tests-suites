#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-333.690, -6698.7440)) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))))))), true))))) || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u)))) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || ((false))))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), (uvec3(0u, 1u, 0u)) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), (uvec3(0u, 1u, 0u)) ^ uvec3(0u, 0u, 0u)))) + 0u))))) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))))) % subgroup_size), uint(uint(((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(max(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, (0u | 1u), 0u)))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) % subgroup_size) * 1u))), (max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84610)))), (false ? _GLF_FUZZED(ivec4(-57619, -92226, -86774, -71152)) : ivec4(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))))), (0u | 0u) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84610)))), (false ? _GLF_FUZZED(ivec4(-57619, -92226, -86774, -71152)) : ivec4(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))))), (true ? subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84610)))), (false ? _GLF_FUZZED(ivec4(-57619, -92226, -86774, -71152)) : ivec4(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))))) : _GLF_FUZZED(subgroup_local_id)))))) % subgroup_size))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u), (_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) + 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))) - 0u)))), min((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))))), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_size, max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : subgroup_size) | (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))))))), max((_GLF_IDENTITY(max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)), max((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size))) >> 0u)), 0u | ((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)))))) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))))))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))) >> 0u, ~ (_GLF_IDENTITY(~ ((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))) >> 0u), max(~ ((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))) >> 0u), ~ ((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size))) >> 0u))))))) | (max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))))) | 0u), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))))))))))))))) ^ 0u))))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1)), 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))) + 1)))))) << 0u))) % subgroup_size), 0u | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))) / 1u) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1))), (uint(uint((subgroup_local_id + 1)))) >> 0u)))) % subgroup_size))) >> 0u)) | _GLF_IDENTITY((max(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), max((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) ^ 0u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))) / 1u) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(max(((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | _GLF_IDENTITY((max(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), max((max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), ((subgroup_local_id + 1) % subgroup_size))), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 1u, 1u))) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) ^ 0u)))), uint(uvec3((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))) / 1u) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | _GLF_IDENTITY((max(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), max((max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u))), (max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size))))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), max((((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)))))), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(virtual_gid))))))))), 1u, 1u))))))) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY((subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | ((subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (true ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(virtual_gid))), _GLF_FUZZED(workgroup_base))))))) % subgroup_size) | 0u, (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, 1u, 1u)), 1u * (uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 0u), (uvec4(subgroup_local_id, 1u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u)))) + 1), ((subgroup_local_id + 1)) << 0u))) % subgroup_size) | 0u) | (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))) % subgroup_size) | 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) % subgroup_size)), _GLF_IDENTITY((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u), min(uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u), uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)))), (uint(_GLF_IDENTITY(uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u), min(uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u), uint((max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u))))) * 1u)))) | (max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, (0u ^ 0u), 1u)))))) >> 0u)) | (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) ^ 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))))) && true), false || (! _GLF_IDENTITY((! (false)), false || ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), 0u | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.2)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.2))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))), bool(bool(! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))))))) && true)))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.2))))))))))))))))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) + 0u)], uint(2), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
