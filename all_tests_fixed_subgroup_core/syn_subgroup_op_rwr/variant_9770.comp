#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(630.460)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((false)))), true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, true))) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(-9850.8080)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x3(vec2(0.0, 0.0), 1.0, 0.0, 1.0, 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(-9850.8080)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x3(vec2(0.0, 0.0), 1.0, 0.0, 1.0, 1.0)))))).y) * sqrt(1.0))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat4(9821.5871, -9.7, 0.7, 3.2, 3112.1815, -7193.7445, 0.0, -2702.2403, 5317.2491, 60.86, 4774.4451, 59.41, -0.3, -6712.2820, 86.27, -6305.5616))) : injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(3u), uvec3(1u, 1u, 1u) * (uvec3(3u))))), uvec3(3u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(3u))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(_GLF_IDENTITY(3u, (3u) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) | (uvec3(3u))), uvec3(3u))))))) + _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u)) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))) >> uvec3(0u, 0u, 0u)))) | (gl_NumWorkGroups), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u ^ (3u))) + (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 3u))), uvec3(3u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) | uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, 0)))))])), gl_NumWorkGroups[0]), clamp(min(_GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, 0)))))])), gl_NumWorkGroups[0]), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, 0)))))])), gl_NumWorkGroups[0]), (min(_GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, 0)))))])), gl_NumWorkGroups[0])) - 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[0], max(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, min(0, 0)))))])), gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) | uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), uvec3(uvec3(uvec3(3u))))) | (uvec3(3u))))) | (gl_NumWorkGroups)) | ((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_local_id % usubBorrow(subgroup_size, subgroup_local_id, subgroup_id)))))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((~ (0u)) - 0u, 1u * (_GLF_IDENTITY((~ (0u)) - 0u, 0u ^ ((~ (0u)) - 0u))))))))), 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))))), 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | uvec3(0u, 0u, 0u), max((uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))))), 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))))), 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))))), 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | uvec3(0u, 0u, 0u)))))), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? uvec4(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), 0u) : _GLF_FUZZED(uvec4(41743u, 6940u, 159198u, 123076u)), ~ (~ (_GLF_IDENTITY(true, true && (true)) ? uvec4(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), 0u) : _GLF_FUZZED(uvec4(41743u, 6940u, 159198u, 123076u)))))))) >> uvec4(0u, 0u, 0u, 0u))))) | (gl_NumWorkGroups)))) | ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(16862u, 87925u, 171377u))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))))))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))))))) | uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))))))) | uvec3(0u, 0u, 0u)) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))))))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, (3u) ^ 0u)))))) | _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), _GLF_IDENTITY((true ? _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), min((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (_GLF_IDENTITY(0u, 0u + (0u))) * (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(25080u, 37842u, 197787u)))))), uvec3(0u, 0u, 0u) ^ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (gl_NumWorkGroups), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) << 0u)), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)), max(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))) | ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))))) | (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), max(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), max((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) + uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))) << 0u), 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))) << 0u), 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) * uvec3(1u, 1u, 1u))) | (gl_NumWorkGroups), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 1u * (0u)))), 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, ~ (~ (3u))), 3u))))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)), min(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)), _GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)), (false ? _GLF_FUZZED(uvec3(126065u, 82220u, 18828u)) : true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(uvec4((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), 1u))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((_GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)), max(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false))) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))) | ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, _GLF_IDENTITY(52265u, 0u ^ (52265u)), 191786u))))))))) | (gl_NumWorkGroups)), ((uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(16862u, 87925u, 171377u))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), min((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(25080u, 37842u, 197787u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) / uvec3(1u, 1u, 1u))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))))) | (gl_NumWorkGroups), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) << 0u)), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)), max(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) | (3u))), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, _GLF_IDENTITY(52265u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (52265u)), 191786u)))) | ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))))) | (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), max(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), max((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) + uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(0u, min(0u, 0u)))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), min(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u))))))))))))) << 0u), 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (gl_NumWorkGroups), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(uvec4((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), 1u))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((_GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)), max(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))) | ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))))) | (gl_NumWorkGroups)), ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)) | uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(16862u, 87925u, 171377u))), ~ (~ ((true ? _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), min((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(25080u, max(25080u, 25080u)), 37842u, 197787u)))))), uvec3(0u, 0u, 0u) ^ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) << 0u)), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)), max(((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))) | ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))))) | (gl_NumWorkGroups)), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), max(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), max((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) + uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))) << 0u), 0u)), 0u + (0u)), 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (gl_NumWorkGroups), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(uvec4((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), 1u))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((_GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))), uvec3(3u))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), uvec3(0u, 0u, 0u) ^ ((true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), uvec3(uvec4((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), 1u))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), ((_GLF_IDENTITY(uvec3(3u), uvec3(3u)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))) / uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))), max(((uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(4559u))), 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))), ((_GLF_IDENTITY(true, (true) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u)))) | ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))))) | (gl_NumWorkGroups)), ((uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? ~ (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) : _GLF_FUZZED(uvec3(68678u, 52265u, 191786u))))))) | (gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(16862u, 87925u, 171377u))))))) ^ uvec3(0u, 0u, 0u)))).x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), (_GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), mix(float(_GLF_FUZZED(2.6)), float(float(_GLF_FUZZED(-0.1))), bool(true)))) * 1.0), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))), (float(mat3x2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))), max(clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), mix(float(_GLF_FUZZED(323.136)), float(determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), bool(true)))))) + abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-73.89) : _GLF_IDENTITY(float(mat3x2(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), (_GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(2.6, 2.6)))), float(float(_GLF_FUZZED(-0.1))), bool(true)))) * 1.0), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-2.9) : (1.0))), _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(6.4))), (1.0))), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))), (float(mat3x2(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), clamp(float(_GLF_FUZZED(-0.1)), float(_GLF_FUZZED(-0.1)), float(_GLF_FUZZED(-0.1)))), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))), max(clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), mix(float(_GLF_FUZZED(323.136)), float(determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), (mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true)))))) + abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), (float(_GLF_FUZZED(-0.1))) - 0.0), bool(false)), _GLF_IDENTITY(float(mat3x2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))), (float(mat3x2(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), mix(float(_GLF_FUZZED(-914.957)), float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))), bool(true))), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) * 1.0), length(normalize(vec3(1.0, 1.0, 1.0))))))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))) + abs(determinant(mat3(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), abs(0.0), 1.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), _GLF_IDENTITY(float(mat3x2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2226.6074)), bool(false))))), 0.0, 0.0)), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))), (float(mat3x2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat2x3(vec3(1.0, 1.0, 1.0), 0.0, round(length(normalize(exp(0.0)))), 1.0)))))))), determinant(mat3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))) + abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(958.113)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-62.36)), bool(false))))), 0.0, 0.0))))))))), false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), (false ? _GLF_FUZZED((true ? -1810.5999 : -50.15)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), (false ? _GLF_FUZZED((true ? -1810.5999 : _GLF_IDENTITY(-50.15, mix(float(_GLF_FUZZED(4.6)), float(-50.15), bool(true))))) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), (false ? _GLF_FUZZED((true ? -1810.5999 : -50.15)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), (false ? _GLF_FUZZED((true ? -1810.5999 : -50.15)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)))))))))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))))), ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), mix(float(_GLF_FUZZED(-4308.5323)), float(float(_GLF_FUZZED(-0.1))), bool(true))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false))))))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), transpose(transpose(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-0.1, mix(float(_GLF_FUZZED(-8.8)), float(-0.1), bool(true))))), bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(9972.2177)), bool(false))), sin(0.0), 0.0), transpose(transpose(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-0.1, mix(float(_GLF_FUZZED(-8.8)), float(-0.1), bool(true))))), bool(false)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0), transpose(transpose(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-0.1, mix(float(_GLF_FUZZED(-8.8)), float(-0.1), bool(true))))), bool(false))))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id))) * workgroup_id) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true)))))))) ? 0u : _GLF_FUZZED(workgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0)])))).x), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0)])))).x), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0)])))).x), 0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), _GLF_IDENTITY((1), (false ? _GLF_FUZZED((-99609 & -39073)) : (1))) ^ 0)) - 0)])))).x)))) - 0.0)) + 0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(0.0, 0.0) + (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0))) : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y)), 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7482.8876), _GLF_FUZZED((-5853.3271 * -6920.6840))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y)))), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y)))), 0.0, 0.0, 0.0))), transpose(transpose(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-718.859)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y)))), 0.0, 0.0, 0.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-74.23, 6508.6696)) : vec2(0.0, 0.0))), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y))) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(88.53)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-799.552) : 0.0)), 1.0, 1.0))).y))) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 ^ 0) ^ (64)), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, int(int(1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y)), false, true), true))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y)), false, true), true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), true))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9514.3727) : injectionSwitch[0])), injectionSwitch[1])).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9084.3461), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9580.6363)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))))), true)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(1.0)))).x > injectionSwitch.y), true)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)), false))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), true && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), true)))), false))), false, true))))))), false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) / 1u), _GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, (read_2) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) >> 0u)), 0u, 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), _GLF_IDENTITY(read_2, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? read_2 : _GLF_FUZZED(next_virtual_gid)))))), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid)))), (clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid))))) >> 0u))), 0u, 1u))))) : _GLF_FUZZED((uvec3(161509u, 148335u, 152805u) / uvec3(119857u, 64607u, 134639u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid)))), (clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid))))) >> 0u))), 0u, 1u))))) : _GLF_FUZZED((uvec3(161509u, 148335u, 152805u) / uvec3(119857u, 64607u, 134639u)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) >> 0u)), 0u, 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), _GLF_IDENTITY(read_2, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? read_2 : _GLF_FUZZED(next_virtual_gid)))))), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid)))), (clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid))))) >> 0u))), 0u, 1u))))) : _GLF_FUZZED((uvec3(161509u, 148335u, 152805u) / uvec3(119857u, 64607u, 134639u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), 0u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid)))), (clamp(read_2, read_2, _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(next_virtual_gid))))) >> 0u))), 0u, 1u))))) : _GLF_FUZZED((uvec3(161509u, 148335u, 152805u) / uvec3(119857u, 64607u, 134639u)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))))))) >> _GLF_IDENTITY(0u, (0u & 170371u) + (0u)))) + 1, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))))))), ((bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(1u, ~ (~ (1u))) * (_GLF_IDENTITY(read_2, 0u | (read_2))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), ! (! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false))))))))))), false || (bool(! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false)))))))))))), bool(bool(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false, true, false))))), false, true, false)))))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(false || (bool(! (! (_GLF_DEAD(false))))), ! (! (false || (bool(! (! (_GLF_DEAD(false)))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true) || (bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(! (! (_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false || (bool(! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (false || (bool(! (! (_GLF_DEAD(false)))))), bool(bvec2(! (false || (bool(! (! (_GLF_DEAD(false)))))), false))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(! (! (_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false || (bool(! (! (_GLF_DEAD(false))))), ! (! (false || (bool(! (! (_GLF_DEAD(false))))))))))))))) || false)))))))) && true)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, false || (false))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-66.73, -0.4)))), mix(vec2(_GLF_FUZZED(1408.6240), _GLF_FUZZED(649.034)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
