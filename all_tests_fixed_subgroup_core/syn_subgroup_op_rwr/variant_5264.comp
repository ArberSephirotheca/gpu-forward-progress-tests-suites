#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 ivec2 _f0;
 bool _f1;
 uvec4 _f2;
 uvec2 _f3;
 bvec4 _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_7 {
 float _f0;
 ivec3 _f1;
 mat2 _f2;
 bool _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 uvec3 _f1;
 mat3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
} ;

struct _GLF_struct_3 {
 bool _f0;
 vec4 _f1;
 int _f2;
 mat3 _f3;
 mat3x2 _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat4x3 _f1;
 mat4x3 _f2;
 float _f3;
 uvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_5 {
 float _f0;
 mat4x3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 mat2 _f4;
 _GLF_struct_4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 mat4 _f2;
 int _f3;
 _GLF_struct_9 _f4;
 uint read_1;
 int _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size))))))))) * 1u), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((0u ^ 0u), uint(_GLF_IDENTITY(uvec3((0u ^ 0u), 1u, 1u), ~ (~ (uvec3((0u ^ 0u), 1u, 1u)))))) | ((subgroup_size)))) << 0u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), min((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))), ~ (~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size))))))))) * 1u), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((0u ^ 0u), uint(_GLF_IDENTITY(uvec3((0u ^ 0u), 1u, 1u), ~ (~ (uvec3((0u ^ 0u), 1u, 1u)))))) | ((subgroup_size)))) << 0u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), min((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))), ~ (~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))))) | 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 1u, 1u, 0u)), (uint(uvec4((subgroup_size), 1u, 1u, 0u))) << 0u)))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))))))), (_GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))) | 0u))))) * 1u), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) / (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min((0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u, 1u), ~ (~ (uvec3((0u ^ 0u), 1u, 1u)))))) | ((subgroup_size)))) << 0u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), ~ (~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))))) | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), _GLF_IDENTITY(uint(uint((subgroup_size))), uint(uint(uint(uint((subgroup_size)))))), uint(uint((subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size))))))))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), uint(uint((subgroup_size))))))))) * 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size)))))), 1u * (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint((subgroup_size))), clamp(uint(uint((subgroup_size))), uint(uint((subgroup_size))), uint(uint((subgroup_size))))))))) * 1u : _GLF_FUZZED(subgroup_size)))) << 0u)), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((0u ^ 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((0u ^ 0u), 1u, 1u), (false ? _GLF_FUZZED(uvec3(48480u, 52718u, 47149u)) : uvec3((0u ^ 0u), 1u, 1u))), ~ (~ _GLF_IDENTITY((uvec3((0u ^ 0u), 1u, 1u)), max((uvec3((0u ^ 0u), 1u, 1u)), (uvec3((0u ^ 0u), 1u, 1u)))))))) | ((subgroup_size)))) << 0u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), ~ _GLF_IDENTITY((~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))), 1u * ((~ (~ (~ ((_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) << 0u))))))))), 1u * (~ (_GLF_IDENTITY((~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))))), 1u * ((~ (~ (~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))))))))))))))) | 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)) << 0u)), (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))) ^ 0u)))))) << 0u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0), max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_1(uvec4(1u), _GLF_struct_0(true, uvec3(1u))), _GLF_struct_5(1.0, mat4x3(1.0), _GLF_struct_2(true, mat4x3(_GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat4x3(1.0), 1.0, _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), ivec2(1)), _GLF_struct_3(true, vec4(1.0), 1, mat3(1.0), mat3x2(1.0), mat2x3(1.0), 1u), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, ! (! (true)))), false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), true, true)))), bvec2(bvec3(bvec2(true), true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false)))), false))), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false)))), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))) > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false)))), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))))), false)), true)))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))), false), true))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))), false), true))), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true))))), bvec2(bvec2(bvec2(bvec3(bvec2(true), true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))), false), true))), false)), true))))))))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), true))))), bvec2(bvec3(bvec2(true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec2(bvec3(bvec2(true), true)))), false))), false))), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)), true))))))))))), bvec2(bvec3(bvec2(true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec2(bvec3(bvec2(true), true)))), false))), false))), true, true))), true, true))))), false)), true)))), false))), true)))), vec2(1.0)), _GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4((mat3x4(1.4, -439.856, 7.4, -7812.3019, -1.2, 3.3, -8658.3501, -1.1, -8701.4127, -901.781, 5569.1028, -4.3) , mat2x4(0.2, 30.96, -12.18, -1.4, -6.5, 30.16, 9791.6697, 0.5)))))), 1, _GLF_struct_9(_GLF_struct_6(ivec2(1)), uvec3(1u), mat3(1.0), _GLF_struct_7(1.0, ivec3(1), mat2(1.0), true), _GLF_struct_8(_GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), max(ivec2(1), _GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(34066, 2663)) : ivec2(1))))), ~ (~ (ivec2(1)))), ivec2(1))), true, uvec4(1u), uvec2(1u), bvec4(true), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1), mat4x2(1.0)), mat2x4(1.0)), atomicLoad(buf[virtual_gid], 4, 64, 0), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))) | (next_virtual_gid), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))), 0u ^ (next_virtual_gid))) | (next_virtual_gid)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), 0u | (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))))) / 1u)))))], uint(_GLF_struct_replacement_10.read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_10.read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, false || (((! (false))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, tan(0.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false)), bool(bvec3(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))), true, true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_10.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, 1u, 1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(68666u, _GLF_IDENTITY(149138u, (149138u) | (149138u)), 135867u), ~ (~ (uvec3(68666u, _GLF_IDENTITY(149138u, (149138u) | (149138u)), 135867u)))), uvec3(uvec3(uvec3(68666u, _GLF_IDENTITY(149138u, (149138u) | (149138u)), 135867u))))) : uvec3(read_2, 1u, 1u)))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, clamp(_GLF_IDENTITY(8.6, clamp(8.6, _GLF_IDENTITY(8.6, max(8.6, 8.6)), 8.6)), 8.6, 8.6)))), min(float(_GLF_FUZZED(8.6)), float(_GLF_FUZZED(8.6)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && true)), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
