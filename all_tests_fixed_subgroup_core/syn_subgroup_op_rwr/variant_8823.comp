#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || false))) && true)), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(-1.4), _GLF_FUZZED(863.559), (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0))[3]), vec4(_GLF_FUZZED(4622.1275), (vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(-1.4)), bvec4(false, true, true, false)))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), (float(vec4(1.0, 0.0, 0.0, 1.0))) / 1.0)), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(68.35))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(step(degrees(-2843.1403), -73.34)))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3293.2392))), 1.0)), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(cos(0.0))), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(faceforward(-7.0, -4.7, -7.6)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.2, 2.7, -21.59, 8.4, 621.218, -8012.8820, 48.50, -3400.2314)) : mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.2, 2.7, -21.59, 8.4, 621.218, -8012.8820, 48.50, -3400.2314)) : mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), float(float(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.2, 2.7, -21.59, 8.4, 621.218, -8012.8820, 48.50, -3400.2314)) : mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))))), float(_GLF_FUZZED(8.8)), bool(false)))), 1.0)))))) * mat2(1.0))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false))), false, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true)))))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false))))))))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false))))))))))))))))) && true, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), bool(_GLF_IDENTITY(bool(! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (bool(! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false))))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false)))))))), false || (! (! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false))))))))))))))))))) && true, bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, false, true, false)))), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) || false)))))))))))))) && true, false, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true && (bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.9)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true))), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true))), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), bool(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true)))), true))), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0 * (injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(! (! ((false) || false)), ! (! (! (! ((false) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3(false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(9163u, 181185u, 149127u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u) + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_size))) + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))) >> 0u), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35095)))))))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ 0)))), max(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35095))))))))) - 0u)) % subgroup_size) * 1u)) >> 0u), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 1u, 0u)), min(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 1u, 0u), (uvec4(virtual_gid, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))), uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 1u, 0u), min(uvec4(virtual_gid, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(virtual_gid, 0u, 1u, 0u), ~ (~ (uvec4(virtual_gid, 0u, 1u, 0u)))))))))))), (uint(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(130251u) : 0u)), 1u, 0u)), min(uint(uvec4(virtual_gid, 0u, 1u, 0u)), uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(workgroup_id))), 1u, 0u)))))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(40342) : 1)) * (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(ivec4((0), 1, 0, 0)))) | ((0))) >> 0, (_GLF_IDENTITY((0), ((0)) | ((0))) >> 0) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4))))) | 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))), (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4))))) - 0)) | 0))))))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((-94077))))), 64, _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (false))), (! (false)) || _GLF_IDENTITY(false, (false) || false)))))))) || false), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(0u | (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), (true ? 0u | (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(virtual_gid)))), 0u ^ (_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u | (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), (_GLF_IDENTITY(0u | (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), 0u ^ (_GLF_IDENTITY(0u | (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), uint(uvec3(0u | (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), 0u, 1u)))))) << 0u), (true ? 0u | (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(virtual_gid))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (read_1), min(0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uint(0u | (read_1)))))), min(_GLF_IDENTITY(0u | (read_1), min(0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uint(0u | (read_1)))))), _GLF_IDENTITY(0u | (read_1), min(0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uint(0u | (read_1))))))))) << 0u)), (_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1)))), max((_GLF_IDENTITY(read_1, ~ (~ (read_1)))), (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))) | (read_1))) >> 0u), _GLF_IDENTITY((read_1), clamp((read_1), (read_1), (read_1))) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(5u)), (~ (uint(5u))) - 0u)), ~ (~ ((_GLF_IDENTITY(~ (uint(5u)), (~ (uint(5u))) - 0u)))))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, (5u) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) - 0u)))))), min(5u, 5u))))), (true ? ~ (~ (uint(_GLF_IDENTITY(5u, min(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), (5u) | (5u)), 5u))))) : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(93681u, 78917u, virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uaddCarry(93681u, 78917u, virtual_gid)), (_GLF_FUZZED(uaddCarry(93681u, 78917u, virtual_gid))) ^ 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))), 0u ^ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(5u)), clamp((uint(5u)), (uint(5u)), (uint(5u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(5u)), _GLF_IDENTITY((~ (uint(5u))) | 0u, ((~ (uint(5u))) | 0u) | ((~ (uint(5u))) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (uint(5u))), 0u + ((~ (uint(5u)))))), min((_GLF_IDENTITY((~ (uint(5u))), 0u + ((~ (uint(5u)))))), (_GLF_IDENTITY((~ (uint(5u))), 0u + ((~ (uint(5u)))))))) << 0u), (~ (uint(5u))), (~ (uint(5u)))))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, 0u), max(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(7u), _GLF_IDENTITY(uvec4(7u), (uvec4(7u)) | (uvec4(7u)))))), (uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))))) / 1u))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true)) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)))), false || (_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), true && (true && (_GLF_IDENTITY(true, ! (! (true)))))))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u)))) | (_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u))), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u))), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | (_GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, (5u) | 0u, (5u) | 0u)))))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), min(uvec4(uint(5u), 1u, 1u, 1u), uvec4(uint(5u), 1u, 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))))), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint(_GLF_IDENTITY((~ (uint(5u))), ((~ (uint(5u)))) | 0u)))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY(_GLF_IDENTITY((uint(5u)), (_GLF_IDENTITY((uint(5u)), _GLF_IDENTITY(uint(uvec4((uint(5u)), 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), 0u ^ (uint(uvec4((uint(5u)), 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), max((uint(5u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, (5u) + 0u))), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))))))) / 1u))) : _GLF_FUZZED(next_virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), (_GLF_IDENTITY((~ (uint(5u))), 0u ^ ((~ (uint(5u)))))) | (_GLF_IDENTITY((~ (uint(5u))), (_GLF_IDENTITY((~ (uint(5u))), 0u ^ ((~ (uint(5u)))))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, 0u), max(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(~ (_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (_GLF_IDENTITY(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (uvec4(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), 1u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(7u), _GLF_IDENTITY(uvec4(7u), (uvec4(7u)) | (uvec4(7u)))))), (uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(~ (~ (uint(5u))), (_GLF_IDENTITY(~ (~ (uint(5u))), min(~ (~ (uint(5u))), ~ (~ (uint(5u)))))) ^ 0u)), 1u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) : (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))))) / 1u))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true)) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), bool(bvec3(bool(bvec3(true, true, true)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)))), false || (_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), true && (true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(5u)), min(~ (uint(5u)), ~ (uint(5u))))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(_GLF_IDENTITY(5u, (5u) / 1u)))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u, clamp((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u, 0u + ((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY((5u), (0u | 0u) + (_GLF_IDENTITY((5u), ((5u)) ^ 0u))) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(0u)), 1u))))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u)))))), (_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))) / 1u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), _GLF_IDENTITY(max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (true ? max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : _GLF_FUZZED(subgroup_local_id)))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u))))), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, (5u) | 0u) : _GLF_FUZZED(workgroup_base)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))), (~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(_GLF_IDENTITY(((~ (uint(5u)))), ~ (~ (_GLF_IDENTITY(((~ (uint(5u)))), min(((~ (uint(5u)))), _GLF_IDENTITY(((~ (uint(5u)))), min(((~ (uint(5u)))), ((~ (uint(5u))))))))))), (((~ (uint(5u))))) << 0u))))) / 1u))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u))), 0u ^ (clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), (~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((_GLF_IDENTITY(5u, 0u ^ (5u))) | 0u) | ((5u) | 0u)))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((~ (uint(5u))))))), uint(uint((~ (uint(5u)))))))), (_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (uint(5u))))), max(uint(uint((~ (uint(5u))))), uint(_GLF_IDENTITY(uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint((~ _GLF_IDENTITY((uint(5u)), max((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))) + 0u), (~ (uint(5u)))))), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), ~ (~ (uint(5u)))), min(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u, 0u ^ ((_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), ~ _GLF_IDENTITY((~ ((~ (uint(5u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) ^ 0u))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), _GLF_IDENTITY(max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))), clamp(max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))), _GLF_IDENTITY(max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))), clamp(max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((~ ((~ (uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY((~ ((~ (uint(5u))))), max((_GLF_IDENTITY(~ ((~ (uint(5u)))), uint(uvec4(~ ((~ (uint(5u)))), 0u, 0u, 0u)))), (~ ((~ (uint(5u)))))))), ((_GLF_IDENTITY((~ ((~ (uint(5u))))), max((_GLF_IDENTITY(~ ((~ (uint(5u)))), uint(uvec4(~ ((~ (uint(5u)))), 0u, 0u, 0u)))), (~ ((~ (uint(5u))))))))) >> 0u) << 0u), clamp(_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ _GLF_IDENTITY((uint(5u)), min((uint(5u)), _GLF_IDENTITY((uint(5u)), ((uint(5u))) | ((uint(5u)))))))))))) << 0u)))) | (_GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max(_GLF_IDENTITY((~ ((~ (uint(5u))))), clamp((~ ((~ (uint(5u))))), _GLF_IDENTITY((~ ((~ (uint(5u))))), ((~ ((~ (uint(5u)))))) ^ (0u | 0u)), _GLF_IDENTITY((~ ((~ (uint(5u))))), 1u * ((~ ((~ (uint(5u))))))))), (~ (_GLF_IDENTITY((~ (uint(5u))), uint(uint((~ (uint(5u))))))))))) << 0u))), _GLF_IDENTITY((~ ((~ (uint(5u))))), (_GLF_IDENTITY((~ ((~ (uint(5u))))), max((~ ((~ (uint(5u))))), (~ ((~ (uint(5u)))))))) << 0u))), (~ (_GLF_IDENTITY((~ (uint(5u))), ~ (~ ((~ (uint(5u)))))))), (~ _GLF_IDENTITY(((~ (uint(5u)))), (((~ (uint(5u))))) << 0u)))))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))), uint(0u)))), _GLF_IDENTITY((5u) | 0u, ((5u) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, (5u) | 0u, (5u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, (5u) | 0u, (5u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : (_GLF_IDENTITY((5u) | 0u, clamp((5u) | 0u, (5u) | 0u, (5u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : 0u))))))))))))))), ~ _GLF_IDENTITY((~ (uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), min(uvec4(uint(5u), 1u, 1u, 1u), uvec4(uint(5u), 1u, 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))))), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), min(uvec4(uint(5u), 1u, 1u, 1u), uvec4(uint(5u), 1u, 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))))), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))), _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(uint(5u), 1u, 1u, 1u), min(uvec4(uint(5u), 1u, 1u, 1u), uvec4(uint(5u), 1u, 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))))), (uvec4(uint(5u), 1u, 1u, 1u)) | (uvec4(uint(5u), 1u, 1u, 1u))) : _GLF_FUZZED(uvec4(131031u, 11782u, 16044u, 124647u)))))))))))), max(uint(_GLF_IDENTITY(uint((~ (uint(5u)))), (false ? _GLF_FUZZED(uaddCarry(virtual_gid, workgroup_base, workgroup_id)) : uint((_GLF_IDENTITY(~ (uint(5u)), max(~ (uint(5u)), ~ (uint(5u))))))))), uint(uint(_GLF_IDENTITY((~ (uint(5u))), ((~ (uint(5u)))) | 0u)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uvec3(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))), 1u, (137105u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint((~ (uint(5u))))), (_GLF_IDENTITY(uint(uint((~ (uint(5u))))), (uint(uint((~ (uint(5u)))))) / (1u ^ 0u))) | (uint(uint((~ (uint(5u))))))), max(uint(uint((~ (uint(5u))))), uint(uint((~ _GLF_IDENTITY(_GLF_IDENTITY((uint(5u)), (_GLF_IDENTITY((uint(5u)), _GLF_IDENTITY(uint(uvec4((uint(5u)), 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), 0u ^ (uint(uvec4((uint(5u)), 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), max((uint(5u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, (5u) + 0u))), ((uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + 0u), (~ (uint(5u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)), min(min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)), min(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) / 1u)))))))))))) / 1u))) : _GLF_FUZZED(next_virtual_gid))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (uint(5u))), _GLF_IDENTITY(uint(uvec2((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), 0u ^ (_GLF_IDENTITY(5u, (5u) >> 0u)))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), clamp(_GLF_IDENTITY(uint(uvec2((~ (uint(5u))), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), 0u ^ (_GLF_IDENTITY((~ (uint(5u))), min((~ (uint(5u))), (~ (uint(5u))))))), min((~ (uint(_GLF_IDENTITY(5u, (5u) + 0u)))), (~ (uint(5u))))), 1u))) | (uint(uvec2((~ (uint(5u))), 1u))), (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), 0u ^ (_GLF_IDENTITY((~ (uint(5u))), min((~ (uint(5u))), (~ (uint(5u))))))), min((~ (uint(_GLF_IDENTITY(5u, (5u) + 0u)))), (~ (uint(5u))))), 1u))) | (uint(uvec2((~ (uint(5u))), 1u))), ((uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(5u))), 0u ^ (_GLF_IDENTITY((~ (uint(5u))), min((~ (uint(5u))), (~ (uint(5u))))))), min((~ (uint(_GLF_IDENTITY(5u, (5u) + 0u)))), (~ (uint(5u))))), 1u))) | (uint(uvec2((~ (uint(5u))), 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> (0u | 0u))), uint(_GLF_IDENTITY(uvec2((~ (_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))), 1u), (uvec2((~ (uint(5u))), 1u)) * uvec2(1u, 1u))), uint(uvec2((~ _GLF_IDENTITY((uint(5u)), clamp((uint(5u)), _GLF_IDENTITY((uint(5u)), 0u ^ ((uint(5u)))), (uint(5u))))), _GLF_IDENTITY(1u, 0u ^ (1u)))))))), _GLF_IDENTITY(~ (~ (uint(5u))), max(~ (~ (uint(5u))), ~ (~ (uint(5u))))))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) / _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u), ((_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), 0u + ((1u))))) & 1u)) - 0u), (_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u), (_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u))))) : _GLF_IDENTITY(read_2, ~ (~ (read_2)))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(vec4(2836.4561, -6.5, 787.199, 21.99).q)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, int(int(4))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, length(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(808.004)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, length(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(808.004)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, length(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(808.004)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}
