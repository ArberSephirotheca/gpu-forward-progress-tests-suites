#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 85:
       for(       (mat3x2(-8886.8393, -20.10, 1277.8770, 6.1, -56.02, -1.4) * mat3(1.7, 72.45, 1.7, 535.815, -11.36, -193.586, 45.79, -8.5, 43.20));
 (true ^^ false); findMSB(ivec3(12625, 76127, 68571)))
        {
         mat4(5.7, 6971.1943, 54.94, 537.316, 81.27, -44.54, 5.3, 8637.9893, 1.9, -8.9, 382.394, -6886.6178, 1106.6931, -7.5, -5.3, -4.8);
         mat4 _GLF_SWITCH_1_0v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 25:
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             64555u;
             case 0:
             case 87:
             case 96:
             if(_GLF_DEAD(false))
              return;
             702.095;
             case 63:
             case 46:
             case 92:
             case 35:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 73:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (mat4x3(-177.540, 6.4, 2.4, -2374.9794, -9.6, -5558.4831, 0.0, -3.5, 0.5, 1.0, 13.75, 539.503) - mat4x3(2.7, -73.56, -6.1, 864.651, 23.13, 6.8, 0.0, -3.6, 993.239, -62.16, -163.969, 21.42));
             if(_GLF_DEAD(false))
              return;
             default:
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       case 0:
       case 62:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       case 6:
       case 77:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       case 84:
       case 98:
       for(int _injected_loop_counter = (0 & -47276); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       case 70:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (-52798 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(0))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 return;
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       default:
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 67:
         for(uvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[86]; all(bvec3(false, false, true)); _GLF_SWITCH_3_0v)
          {
           if(_GLF_DEAD(false))
            continue;
           {
            uvec3 _GLF_SWITCH_3_3v;
            (notEqual(ivec4(-21917, -11650, 33158, 18440), ivec4(-54446, 29138, 79133, -26930))[3] ? _GLF_SWITCH_3_3v : (51769u & _GLF_SWITCH_3_3v));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            mat3x4 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v[94];
            if(_GLF_DEAD(false))
             return;
            {
             ;
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
                  barrier();
                 continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat4 _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v;
             if(_GLF_DEAD(false))
              return;
             _GLF_SWITCH_3_7v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             vec4(594.553, -6.1, -8508.3455, 8.9);
             ivec3 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v[80];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               (false && true);
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
              }
             else
              {
              }
             161178u;
             mat3(4779.4506, -454.839, -51.67, 551.977, 5502.8087, -5152.4205, 83.65, 1067.9668, 3484.8965);
            }
            while(false)
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               break;
              mat3(mat2x3(152.086, -0.9, 3060.0888, -85.93, -796.450, 663.428));
              bvec3 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v;
              mat2x4 _GLF_SWITCH_3_14v[80], _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v;
              mat3(6149.6494, -44.23, 5569.3685, 6.9, -2.4, 3.9, 28.08, -806.539, -9704.7567);
              (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.abrg --);
             }
            vec3(19.53, 1.4, 9.6);
            if((mat3x4(-823.973, -9.2, 7.9, -6478.0301, -93.32, -95.13, -1.8, 233.993, 5966.4906, 303.453, 2.3, -7.9) == mat3x4((mat3(-91.45, 340.631, -894.865, 4.6, -7.3, -537.170, -96.38, 38.12, -3.7) - -9.6))))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                (mat3(49.32, 91.59, 3.6, -6707.9472, 4199.5034, 99.54, 9494.6920, 80.56, 47.18) / 37.20);
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              bvec4 _GLF_SWITCH_3_17v, _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
              uvec2(13657u, 187689u);
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                continue;
               }
              for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                 return;
                notEqual(vec4(-3341.1070, -8.8, 539.249, 741.188), vec4(-84.23, -2.5, -0.0, -494.077));
               }
              mat3 _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v[66], _GLF_SWITCH_3_22v;
              bvec2 _GLF_SWITCH_3_23v[1];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  return;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 break;
               }
              bvec3 _GLF_SWITCH_3_24v[81], _GLF_SWITCH_3_25v;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
           }
           int _GLF_SWITCH_3_26v;
           if(_GLF_DEAD(false))
            break;
           do
            {
             (ivec3(78253, -98177, 98160) == ivec3(-27954, -32771, 60650));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           while((abs(vec4(37.71, -357.777, 192.094, 70.35)) != acos(vec4(-6.9, -78.05, 7.6, 5.1))))
            {
             if(_GLF_DEAD(false))
              break;
             if(true)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               mat2(-154.897, -0.4, -7629.6744, 3.6);
               (mat2x4(-1.3, -90.42, 914.375, 39.61, 5.1, 0.3, -5344.1869, 48.85) == (98.90 / mat2x4(32.75, 5.4, 0.4, 243.239, -119.173, 88.42, 209.448, -545.732)));
               uvec4 _GLF_SWITCH_3_27v[48];
               mat3(-532.148, 9.0, -8.5, -5988.0154, 9014.4044, 51.69, 7.6, 91.67, -4.5);
               if(_GLF_DEAD(false))
                barrier();
               ivec3(10971, -77909, 105);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               mat4x3 _GLF_SWITCH_3_28v[67];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               vec2 _GLF_SWITCH_3_29v[90], _GLF_SWITCH_3_30v[2], _GLF_SWITCH_3_31v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 continue;
                }
               (mat3x4(16.86, 0.0, 2742.4577, -0.2, 8426.0752, -6.1, -8.6, -813.192, -76.64, 7825.4352, -5444.6543, 59.79) * mat2x3(-510.497, -6.2, -8613.4729, -751.178, 8.5, 7.7));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ivec4(-42456, 86263, -80471, -598).ss;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             vec4 _GLF_SWITCH_3_32v[9], _GLF_SWITCH_3_33v[49], _GLF_SWITCH_3_34v[32];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             for(             bitCount(uvec2(80516u, 195123u));
 (-74.24 > 4117.9211); (ivec4(-67990, 39530, -10785, 19818) - int(bvec3(true, false, false)[0])))
              {
               (mat4x2(-6.3, -70.89, 4717.0079, 387.976, 99.85, -9.9, -940.426, 745.125) + 6.6);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               (uvec2(89877u, 108612u) - (uvec2(101671u, 194361u) ^ 126742u));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               uvec3(uvec4(94868u, 26962u, 71383u, 192193u));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               vec3 _GLF_SWITCH_3_35v, _GLF_SWITCH_3_36v[57], _GLF_SWITCH_3_37v[35];
               uint _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v[76], _GLF_SWITCH_3_40v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               vec4(6.3, 5.1, -7.5, 6.8);
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               subgroup_id;
               mat2x4 _GLF_SWITCH_3_41v, _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v;
               mat3x4 _GLF_SWITCH_3_44v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               uint _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v[7], _GLF_SWITCH_3_47v;
              }
             while(any(bvec3(true, false, false)));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               if(_GLF_DEAD(false))
                return;
              }
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              bvec3 _GLF_SWITCH_3_48v, _GLF_SWITCH_3_49v, _GLF_SWITCH_3_50v[73];
              (67759 + ivec4(-18298, 4940, 70484, -22780));
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                 }
                continue;
               }
              mat4x3 _GLF_SWITCH_3_51v, _GLF_SWITCH_3_52v, _GLF_SWITCH_3_53v;
              mat3x4 _GLF_SWITCH_3_54v, _GLF_SWITCH_3_55v;
              if(_GLF_DEAD(false))
               break;
              mat3x2 _GLF_SWITCH_3_56v[48], _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v;
              mat3 _GLF_SWITCH_3_59v;
              (- mat2x3(-49.71, -0.8, 7.3, 6.0, -5453.0376, -9.5));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              false;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               barrier();
              mat4x2 _GLF_SWITCH_3_60v, _GLF_SWITCH_3_61v;
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           ;
           (vec3(-6.5, -6.8, 8858.4536) * mat3(-7.1, -356.540, -2652.2875, 3576.9128, 86.65, -12.61, -967.572, -3.6, 0.5));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(true)
              {
               float _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v, _GLF_SWITCH_3_64v;
               uvec2 _GLF_SWITCH_3_65v[52], _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               ivec2((73361 & _GLF_SWITCH_3_26v));
               mat2x3(mat4x3(-0.4, 66.91, 0.0, 685.122, 8637.6600, 7616.2791, 1.7, 1901.1146, 8088.9548, -393.384, 4.9, -3017.1390));
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                continue;
              }
             else
              {
               ivec2 _GLF_SWITCH_3_68v, _GLF_SWITCH_3_69v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                 mat3x4(-95.03, -644.043, -4.5, -6.6, 405.536, -3.5, 9.0, -4.5, -2.5, 627.404, 131.723, -8997.1572);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(                 _GLF_SWITCH_3_26v;
 false; uvec3(126965u, 103372u, 111680u))
                  {
                  }
                }
               while(false)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 int _GLF_SWITCH_3_70v, _GLF_SWITCH_3_71v;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             {
              mat4x2(mat2(-9.5, 70.29, -7.2, -5180.3776));
              matrixCompMult(mat4x3(1.3, 7.1, 85.83, 0.3, -5686.3993, 82.85, -2959.6955, 9.1, 5.2, -5.7, 6205.7265, -325.050), mat4x3(-4352.1784, 48.36, 6846.1807, 21.99, 632.161, -8.8, 4.8, 2.6, 806.575, 1.6, -39.52, 923.163));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              bvec3(true, false, true);
              ;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                continue;
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              (ivec3(-91046, 10386, -51965) & ivec3(-7615, 2975, 50783));
              if(_GLF_DEAD(false))
               barrier();
              mat4x2(5.3, -9.3, -6.8, -4.1, -6.2, -87.17, 534.986, -9723.7294);
             }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             uvec2(167837u, 74571u);
             if(_GLF_DEAD(false))
              continue;
             while((5247.4856 == 4.7))
              {
               mat3x4(-77.43, -3.8, -99.48, -12.95, -94.87, -9.7, 0.6, -6.9, 4292.7366, -916.903, 784.766, 6.7);
               mat2 _GLF_SWITCH_3_72v, _GLF_SWITCH_3_73v[40];
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               mat4(mat4x2(7.7, 6.2, -245.193, -11.32, 980.265, 6284.5170, -33.14, -8.2));
              }
             lessThan(min(uvec3(165416u, 21648u, 55371u), subgroup_id), uvec3(102075u, 135183u, 16262u));
             mat4x3 _GLF_SWITCH_3_74v[35], _GLF_SWITCH_3_75v, _GLF_SWITCH_3_76v[72];
             bvec4 _GLF_SWITCH_3_77v, _GLF_SWITCH_3_78v;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             mat3(61.54, 0.7, -8.8, 1.2, -6.4, -9.2, -2.5, -7.3, 43.11);
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         case 49:
         if(_GLF_DEAD(false))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           vec2 _GLF_SWITCH_3_79v[22], _GLF_SWITCH_3_80v, _GLF_SWITCH_3_81v;
           if(_GLF_DEAD(false))
            barrier();
           mat2x3(5.9, -9.8, 7.3, -4.2, 9462.7442, 587.039);
           while((_GLF_SWITCH_3_80v.t > -662.275))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(true)
              {
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                break;
               uvec3(167976u, 40777u, 5678u);
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               ivec3(-57740, -90692, -43932);
               vec3 _GLF_SWITCH_3_82v, _GLF_SWITCH_3_83v[24], _GLF_SWITCH_3_84v[28];
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               false;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               bvec2 _GLF_SWITCH_3_85v, _GLF_SWITCH_3_86v;
              }
             for(mat2x4 _GLF_SWITCH_3_87v, _GLF_SWITCH_3_88v; (step(_GLF_SWITCH_3_80v, _GLF_SWITCH_3_81v) != vec2(-44.58, 7398.2057)); mat3x4(mat2(injectionSwitch, vec2(-1792.5083, 6926.6995))))
              {
               vec4 _GLF_SWITCH_3_89v, _GLF_SWITCH_3_90v, _GLF_SWITCH_3_91v;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               mat2x4(67.27, -614.521, 5.2, -2.7, -1.0, 2.5, 8.1, -73.78);
               bvec4 _GLF_SWITCH_3_92v, _GLF_SWITCH_3_93v;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(true)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               float _GLF_SWITCH_3_94v;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 vec4(-83.99, 9558.9568, 5.1, 3.7);
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat3x2 _GLF_SWITCH_3_95v, _GLF_SWITCH_3_96v, _GLF_SWITCH_3_97v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               vec3 _GLF_SWITCH_3_98v, _GLF_SWITCH_3_99v, _GLF_SWITCH_3_100v[74];
               mat2x3(695.505, 463.727, -4.1, 38.30, 6.7, 7259.3886);
               ivec2(-50935, -26213);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   (true ? mat2x3(-2044.5475, 32.47, -10.55, 5.4, -4124.8660, 895.012) : mat2x3(558.663, -565.927, -32.74, 7.8, -903.507, -310.623));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 35:
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        break;
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 ;
                 case 0:
                 case 82:
                 if(_GLF_DEAD(false))
                  return;
                 case 28:
                 case 81:
                 uvec3(19234u, 161340u, 142768u)[1];
                 mat2x4(-3.0, -1.8, -4.6, -8279.7763, -8.5, 6224.6591, 5.7, 688.931);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                 case 65:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
                      barrier();
                     barrier();
                    }
                  }
                 case 11:
                 if(_GLF_DEAD(false))
                  continue;
                 findMSB(ivec2(-35084, 1737));
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 76:
                 vec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 case 69:
                 max(uvec4(134166u, 40646u, 192317u, 58073u), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2);
                 if(_GLF_DEAD(false))
                  break;
                 default:
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while((ivec2(18520, -64622) != (73048 % ivec2(ivec3(12588, 15678, 42089)))))
              {
               (mat4x2(-1.5, -8.7, -8172.5992, 7.1, 4.5, 59.75, 30.94, 55.02));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               mat3(-3.5, 5193.8550, 6.4, -739.035, -1730.8948, 6644.0470, -38.21, -774.289, -4511.4030);
               uvec3 _GLF_SWITCH_3_101v, _GLF_SWITCH_3_102v;
               if(_GLF_DEAD(false))
                barrier();
               mat4(6.0, -8046.7070, -2.6, 9304.7733, -5.8, 8000.9543, 9.4, -1440.5991, -525.279, -4.5, -5.7, 474.292, 310.467, -134.531, 5.4, -3.4);
               (ivec3(12990, 16253, 1057) >> -55335);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               (transpose(mat3x4(-663.050, 4.5, -9416.6249, -8.3, 8439.2046, -765.512, 7.1, -89.77, -8481.3488, -25.56, -6.9, 44.48)));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 -51292;
                }
               vec3 _GLF_SWITCH_3_103v[59];
               if(_GLF_DEAD(false))
                break;
              }
             do
              {
               ;
               bvec4 _GLF_SWITCH_3_104v[58], _GLF_SWITCH_3_105v;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 ;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               (subgroup_id);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               radians(vec4(-3774.3905, -23.07, 143.302, -498.320));
               if(_GLF_DEAD(false))
                return;
              }
             while((vec3(3174.1830, 378.484, 357.508) != vec3(-1166.0326, 17.01, 71.65)));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
              {
               mat2(256.201, -664.064, -994.907, 4.4);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                }
               else
                {
                 bvec3(false, false, true);
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(mat2 _GLF_SWITCH_3_106v, _GLF_SWITCH_3_107v, _GLF_SWITCH_3_108v; (-84.94 != 557.649); bitCount((+ uvec2(33154u, 175937u))))
              {
               do
                {
                 (ivec3(-48112, -93304, 88007) * -711);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               bool _GLF_SWITCH_3_109v[27], _GLF_SWITCH_3_110v[89], _GLF_SWITCH_3_111v;
               ;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         case 71:
         if(_GLF_DEAD(false))
          break;
         case 42:
         case 66:
         case 45:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 98:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-37801 & 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((0 & 40528)))
            {
             case 14:
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               while(false)
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                 (mat2x3(-5.0, -1.2, 9831.9938, -7.2, -78.15, 42.50) , bvec2(false, true));
                 mat3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                 exp2(vec4(5.9, 3.4, -752.227, 98.70));
                 for(                 bvec4(true, true, true, false);
 false; usubBorrow(subgroup_id, 66480u, subgroup_id))
                  {
                   vec2 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[35];
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   min(ivec4(-66839, -75631, -71550, 9890), ivec4(88715, 39284, -10883, 21369));
                   if(_GLF_DEAD(false))
                    return;
                   -4.2;
                   mat2x4 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v[8], _GLF_SWITCH_3_7v;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 mat2x4 _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v[58];
                 _GLF_SWITCH_3_1v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 for(                 uvec3(89915u, 176116u, 153574u);
 true; greaterThanEqual((56305 + ivec4(66865, -51450, -36214, -3140)), ivec4(-40852, 4812, 57976, -61399)))
                  {
                   mat4x2 _GLF_SWITCH_3_11v;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     bvec4(true, true, false, false);
                    }
                   else
                    {
                    }
                   uvec2 _GLF_SWITCH_3_12v[14], _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v[90];
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       barrier();
                      }
                     continue;
                    }
                   uvec4 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v;
                  }
                 mat3x4 _GLF_SWITCH_3_17v, _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_DEAD(false))
              continue;
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             case 25:
             if(_GLF_DEAD(false))
              return;
             case 51:
             if(_GLF_DEAD(false))
              break;
             case 52:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 50:
             case 30:
             case 80:
             case 83:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             case 11:
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             case 49:
             return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             break;
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         break;
         case 26:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         (transpose(mat4(-7125.9301, -83.63, -96.99, -3.7, 1.3, 614.679, 3278.3332, -204.613, 7.5, -6578.9730, -10.78, -92.27, -8.9, 7.6, -8.2, -3.4)) * (mat3x4(1981.0395, 7.1, 9.7, 744.768, -7.8, 3.5, 80.74, -1913.9416, -1.0, 3.9, -34.43, -34.13) - 7.9));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 77:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     {
      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
       {
        if(true)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          uvec3(185118u, 115340u, 158653u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          vec2 _GLF_SWITCH_4_0v[40];
          ;
          while((mat4x2(238.712, -9317.7437, 9676.1127, -1.7, -3.9, -2458.0616, -63.40, 8.8) == mat4x2(mat3(6412.1624, -3407.7981, 9.9, 4392.6898, 5042.3603, -17.68, 7.9, -95.19, -22.31))))
           {
            (mat2x4(mat4x3(-8.2, 8.5, -51.81, 64.15, -1.7, 9186.4595, -6.8, 1313.7073, 8341.2288, 838.088, -830.808, -3.2)));
            ;
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
             barrier();
            float _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
            mat4x3 _GLF_SWITCH_4_4v;
            vec2 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v;
            uvec4 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v;
            if(_GLF_DEAD(false))
             barrier();
            mat2x3(3.8, 15.14, 4.4, -17.62, 6.2, -36.17);
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              return;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          int _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v;
          uvec2 _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v[34], _GLF_SWITCH_4_15v;
          do
           {
            if(_GLF_DEAD(false))
             return;
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           return;
          for(          fract(vec4(-3549.6231, 8.6, 5.7, 8496.5404));
 false; findLSB(num_workgroup))
           {
            vec4(2942.5871, -4137.5090, 540.114, -3.8);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat3x2(mat4x2(90.14, 5.6, -483.102, -3074.9941, -28.63, -4833.1398, -8.2, 0.5));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
               return;
              return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            outerProduct(vec2(-8.3, 4395.7956), mat3x4(-6.9, 3.8, -377.249, -0.6, -0.0, -19.69, 9.3, 867.596, -56.35, 8.4, -7.8, -3.5)[0]);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              (mat2(41.54, -993.968, -92.98, -6.5) + mat2(7.2, -6720.1421, -5006.8617, -7.2));
              if(_GLF_DEAD(false))
               barrier();
             }
            ivec2(-36694, -87267);
            if(_GLF_DEAD(false))
             barrier();
            mat4 _GLF_SWITCH_4_16v;
            mat4x3(mat3x4(-727.469, 264.096, -13.71, 783.161, -7.9, 5.4, -8174.4141, -333.989, 1554.2654, -7.1, 73.42, -6.5));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            bvec4(true, false, true, true);
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        else
         {
         }
       }
      do
       {
        mod(acos(vec4(0.7, -83.67, 6265.8373, -1.2)), vec4(82.62, -74.77, -6.9, -267.126));
        ivec3 _GLF_SWITCH_4_17v, _GLF_SWITCH_4_18v[57];
        mat2x4(mat2(-746.637, -73.62, -8.2, 7.5));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        mat4x2(66.65, -321.013, -40.13, 64.52, 9.5, 432.504, -70.93, 2.4);
        if(_GLF_DEAD(false))
         continue;
        for(        161228u;
 (mat2x4(4.9, 71.21, 92.49, -6.5, -5.4, -13.36, -20.97, 3.7) != mat2x4(-909.596, -23.21, 6309.7261, -10.71, 4230.6807, 5106.4011, 0.8, 7.6)); ivec3(65852))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          vec2 _GLF_SWITCH_4_19v[39];
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          break;
         }
        int(7244.2551);
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
         barrier();
        while(true)
         {
          ivec2(18829, 89957);
          float _GLF_SWITCH_4_20v, _GLF_SWITCH_4_21v;
          ;
          do
           {
            if(_GLF_DEAD(false))
             return;
            mat4(2394.3440, -409.434, 10.69, 2.4, -4.7, 2560.1519, -47.55, -3412.7982, -4.6, -0.3, -3.0, -9.1, 787.231, 5.3, 225.403, -8.4);
           }
          while(_GLF_WRAPPED_LOOP(false));
          bvec2 _GLF_SWITCH_4_22v, _GLF_SWITCH_4_23v;
          bvec3 _GLF_SWITCH_4_24v[1];
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             return;
           }
         }
        do
         {
          uvec3 _GLF_SWITCH_4_25v, _GLF_SWITCH_4_26v, _GLF_SWITCH_4_27v;
          mat3 _GLF_SWITCH_4_28v, _GLF_SWITCH_4_29v[76];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              barrier();
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          notEqual(uvec4(166062u, 176959u, 185121u, 139844u), usubBorrow(uvec4(167282u, 14029u, 142022u, 52860u), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2));
          if(_GLF_DEAD(false))
           barrier();
          vec4 _GLF_SWITCH_4_30v, _GLF_SWITCH_4_31v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
           barrier();
          mat2x4 _GLF_SWITCH_4_32v[68];
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
           {
            (_GLF_SWITCH_4_26v & uvec3(91945u, 20247u, 117070u)[1]);
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              break;
             }
            break;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
         }
        while(false);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         continue;
        mat2x4((mat3(8786.2954, 58.50, -7.8, 5327.8182, 11.42, 1855.8329, -8.1, 7.1, -41.60) + mat3(-650.120, 2573.1626, 1677.8928, 3590.8301, 8.3, -4831.4153, 9.9, 661.915, -2.5)));
       }
      while((mat4x2(-3.8, 0.8, 90.87, 1329.2543, 8.0, -9.3, 1.8, -6.8) != mat4x2(-628.664, 8.1, -80.79, 3.4, -70.23, -4.8, -2593.0870, 9.1)));
      if(_GLF_DEAD(false))
       barrier();
      do
       {
        mat3x4(mat4x2(57.51, 9.5, 1.8, -702.074, -783.187, -4.1, 852.157, -1.1));
       }
      while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      {
       if(_GLF_DEAD(false))
        barrier();
       mat2(8962.6185, -9.8, -3.6, 9.5);
      }
      uvec3 _GLF_SWITCH_4_33v, _GLF_SWITCH_4_34v, _GLF_SWITCH_4_35v;
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(false))
         barrier();
        continue;
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        barrier();
       }
      ivec4 _GLF_SWITCH_4_36v, _GLF_SWITCH_4_37v[43];
      if(_GLF_DEAD(false))
       continue;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         break;
        barrier();
       }
     }
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     case 12:
     case 31:
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y = num_workgroup;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       return;
      }
     break;
     case 58:
     if(false)
      {
       if(false)
        {
         if(_GLF_DEAD(false))
          return;
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          if(_GLF_DEAD(false))
           barrier();
          (bvec2(false, true));
          (ivec3(32682, -64157, -53227) | bitfieldInsert(ivec3(-61616, -16730, 4024), ivec3(-82261, 78370, 68798), -1754, -50683));
          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
         }
         mat4x3 _GLF_SWITCH_4_38v[35], _GLF_SWITCH_4_39v;
        }
       else
        {
         mat4x3(4.1, -1.4, 8.2, -876.079, 287.247, 3164.2211, 5405.0826, 5.6, -0.4, 37.96, 3.6, 4752.9297);
         (mat2(-1.9, 7672.9222, -0.5, 6.6) - inversesqrt(-651.385));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         subgroup_size;
         mat3x2 _GLF_SWITCH_4_40v[87], _GLF_SWITCH_4_41v, _GLF_SWITCH_4_42v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(((true ? mat2(696.587, -9.5, -6.1, -9985.8552) : (mat3x2(4776.5711, 1.6, -3.9, -959.667, 1.1, 915.761) * mat2x3(31.11, -6.7, 6.9, 3.3, -16.72, -356.379))) == mat2(57.32, 1.0, -3.4, 9.7)))
          {
           ivec3(29557, 36527, -63123);
           min(num_workgroup, subgroup_id);
           mat2(-9600.5514, -92.10, -8.2, -3571.1827);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           vec3 _GLF_SWITCH_4_43v[52], _GLF_SWITCH_4_44v;
           ;
           true;
           -11596;
           false;
          }
         else
          {
           (132.217 == -55.42);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           mat3x4(-8.1, -120.360, 75.86, 2.8, 93.15, -99.62, 9.8, -9.6, -1150.3488, 8546.8941, -8.7, -4803.4209);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2x4 _GLF_SWITCH_4_45v, _GLF_SWITCH_4_46v;
           false;
          }
        }
       ivec2(60895, 58254);
       notEqual(ivec2(97950, 59624), ivec2(-9630, -92848));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         mat2(-44.44, -25.14, 319.309, -878.645);
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(false)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(true)
          {
           uvec3 _GLF_SWITCH_4_47v, _GLF_SWITCH_4_48v, _GLF_SWITCH_4_49v[1];
           ivec2(22160, 61222);
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(-544.226, -56.19, 71.96, 5.4, -31.17, 4.4, 1.0, 131.480, 94.86, -3.7, 0.0, 309.078);
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
            }
           mat2x3(92.14, 38.65, 59.18, 67.51, -39.71, -9381.9528);
           uvec3 _GLF_SWITCH_4_50v[56], _GLF_SWITCH_4_51v;
           (+ mat3x2(9.8, -729.477, 740.976, -4.4, 444.870, 3958.5604));
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           (mat2x4(665.382, -294.390, 78.87, -3720.5822, -3.2, -6.0, -64.55, -813.433) * mat4x2(mat2x3(-2091.7416, -75.32, 38.18, -21.84, -62.67, -0.1)));
           uvec2 _GLF_SWITCH_4_52v[28], _GLF_SWITCH_4_53v, _GLF_SWITCH_4_54v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           ivec3(-95859, 40254, 15655);
           mat4x3(3.3, 4623.2332, 6.2, 48.00, -0.8, 6193.8385, -386.990, -88.62, -77.07, -1.8, 4.2, 1.8);
          }
         if((ivec4(61031, -48223, -97509, -98236) != ivec4(30424, 9801, -91788, -34491)))
          {
           bvec3 _GLF_SWITCH_4_55v[5], _GLF_SWITCH_4_56v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           _GLF_SWITCH_4_56v;
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           int _GLF_SWITCH_4_57v;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             mat4x3(step(faceforward(-202.019, -9.4, 3.2), vec3(8465.9328, -762.085, 1.7)), vec3(3.9, 2227.8493, 5601.4520), vec3(-8.5, -296.495, -5.1), vec3(-0.9, -8512.4367, 99.53));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           mat2x4(-3.6, 7746.2244, 6141.7224, 20.17, 0.9, 9.9, -9.8, -1264.6033);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         {
          55.07;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         ivec2(19439, 99771);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           floatBitsToUint(vec3(-9.1, 1376.7064, -0.1));
           mat2x3(-8.4, 5.3, -4.2, -4193.7287, 7.2, 5241.7202);
           normalize(max(vec3(-11.81, -1906.0708, -7.8), 587.175));
           if(_GLF_DEAD(false))
            return;
           ivec3 _GLF_SWITCH_4_58v, _GLF_SWITCH_4_59v, _GLF_SWITCH_4_60v;
           mat3x2 _GLF_SWITCH_4_61v, _GLF_SWITCH_4_62v[9];
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             _GLF_SWITCH_4_58v;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            continue;
           sign(vec4(771.651, 9.8, 0.1, 9091.8860));
           if(_GLF_DEAD(false))
            barrier();
           (mat4x3(-9.1, 5138.7884, -7.2, 5.7, 77.81, -8.5, 257.480, 5992.2257, 394.022, -1.2, 9.9, 333.549) * (mat4(-98.64, 572.483, 9.6, 236.387, 184.854, -4.0, -0.1, 293.776, 7282.5525, -639.377, 922.654, 5605.5737, -424.802, 9.1, 3.8, 12.18) * mat2x4(-1623.8415, 6601.0395, -98.14, -1795.9667, -138.129, -3932.9609, 67.02, -851.424)));
          }
         while(true);
         vec3(-1.1, -6281.5026, -6063.2696);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           while(false)
            {
             if(_GLF_DEAD(false))
              continue;
             true;
             transpose(mat2x3(8.5, -4.7, -9474.4360, -5175.7646, -70.00, 3.0));
             bvec3 _GLF_SWITCH_4_63v, _GLF_SWITCH_4_64v[71], _GLF_SWITCH_4_65v;
            }
          }
        }
       while(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         {
          ivec2 _GLF_SWITCH_4_66v;
         }
         {
          ivec4(-41209, 169, 9126, -16947);
          mat3x4(-13.70, 88.99, -4.7, 1264.3743, -1.3, 921.974, -2714.7664, 6126.2017, -8759.3238, 4.8, 68.30, 8.3);
          (mat3(mat4(3157.3000, -4032.9731, 5.5, -0.5, 56.05, -78.84, -8.2, -419.610, 0.5, -81.19, -6.4, 85.19, 7.7, 7.4, 258.446, 357.451)) + mat3(-7.4));
          ivec3(-9896, 55469, 72366);
          float _GLF_SWITCH_4_67v, _GLF_SWITCH_4_68v, _GLF_SWITCH_4_69v[14];
         }
         ivec4 _GLF_SWITCH_4_70v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         while(notEqual(uvec4(99860u, 157600u, 171382u, 54506u), uvec4(112165u, 32813u, 12883u, 161382u)).p)
          {
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           equal(bvec4(false, false, false, false), bvec4(true, true, true, false));
           uvec3(22612u, 105971u, 84478u);
           isnan(vec3(-93.87, -561.946, 5168.6474));
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           false;
           acosh(floor(injectionSwitch));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(false)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false ? false : false))
          {
           uvec2 _GLF_SWITCH_4_71v, _GLF_SWITCH_4_72v;
           mat3x4 _GLF_SWITCH_4_73v;
          }
         ivec2 _GLF_SWITCH_4_74v, _GLF_SWITCH_4_75v[33], _GLF_SWITCH_4_76v;
         if(_GLF_DEAD(false))
          barrier();
         mat3x4(-9580.7904, 67.82, 1.5, 55.32, -112.005, 6340.6899, 541.350, 6.9, 5.0, 2.8, -12.25, 7182.4889);
         ivec3 _GLF_SWITCH_4_77v;
         (mat3x4(-219.210, -81.20, 51.21, -90.80, 9.5, -556.484, 8541.8800, 677.949, 39.73, -1413.9852, 43.33, -6.1) + dot(vec3(5339.0661, 1.1, 5.4), vec3(1487.4765, -8.5, -4292.0259)));
         if(_GLF_DEAD(false))
          barrier();
         if((-4096 >= 7168))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           uvec4 _GLF_SWITCH_4_78v;
           findMSB(subgroup_local_id);
           if(_GLF_DEAD(false))
            return;
           uvec2(74854u, 133926u);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             bvec4(true, false, true, true);
            }
           else
            {
            }
           vec3(7.0, 465.654, 4.9);
           subgroup_size;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         mat3(80.72, -88.53, 6.4, 307.616, 943.993, 4651.1535, -4.9, 8.4, 7129.9567);
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           break;
          5.9;
          mat2x4 _GLF_SWITCH_4_79v;
          (mat4x3(191.712, -9964.8126, -2.0, -4.9, 8.9, -838.336, -8.6, 31.92, -7224.5611, 8.9, 7855.9147, -373.545) * _GLF_SWITCH_4_79v);
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            ;
           }
          else
           {
           }
         }
         {
          if(_GLF_DEAD(false))
           break;
          mat4(-44.88, 5688.8231, 6.8, -1557.6897, 0.4, -4.4, -59.81, 5.1, 6.3, -8.5, -3.6, 4.5, -0.8, 645.352, 6.4, 3.5);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       mat2x3 _GLF_SWITCH_4_80v, _GLF_SWITCH_4_81v[87], _GLF_SWITCH_4_82v;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       {
        for(ivec3 _GLF_SWITCH_4_83v[90]; false; uvec2(64615u, 40940u))
         {
          (vec2(-25.29, 7.0) != injectionSwitch);
          mat3 _GLF_SWITCH_4_84v[57], _GLF_SWITCH_4_85v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          vec4 _GLF_SWITCH_4_86v, _GLF_SWITCH_4_87v, _GLF_SWITCH_4_88v;
          ;
          GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
          mat3x4 _GLF_SWITCH_4_89v, _GLF_SWITCH_4_90v, _GLF_SWITCH_4_91v;
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
         }
        (6.7 * vec3(429.453, -1.0, 86.39));
        if(_GLF_DEAD(false))
         barrier();
        (mat4x2(4.3, -5.3, 17.73, -26.90, -6.1, -391.537, -135.211, 111.980) * mat4(2307.2514, 6.2, -5783.2747, 52.89, -372.052, -7772.2492, -40.95, -926.702, -2.8, 7.1, 1.5, 1702.9814, 468.233, -33.86, 6.4, 5334.7592));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          break;
         }
        {
         mat3(-988.171, 3019.0420, -9.6, 478.060, 5.1, -6.1, 2.3, 1995.5290, 823.325);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat2 _GLF_SWITCH_4_92v[6], _GLF_SWITCH_4_93v[43];
        }
        if(_GLF_DEAD(false))
         barrier();
        for(        ((false ? -36419 : -78913) > 72784);
 (subgroup_id > subgroup_id); notEqual(ivec4(34086, -17302, 83967, -86334), ivec4(59184, 83110, -51300, 3099)))
         {
          if(_GLF_DEAD(false))
           barrier();
          vec2(-480.027, 1.8);
          mat2(mat4(-7.3, -5.9, -43.20, 7.9, -6.0, 977.084, -96.60, 7.6, -5202.3624, -699.453, -4.6, -170.094, -922.286, 0.7, 18.91, -3206.4880));
          mat4 _GLF_SWITCH_4_94v, _GLF_SWITCH_4_95v;
          bvec4 _GLF_SWITCH_4_96v, _GLF_SWITCH_4_97v[89];
          if(_GLF_DEAD(false))
           break;
          clamp(uvec3(185944u, 188055u, 106040u), uvec3(48147u, 107052u, 121400u), uvec3(176800u, 58286u, 120711u));
          if(_GLF_DEAD(false))
           continue;
          float _GLF_SWITCH_4_98v[91];
          mat4x2 _GLF_SWITCH_4_99v, _GLF_SWITCH_4_100v;
          bvec2 _GLF_SWITCH_4_101v, _GLF_SWITCH_4_102v[85];
         }
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / 1)) - 0))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           bvec4(false, false, false, true).abga;
          }
         mat4x2(-3.0, 99.76, -9687.3866, 69.87, -3724.5626, 3466.1711, -1.9, -4.6);
         if(_GLF_DEAD(false))
          barrier();
         uvec4(uvec2(160883u, 185677u), subgroup_size, subgroup_local_id);
         (ivec2(75947, 81183) % ivec2(-7820, -33910));
         bvec3 _GLF_SWITCH_4_103v;
         mat2 _GLF_SWITCH_4_104v[68];
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (int(8665.3099) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         ivec4(-94878, 65157, 86628, -72007);
         if(_GLF_DEAD(false))
          barrier();
         int _GLF_SWITCH_4_105v;
         if(_GLF_DEAD(false))
          barrier();
         bvec4 _GLF_SWITCH_4_106v;
        }
        if(false)
         {
          uvec4(190169u, 176648u, 177306u, 180954u).arrb;
          mat3x4 _GLF_SWITCH_4_107v;
          ;
          if(_GLF_DEAD(false))
           continue;
          uvec2 _GLF_SWITCH_4_108v[13];
          ;
          bitCount(uvec3(83157u, 36508u, 70333u));
         }
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       ivec3(42388);
       {
        if(_GLF_DEAD(false))
         continue;
        uint _GLF_SWITCH_4_109v[14], _GLF_SWITCH_4_110v, _GLF_SWITCH_4_111v;
        ;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        uint _GLF_SWITCH_4_112v[26], _GLF_SWITCH_4_113v;
        if(_GLF_DEAD(false))
         barrier();
        while(true)
         {
          mat3 _GLF_SWITCH_4_114v, _GLF_SWITCH_4_115v;
          ivec2(92552, -96707);
          mat4x2 _GLF_SWITCH_4_116v[64], _GLF_SWITCH_4_117v, _GLF_SWITCH_4_118v;
          if(_GLF_DEAD(false))
           barrier();
          bvec2 _GLF_SWITCH_4_119v;
         }
        ivec2(20839, -91041);
       }
       mat3(-246.126, -17.66, 4.4, 89.82, -2.0, -10.45, 338.693, 0.1, -21.49);
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((-47891 % -84099) & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 5:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             float _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                continue;
               break;
              }
             case 3:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 break;
                }
               barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             case 60:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             case 91:
             if(_GLF_DEAD(false))
              barrier();
             case 14:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
               return;
              }
             case 59:
             if(_GLF_DEAD(false))
              barrier();
             case 87:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 27:
             if(_GLF_DEAD(false))
              barrier();
             case 83:
             case 38:
             if(_GLF_DEAD(false))
              barrier();
             switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)))
              {
               case 68:
               vec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                return;
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   switch(_GLF_SWITCH(0))
                    {
                     case 37:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     _injected_loop_counter;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 0:
                     if(_GLF_DEAD(false))
                      break;
                     case 67:
                     case 64:
                     case 29:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 93:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(false))
                      break;
                     barrier();
                     break;
                     case 82:
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                     bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[78];
                     default:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                      }
                     1;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(5), int(5))) | (0 >> _GLF_IDENTITY(int(1), int(1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               case 88:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               case 21:
               case 97:
               case 79:
               barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
               case 52:
               for(uint _GLF_SWITCH_1_2v[72], _GLF_SWITCH_1_3v; true; mat4x3(-26.28, -0.1, -8.7, 0.5, -5678.3106, 81.29, -233.184, -19.80, 69.63, -2.3, 2.2, 4.5))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 17:
                   ivec4 _GLF_SWITCH_4_0v[1], _GLF_SWITCH_4_1v;
                   case 23:
                   bvec3(true, false, true).ss;
                   if(_GLF_DEAD(false))
                    return;
                   case 0:
                   case 80:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     while(false)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
                        barrier();
                       ivec4 _GLF_SWITCH_1_4v;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
                          barrier();
                         return;
                        }
                       uvec4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[56], _GLF_SWITCH_1_7v[47];
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         ;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             continue;
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             barrier();
                            }
                           return;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
                              return;
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          break;
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 19:
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            break;
                           case 54:
                           case 76:
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                           break;
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               break;
                              }
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             return;
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             barrier();
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 continue;
                                }
                               barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             barrier();
                            }
                           1;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             return;
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           break;
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           return;
                          }
                         continue;
                        }
                       mat3x4(-5066.6177, 40.51, -52.15, 2.9, -633.229, 653.155, -0.9, -1014.9512, 91.71, 0.8, -2212.1912, 14.48);
                       ivec3 _GLF_SWITCH_1_8v[59], _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         continue;
                        }
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   case 79:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 85:
                   vec2 _GLF_SWITCH_1_11v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           continue;
                          }
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                    }
                   case 3:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   case 5:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                     break;
                    }
                   while(false)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           continue;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          barrier();
                         barrier();
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     mat3x4(mat2(mat4x3(4694.7143, -8.6, 5.0, 8.4, 6.0, 79.18, 2.2, -630.459, -458.467, 53.38, -7.7, -12.53)));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     equal(_GLF_SWITCH_1_11v.grg, vec3(-93.17, 4.5, 9242.9607));
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                        }
                       break;
                      }
                     do
                      {
                       do
                        {
                         bitfieldInsert(min(_GLF_SWITCH_1_3v, workgroup_size), workgroup_id, (sqrt(vec4(6.5, 2.9, -8995.2843, -83.93)) , _injected_loop_counter), -22741);
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     vec2 _GLF_SWITCH_1_12v[65], _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                          barrier();
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         return;
                        }
                       barrier();
                      }
                     bvec2 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                      break;
                     uvec3(170929u, 145304u, 177519u);
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                        }
                       break;
                      }
                     mat4x3 _GLF_SWITCH_1_18v[42], _GLF_SWITCH_1_19v[91], _GLF_SWITCH_1_20v;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 57:
                             vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[83];
                             case 82:
                             (vec4(-347.104, 69.10, 4.4, 6.9) != vec4(9.3, -3.1, -3.9, -3.0));
                             case 0:
                             case 22:
                             case 47:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               return;
                              }
                             case 72:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              return;
                             barrier();
                             break;
                             if(_GLF_DEAD(false))
                              barrier();
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     bvec3 _GLF_SWITCH_1_21v[58], _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v[94];
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     37719u;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       for(int _injected_loop_counter = (-37643 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           return;
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          break;
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                       if(_GLF_DEAD(false))
                        break;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         continue;
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 4:
                         if(_GLF_DEAD(false))
                          continue;
                         case 86:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 46:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             break;
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
                            break;
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         case 87:
                         if(_GLF_DEAD(false))
                          break;
                         ;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                          barrier();
                         case 60:
                         vec2(-2395.8326, 1.0);
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          continue;
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   case 64:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       barrier();
                      continue;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                          return;
                         }
                       }
                      else
                       {
                       }
                     }
                    ;
                   }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 21:
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     bvec3(false, false, false).brbg;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                   default:
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               default:
               1;
              }
             break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 29:
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[65];
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               return;
              }
             case 86:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              continue;
             mat2(2.8, -3.6, 6595.6224, -7.3);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             default:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            barrier();
           break;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
            }
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 2:
               case 26:
               case 49:
               case 5:
               case 71:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               break;
               if(_GLF_DEAD(false))
                continue;
               case 32:
               _injected_loop_counter;
               default:
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                 break;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               break;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     case 89:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     case 79:
     case 41:
     case 71:
     case 49:
     case 23:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 93:
     injectionSwitch;
     if(_GLF_DEAD(false))
      return;
     case 97:
     if(((subgroup_size ++) < next_virtual_gid))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       (subgroup_size ^ uvec4(179406u, 4525u, 109038u, 69086u));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       (packSnorm4x8(vec4(39.69, 28.37, -1575.8235, 0.1)) & 178058u);
       ;
       ivec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
       if(_GLF_DEAD(false))
        barrier();
       ivec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[73];
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         barrier();
       }
       for(       mat3(-31.35, 0.1, 0.7, 9.4, 764.131, 6420.7822, 7.7, -7.5, -2.3);
 false; (++ GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             (((ivec2(2821, 78940) % ivec2(-91142, 94563))) << _GLF_SWITCH_3_2v);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(((mat2x4(-12.06, 5.2, 183.574, 4.2, -4.7, -2.6, -57.93, 0.7) + -7.8) != mat2x4(138.776, -526.251, -3.8, -50.22, -52.17, -5.4, 9.5, -26.80)))
          {
           if(_GLF_DEAD(false))
            continue;
           ((mat4x3(-81.13, -36.42, -1.0, 946.148, -392.859, -5006.1351, 9.2, -2225.3395, 1.5, 582.834, 7.9, -8.6) - 82.88) * mat4(-6302.4525, -744.008, 54.66, 55.66, 2811.3800, 48.83, -1.1, 8.2, 5678.6273, 3.9, -43.15, 78.43, 119.227, 0.7, -766.615, 3.6));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec3 _GLF_SWITCH_3_5v;
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
             transpose(mat2(46.44, 5.7, -2789.2743, 1.8));
            }
           false;
           if(_GLF_DEAD(false))
            barrier();
           bvec2(true, false);
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             mat4x2(mat3x4(38.46, -424.473, -4.3, 83.04, -35.61, 7421.2972, -78.12, 504.111, -698.513, 0.4, -0.7, 1.0));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
            }
           ;
          }
         else
          {
           mat4(mat2x3(276.979, 1546.8696, -419.628, 5.3, 23.67, -54.67));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             vec4(947.301, -5.7, -2031.2668, 7870.7716);
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           mat3x2 _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v[78];
           int _GLF_SWITCH_3_8v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           greaterThanEqual(findLSB(clamp(uvec3(178481u, 147772u, 17297u), num_workgroup, 197777u)), ivec3(53394, -65314, 1387));
           if(_GLF_DEAD(false))
            barrier();
           int _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v[36];
           vec2(7.7, 743.461);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             false;
             float _GLF_SWITCH_3_11v;
             if(_GLF_DEAD(false))
              return;
             ;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               mat3x4((mat3x2(167.361, -12.29, 6.1, 0.7, -1.7, 2492.9559) * mat2x3(451.605, -7.4, -33.13, 34.01, 8.0, -5.4)));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             normalize(vec4(-3695.6674, 9957.0401, 1.5, -927.485));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               bvec3(true, false, false);
              }
            }
           while(true);
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         uvec2 _GLF_SWITCH_3_12v[54];
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         int _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         while((mat2x3(-30.07, -6074.5798, 145.501, -3.9, -3.7, 970.585) != mat2x3(3254.4963, -9330.4844, 300.496, -77.40, -26.40, 0.0)))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 13:
               (uvec4(125935u, 11081u, 132223u, 114896u) + GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2);
               case 90:
               if(_GLF_DEAD(false))
                barrier();
               ;
               case 0:
               mat4x3(977.765, -6.6, 0.0, -256.430, 22.15, 3.0, -9.5, -3.0, 1.3, -6.0, -5.6, 49.81);
               case 47:
               notEqual(ivec3(-22032, -37823, 54161), (ivec3(69384, 36425, -85710) * _GLF_SWITCH_3_13v));
               bvec3 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v[39];
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                 (sinh(vec3(3.6, -5.0, -46.09)) * mat4x3(838.246, 7699.7393, 65.62, 5406.0842, 531.939, 2.9, -5.2, 0.6, -78.92, -5459.8463, 127.826, 4673.3562));
                 if(_GLF_DEAD(false))
                  break;
                }
               vec2 _GLF_SWITCH_3_18v;
               case 88:
               case 49:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
               case 93:
               uvec2(40046u, 47735u);
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                break;
               case 37:
               greaterThan(abs(injectionSwitch), injectionSwitch);
               case 77:
               case 17:
               mat4x3 _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v[53];
               break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 break;
                }
               case 80:
               int _GLF_SWITCH_4_0v[64], _GLF_SWITCH_4_1v;
               if(_GLF_DEAD(false))
                barrier();
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               1;
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           for(           (mat4x2(156.380, -5.8, -7.9, 6.4, -2.9, -523.390, -24.67, 9.5) * mat3x4(-75.74, 234.827, 5.7, 1408.4960, -5.9, 903.959, -3.8, -79.72, 9.7, -8353.6750, -201.387, 20.94));
 all(bvec4(false, bvec2(false, true), false)); uvec2(6247u, 190833u))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              return;
             (mat3x2(8.5, -157.208, 69.59, -1.1, -37.81, -43.79) + -67.82);
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 22:
                 case 61:
                 case 50:
                 case 87:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 bitfieldInsert((~ GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), uvec4(199352u, 66825u, 66759u, 22724u), -5256, _GLF_SWITCH_3_14v);
                 break;
                 default:
                 1;
                }
              }
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               mat3x2(-7.1, 683.624, -0.7, 8.3, -89.64, -205.819);
              }
             ;
             ((vec3(3.4, 4.0, -306.056).r < -8.0) != true);
             do
              {
               true;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
             matrixCompMult(mat2x4(-7.1, -9.5, -4.5, -373.594, -22.99, -8.6, -4659.5829, -821.980), mat2x4(-80.59, -472.228, -4928.1340, -8.3, -1.4, -7.5, 8.1, -55.26));
             if(_GLF_DEAD(false))
              return;
             uvec3 _GLF_SWITCH_3_21v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         do
          {
           lessThanEqual((workgroup_size ^ GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         notEqual(bvec3(false, true, false), bvec3(true, true, true));
        }
       bool _GLF_SWITCH_3_22v[9];
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(bool(-44511))
          {
           {
            if(_GLF_DEAD(false))
             barrier();
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            vec3(-74.71, 5.3, 3.3);
            if(_GLF_DEAD(false))
             barrier();
            ivec3 _GLF_SWITCH_3_23v[2], _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v[25];
            vec2 _GLF_SWITCH_3_26v[90];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               barrier();
             }
            do
             {
              (bitfieldReverse(uvec2(156388u, 83889u)) * uvec2(124289u, 130299u));
             }
            while(_GLF_WRAPPED_LOOP(false));
            uvec2(55973u, 42080u);
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                return;
               }
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            bvec4 _GLF_SWITCH_3_27v[63];
            uvec3 _GLF_SWITCH_3_28v;
            (vec4(90.05, 71.56, 8.2, -7.8) - 7661.9099);
            matrixCompMult(mat2x4(972.551, -89.47, -6.7, -2.5, 299.355, 5768.5115, -903.173, 405.573), (mat2x4(-77.00, 758.244, -8851.6348, 9354.2526, 9.3, 4417.0572, 3784.3299, 9.0) * mat2(-0.0, 9.4, -1223.7072, 1.4)));
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           {
            mat3x2(3.1, 170.456, 8.4, -172.957, 5.2, 4428.8038);
            if(_GLF_DEAD(false))
             return;
            (104008u ^ next_virtual_gid);
            vec3 _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v[87], _GLF_SWITCH_3_31v[74];
           }
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              return;
             }
            if(_GLF_DEAD(false))
             barrier();
            mat3 _GLF_SWITCH_3_32v[65], _GLF_SWITCH_3_33v;
            mat2(-333.479, -0.2, 1.0, -90.50);
            do
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                mat4x2(mat3x2(-280.047, -13.23, -42.14, -0.9, 8.8, 4.6));
               }
              else
               {
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            uvec3 _GLF_SWITCH_3_34v[36];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
               return;
              return;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            packSnorm4x8((mat3x4(9345.6113, -16.57, 5911.4033, -70.14, 40.41, -100.229, 4.5, -6.1, 6.4, -0.9, 1.8, -8.2) * vec3(-111.102, -29.94, -0.5)));
            vec4(897.387, vec3(-2.8, 4629.7528, -54.10));
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
           }
           bvec3 _GLF_SWITCH_3_35v[65], _GLF_SWITCH_3_36v[5], _GLF_SWITCH_3_37v;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           greaterThanEqual(vec4(-9.1, -897.556, 8163.1187, -7.2), vec4(7.3, 39.69, 3.7, 239.444));
           for(mat3x2 _GLF_SWITCH_3_38v[6]; (_GLF_SWITCH_3_3v.psqt.tsq == ivec3(15888, 57696, -22839)); mod(vec4(-9.3, 8675.7411, -8.6, -262.321), vec4(514.871, -348.668, -4.0, 7.8)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             uint _GLF_SWITCH_3_39v[3];
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             mat2 _GLF_SWITCH_3_40v, _GLF_SWITCH_3_41v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             workgroup_id;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             workgroup_size;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             mat4(mat2x3(2.6, 4888.0936, 5943.5839, 3.6, 14.73, -6779.5873));
             if(_GLF_DEAD(false))
              break;
             mat2x4 _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v, _GLF_SWITCH_3_44v[85];
             if(_GLF_DEAD(false))
              continue;
             bvec4 _GLF_SWITCH_3_45v[61], _GLF_SWITCH_3_46v;
             mat3 _GLF_SWITCH_3_47v[23], _GLF_SWITCH_3_48v[15], _GLF_SWITCH_3_49v;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
           subgroup_id;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     default:
     1;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -45951)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(0))
      {
       case 5:
       if(_GLF_DEAD(false))
        continue;
       (ivec4(77285, -47872, 45039, 30692) * ivec4(ivec2(84794, -99074), 95439, _injected_loop_counter));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               barrier();
              }
             else
              {
              }
            }
           break;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       case 95:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 72:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ((-4.9 / mat4x3(mat4(505.983, -6887.5708, -8.4, -8.6, -17.66, 434.305, 34.92, 805.222, -7038.3136, 9271.9493, 0.6, 311.525, 9191.6346, 1.8, 8.0, -245.802))) , mat3x2(-4.1, 5.2, -8480.6890, 8010.8183, 6947.2168, 517.880));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 48:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                break;
               break;
              }
             ;
             if(_GLF_DEAD(false))
              return;
             case 0:
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 52:
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 + (0))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                    return;
                   barrier();
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                   return;
                  }
                }
               ivec2 _GLF_SWITCH_2_0v;
               case 19:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                }
               if(_GLF_DEAD(false))
                return;
               mat4x3 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 0:
               case 76:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               case 24:
               case 41:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               case 77:
               mat4(mat3(70.72, -41.13, 79.15, -49.14, 89.71, -9.1, -43.32, -85.10, 7072.4002));
               default:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             case 47:
             ;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       for(ivec4 _GLF_SWITCH_0_0v[31], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v; false; mat2x3(-8504.4111, 1385.6236, 5081.3316, -53.48, 6.9, -673.438))
        {
         if(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           vec3 _GLF_SWITCH_0_3v[35], _GLF_SWITCH_0_4v[96], _GLF_SWITCH_0_5v;
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec2 _GLF_SWITCH_0_6v[54], _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
           floor(injectionSwitch);
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             uvec4(workgroup_id);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             _injected_loop_counter;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
           (workgroup_base % subgroup_id);
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        continue;
       case 0:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z = read_1;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       case 19:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat2x3 _GLF_SWITCH_0_9v[27], _GLF_SWITCH_0_10v;
       default:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         1;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 63:
         if(_GLF_DEAD(false))
          barrier();
         case 39:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         case 12:
         if(_GLF_DEAD(false))
          return;
         case 68:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         case 60:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         case 6:
         case 76:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         case 33:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         continue;
         break;
         case 52:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           findLSB(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2);
          }
         case 90:
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         mat2x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[51], _GLF_SWITCH_4_2v[24];
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         default:
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 61:
     if((mat4(mat3x2(71.50, -4.6, 1.7, -2.0, -98.62, -4.9)) != mat4(28.17, -3.2, -5.7, 582.517, -8.3, 71.59, -615.432, -901.464, -69.11, 5.8, -99.45, -9.5, 95.37, 3.4, 6.3, 3.5)))
      {
       {
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       mat3(-7457.6547, -6.6, -3701.8387, 8504.6938, -5003.7601, -2.3, -92.18, -9.2, -8.6);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[9], _GLF_SWITCH_3_2v[67];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(       workgroup_base;
 true; uvec2(131843u, 40015u))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         floor(vec3(-895.676, -1.4, 6.3));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       notEqual(bvec2(true, true), greaterThan(ivec2(93403, 41743), ivec2(-41355, 36919)));
       if(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(mat3x4 _GLF_SWITCH_3_3v[13], _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[21]; false; mat3(6581.9227, -1.1, -80.87, 85.64, 8472.1871, -166.168, 4600.9102, 1.0, 636.958))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             mat3x2(58.44, -246.507, -9376.6829, -5.2, 9.9, -1.2);
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           mat4x3(5.1, -94.16, 9.1, -19.74, -1307.8077, 3.8, 5263.4176, 605.054, 7.4, -79.26, 6.9, 1.3);
           (true ? mat2x4(4.3, -3.0, 9145.5855, 6.0, 8458.9574, 2.5, -3.3, -162.473) : mat2x4(229.740, 8872.6646, -3.9, 7.5, -1666.1747, 6.3, 4.8, -445.339));
           if(_GLF_DEAD(false))
            continue;
           floatBitsToUint(mix(vec4(380.417, 2.9, -6.5, -9977.1824), vec4(1.9, -8.7, 1609.4482, -5.8), -49.98));
           if(_GLF_DEAD(false))
            barrier();
           uvec2(151390u, 124776u);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           mat4 _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v[23], _GLF_SWITCH_3_8v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(false)
          {
           bvec2(false);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             barrier();
            }
           mat3x2 _GLF_SWITCH_3_9v[16], _GLF_SWITCH_3_10v;
           int _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v;
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec4 _GLF_SWITCH_3_13v[2], _GLF_SWITCH_3_14v[85], _GLF_SWITCH_3_15v[98];
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           (uvec2(40656u, 193182u) / (uvec2(39290u, 110656u) / uvec2(193641u, 91057u)));
           lessThan(injectionSwitch, injectionSwitch);
           1.6;
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             bvec2(false, false);
            }
           GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           vec4 _GLF_SWITCH_3_16v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
          }
         distance(vec4(-270.419, 247.853, 32.07, 472.958), vec4(-9.4, 9.0, -0.0, 900.807));
         while(true)
          {
           ;
           if(_GLF_DEAD(false))
            barrier();
           false;
           ;
           if(_GLF_DEAD(false))
            barrier();
           vec2 _GLF_SWITCH_3_17v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           true;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         bvec3 _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
         vec3(-6.7, 185.573, 3021.3579);
        }
       else
        {
         if(true)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       ivec3(-26666, 38195, -58578);
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if((mat2x3(-57.66, 15.28, -664.127, 73.55, -756.449, 1.8) != mat2x3(66.48, -1.4, 54.54, -1741.4365, 8.8, -13.99)))
          {
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, workgroup_id);
            mat3x2 _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v[86];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              mat2x4(862.434, -172.375, 31.48, -10.29, 444.193, 75.99, -55.67, 2731.2124);
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            ivec3 _GLF_SWITCH_3_22v[54], _GLF_SWITCH_3_23v[72], _GLF_SWITCH_3_24v[89];
            uvec3(20545u, 166939u, 9952u);
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            uvec3(62474u, 144282u, 50531u).ts;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            mat4x3(783.350, -3832.6180, 477.992, 8.3, 1.2, -8385.6438, 441.378, -9.7, 1200.7289, 1.0, 1.2, 729.019);
            ivec3 _GLF_SWITCH_3_25v, _GLF_SWITCH_3_26v;
           }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           uvec3 _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v, _GLF_SWITCH_3_29v;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               for(mat4 _GLF_SWITCH_3_30v; mix(false, ((false || false) == true), true); GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)
                {
                 vec3(54.79, -59.81, 99.49).tpp;
                 mat3x4(mat2(-1008.8331, -82.44, 27.08, 25.22));
                 mat2(-9915.8660, 6.0, 8316.2121, 4.2);
                 mat2x4(-418.544, 0.8, 46.24, -6.5, 1656.8544, 8.2, -0.3, -3.5);
                 (_GLF_SWITCH_3_29v << uvec3(read_1, uvec2(34872u, 199211u)));
                 mat2x4 _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v[49], _GLF_SWITCH_3_33v[40];
                }
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           bvec3(true, true, false);
           mat2x3 _GLF_SWITCH_3_34v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           for(           outerProduct(vec3(-9705.1615, 567.055, 55.25), vec3(-91.70, -6.3, -195.317));
 (mod(vec3(-210.205, -3.0, -81.49), 7.9) != vec3(-2.4, 30.05, -5.3)); (2499.9422 / _GLF_SWITCH_3_0v))
            {
             mat2(mat2x3(8.5, -10.21, 120.537, -3072.1806, -1.5, -2.7));
             mat2x4(8.2, -9.1, -83.71, -7.4, -753.797, 2.5, -4.5, -99.43);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 return;
                }
              }
             else
              {
              }
             bvec4(false, true, false, false);
             mat2(1023.6294, -649.589, 693.092, 5.2);
             clamp(72393, -46440, 50793);
             64.01;
            }
           vec2 _GLF_SWITCH_3_35v[46], _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v[34];
           127097u;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             else
              {
              }
            }
           do
            {
             for(uvec2 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v[82]; bool(read_1); mat3x4(-972.211, -8991.5420, -4.5, distance(vec4(-7457.2495, -8729.9904, -7.4, 55.71), vec4(9.6, 2.9, 178.250, -214.866)), -0.2, 1508.7775, 1.3, 53.48, 62.59, -4.4, -6.3, 466.809))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 vec3 _GLF_SWITCH_3_41v[94];
                 case 95:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 mat2x3 _GLF_SWITCH_3_42v;
                 case 9:
                 case 98:
                 mat4x2 _GLF_SWITCH_3_43v, _GLF_SWITCH_3_44v[30];
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
                  barrier();
                 case 85:
                 mat4x3 _GLF_SWITCH_3_45v;
                 case 75:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 do
                  {
                   bvec4(false, true, false, false);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mix(ivec2(-49210, 47156), ivec2(-44108, 764), not(bvec2(false, true)));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 2:
                 mat2(6411.6477, 7.2, -6.4, 7.4);
                 if(_GLF_DEAD(false))
                  return;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 50:
                 19701;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat2 _GLF_SWITCH_3_46v, _GLF_SWITCH_3_47v[96], _GLF_SWITCH_3_48v;
           if(_GLF_DEAD(false))
            barrier();
           while(true)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 ;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             mat3 _GLF_SWITCH_3_49v, _GLF_SWITCH_3_50v;
             vec2(4.2, 98.24);
             ;
             if(_GLF_DEAD(false))
              barrier();
            }
           (_GLF_SWITCH_3_0v * mat2x4(mat3x2(4530.2572, 0.8, -466.176, 2362.6383, -54.77, 8507.8249)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec4 _GLF_SWITCH_3_51v[95], _GLF_SWITCH_3_52v, _GLF_SWITCH_3_53v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            ivec3(-60144, -73313, 50535);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               return;
              return;
             }
            uvec4(147630u, 166930u, 17500u, 137653u).wz;
            uint _GLF_SWITCH_3_54v;
            ;
            vec4 _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
               return;
              barrier();
             }
            vec3 _GLF_SWITCH_3_57v;
            int _GLF_SWITCH_3_58v[62];
            mat4x3 _GLF_SWITCH_3_59v, _GLF_SWITCH_3_60v[38];
           }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             barrier();
            }
           true;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       (ivec4(66464, -64057, -49007, -26382) / max(ivec4(43051, -40998, 41034, 7369), 41321));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       mat2x3(-543.098, -1.0, 7.9, -42.92, 7138.2290, -9042.8568);
      }
     if(_GLF_DEAD(false))
      barrier();
     case 90:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     {
      if(false)
       {
        ivec4 _GLF_SWITCH_3_61v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        for(        findMSB(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2);
 true; mat3x4(7.5, -319.255, -9.9, -195.423, 8.4, -4.9, -9.0, 329.178, 4.6, 2.8, -4.9, 4254.5102))
         {
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        ;
        mat3x4(1776.7819, -798.054, 8064.6562, 4.4, -2.8, 6.6, -95.64, -484.171, -5.7, -204.371, -342.472, -6.4);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -14636)); _injected_loop_counter --)
           {
            return;
           }
         }
       }
      else
       {
       }
      if(_GLF_DEAD(false))
       return;
      uvec2 _GLF_SWITCH_3_62v[39], _GLF_SWITCH_3_63v, _GLF_SWITCH_3_64v;
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(false))
       barrier();
      mat2(40.39, 6.0, 2.7, -229.750);
      do
       {
        {
         if(_GLF_DEAD(false))
          break;
         uvec3(45678u, 192662u, 79342u);
         mat2 _GLF_SWITCH_3_65v[82], _GLF_SWITCH_3_66v[44], _GLF_SWITCH_3_67v;
        }
       }
      while(any(bvec4(false, true, true, true)));
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(false))
       barrier();
     }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 48:
     case 6:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 63:
     case 42:
     case 24:
     case 4:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     default:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       1;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               case 72:
               case 79:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               case 91:
               if(_GLF_DEAD(false))
                barrier();
               case 93:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               break;
               if(_GLF_DEAD(false))
                break;
               default:
               if(_GLF_DEAD(false))
                barrier();
               1;
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 69593)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (ivec4(-7259, -15888, -2227, -46762).b & ((true ? -31358 : 94950) & 0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     break;
    }
   switch(_GLF_SWITCH(0))
    {
     case 25:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         barrier();
        }
      }
     ;
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(false))
      break;
     case 22:
     case 78:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     case 75:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     case 52:
     GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w = read_2;
     break;
     case 2:
     (ivec2(-54406, -38930) >> _injected_loop_counter);
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     case 93:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       while((_injected_loop_counter >= 11589))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(         4135.0293;
 (mat4x3(5.6, 693.372, -6.3, -52.98, -668.139, 4465.4964, -3.9, 561.800, -276.657, 791.848, -2.6, -57.95) == mat4x3((7.0 + mat2(-27.64, 8803.6503, 8019.8787, -8.1)))); (mat4x3(-6706.3107, 589.463, -5.3, -7.2, -98.05, -5787.6361, 5.3, 3352.8829, -0.8, 244.318, -8.0, -5843.4430) * vec4(5.0, -599.864, -129.532, -7.0)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
            barrier();
           mat4x2 _GLF_SWITCH_2_0v[82];
           uvec2 _GLF_SWITCH_2_1v;
           (mat4(5.6, -3.6, -7688.1720, -8806.3290, 1.1, 2795.4212, 4750.2961, 3.9, 5.3, 9.2, -7.8, 514.881, -46.16, 7.1, -4931.3717, 5426.4023) / mat4(-5245.1878, 7.7, -9900.0143, -7637.5684, 343.369, -0.2, -0.7, -4.7, -599.276, -3599.6668, 3.0, -84.37, -34.03, 4809.7350, 63.88, 2243.9866));
           uvec2(139211u, 19121u);
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 72:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 75:
               case 90:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               case 29:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               case 84:
               case 86:
               case 66:
               case 93:
               if(_GLF_DEAD(false))
                return;
               case 3:
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
                    barrier();
                  }
                }
               case 2:
               ;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               case 19:
               min(read_1, workgroup_base);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                 barrier();
                }
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         (_injected_loop_counter);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   switch(_GLF_SWITCH(0))
    {
     case 8:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       mat2x3(mat3x2(-88.96, 396.410, -74.17, 3783.5698, 5293.4524, 3.8));
      }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 50:
     if(_GLF_DEAD(false))
      barrier();
     case 84:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     case 66:
     case 43:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 35:
     case 21:
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 32:
     if(_GLF_DEAD(false))
      barrier();
     case 61:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
            barrier();
           break;
          }
         barrier();
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     break;
     if(_GLF_DEAD(false))
      continue;
     case 69:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     findLSB(ivec4(-65339, 42299, 66327, -34252));
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         return;
        }
      }
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           continue;
          }
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1 == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     subgroupAll(false);
    }
   else
    {
     switch(_GLF_SWITCH(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) | 0)))
      {
       case 0:
       case 44:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1 == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w) + 1, 4, 64, 4);
       case 2:
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             if(_GLF_DEAD(false))
              continue;
             case 6:
             case 40:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 63:
             case 54:
             case 11:
             do
              {
               if(_GLF_DEAD(false))
                return;
               subgroupAll(true);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             break;
             if(_GLF_DEAD(false))
              barrier();
             case 66:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             case 36:
             int _GLF_SWITCH_4_0v[57], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               1;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       case 39:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       case 71:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) & 88739)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             case 25:
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             case 63:
             case 29:
             case 26:
             case 65:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             case 62:
             case 15:
             case 22:
             if(_GLF_DEAD(false))
              barrier();
             case 41:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             break;
             case 56:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              float _GLF_SWITCH_4_0v;
              while(true)
               {
                (mat3x4(-1.1, -80.26, 461.226, -5641.7186, 881.255, 563.766, -78.74, 4.4, 991.095, 268.308, -4554.6615, 5166.8706) - -99.51);
                bvec2 _GLF_SWITCH_4_1v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  continue;
                 }
                do
                 {
                  ivec3(-77946, -73147, 25102);
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                  continue;
                 }
                bvec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[21];
                if(_GLF_DEAD(false))
                 continue;
                (atomicMin(read_2, subgroup_local_id));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec3(94946, 55202, -46671);
                if(_GLF_DEAD(false))
                 barrier();
                greaterThanEqual(ivec2(-72143, -36448), ivec2(-79933, -109));
                if(_GLF_DEAD(false))
                 continue;
               }
              mat4 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
              bvec2 _GLF_SWITCH_4_6v[64], _GLF_SWITCH_4_7v[29], _GLF_SWITCH_4_8v;
              vec3 _GLF_SWITCH_4_9v[98];
             }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
        }
       case 84:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       break;
       case 93:
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
       ivec3(58026, 59610, -55624);
       if(_GLF_DEAD(false))
        break;
       case 14:
       if(_GLF_DEAD(false))
        continue;
       for(       bvec4(false, false, true, false);
 (bvec4(true, true, true, true) == bvec4(false, false, true, true)); read_2)
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH(0))
        {
         case 40:
         mat3x2 _GLF_SWITCH_3_0v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 0:
         case 77:
         case 84:
         case 93:
         case 5:
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         case 61:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         case 8:
         case 36:
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         case 18:
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         1;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
