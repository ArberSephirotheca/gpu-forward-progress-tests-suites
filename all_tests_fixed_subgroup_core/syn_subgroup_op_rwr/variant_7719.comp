#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.8)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(-86.10), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), (bool((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), (bool((_GLF_IDENTITY(false, (false) && true)))) && true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (true ? float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(injectionSwitch, 8349.9926).p)))), injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0))), injectionSwitch[1])))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), false, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), false, false, false)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(912.262))))) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false), true)))), false, false, false))))) || false)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(distance(vec4(34.11, -9.0, 4.7, -504.125), vec4(-3.4, 4551.0372, -505.372, 6148.8330)), -10213)) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || ((false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true && (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), (bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec3(bool(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec3(bool(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))) || false)))) || false))))), true, true, true))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true)))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true)))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true)))))))))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, false || ((false) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, _GLF_IDENTITY(true, ! (! (true))), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true)))))) && true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))))))), false || ((false) && true)), true)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec2(bool(bvec4(true, false, false, false)), false))))))), false || ((false) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, bool(bvec4((false) && _GLF_IDENTITY(true, (true) || false), true, true, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, _GLF_IDENTITY(true, bool(bool(true))), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, _GLF_IDENTITY(true, ! (! (true))), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), false || (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true)))))) && true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))))))), false || ((false) && true)), true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)), true && (bool(bvec4(_GLF_IDENTITY((false) && true, false || ((false) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || ((false) && true)), true)))))))))))))) || false)), false))) && true)))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false))) && true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), bool(bvec4(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true, false))))))), false, true, false)))), _GLF_IDENTITY((bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true)), (bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true))) && true))))))))))), ((bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true)), (bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && true)), true))) && true)))))))))))) || false) || false)))))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4272.2950), _GLF_FUZZED(376.073)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch) : _GLF_FUZZED(acosh(vec2(72.10, -527.493)))))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch) : _GLF_FUZZED(acosh(vec2(72.10, -527.493)))))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0))), _GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch) : _GLF_FUZZED(acosh(vec2(72.10, -527.493)))))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-72.13, 5.8)) : (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch) : _GLF_FUZZED(acosh(vec2(72.10, -527.493)))))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))) * mat2(1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 1u, 1u, 0u))), subgroup_local_id + 1, subgroup_local_id + 1)))), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(_GLF_IDENTITY(abs(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(abs(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-296.918), _GLF_FUZZED(-1.5)), vec2((abs(vec2(1.0, 1.0)))[0], (abs(vec2(1.0, 1.0)))[1]), bvec2(true, true))), abs(vec2(1.0, 1.0)), _GLF_IDENTITY(abs(vec2(1.0, 1.0)), (abs(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))).y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(min((next_virtual_gid), (next_virtual_gid)), uint(uint(min((next_virtual_gid), (next_virtual_gid)))))) | (next_virtual_gid)), next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), clamp(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (min(next_virtual_gid, next_virtual_gid)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), bool(bvec3(_GLF_IDENTITY(true && (false), (true && (false)) && true), true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && (false), (true && (false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) ? _GLF_FUZZED(uvec3(55875u, 23107u, 170960u)[0]) : (1u))) << 0u)) | 0u)), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid))))))], uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, (read_2) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, 1.2, 1.2)))), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), vec3(mat2x3(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), tan(0.0), 0.0, 1.0))), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, tan(tan(0.0)), 1.0))), 1.0, sqrt(0.0)), mix(vec3((vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-94.05 - 998.171), min((-94.05 - 998.171), (-94.05 - 998.171)))), min(_GLF_FUZZED(_GLF_IDENTITY((-94.05 - 998.171), min((-94.05 - 998.171), (-94.05 - 998.171)))), _GLF_FUZZED(_GLF_IDENTITY((-94.05 - 998.171), min((-94.05 - 998.171), (-94.05 - 998.171))))))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))).x, 1.0, sqrt(0.0)))[1], clamp((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0, sqrt(0.0)))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED((-94.05 - 998.171))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0, sqrt(0.0)))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 0.0, sin(0.0), sin(0.0), 1.0))), mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))), vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))).x, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), sqrt(0.0)))[1], mix(float((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))), min(vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))), vec2((injectionSwitch)[0], _GLF_FUZZED((-94.05 - 998.171))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0, sqrt(0.0)))[1]), float(_GLF_FUZZED(6.3)), bool(false))))), (vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -3.8), min(vec2(5.7, -3.8), vec2(5.7, -3.8)))) : injectionSwitch)).x, 1.0, sqrt(0.0)))[2]), vec3(_GLF_FUZZED(-378.201), _GLF_FUZZED(-37.50), _GLF_FUZZED(-6.9)), bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(7631.1789, 3392.1818, 15.67, -4.3)) : vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(944.842) : 0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(7631.1789, 3392.1818, 15.67, -4.3)) : vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(7631.1789, 3392.1818, 15.67, -4.3)) : vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(7631.1789, 3392.1818, 15.67, -4.3)) : vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-29.12)), bool(false)))))), 0.0))))), injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, _GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, (false ? _GLF_FUZZED(-9564.3323) : -92.83)))), -92.83), float(mat2x4(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, (false ? _GLF_FUZZED(-9564.3323) : -92.83)))), -92.83), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0))))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), vec3(mat2x3(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), mix(vec3((vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(log(-4178.6197))))))[0], (vec3(injectionSwitch.x, 1.0, sqrt(0.0)))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.67), _GLF_FUZZED(vec4(751.407, 69.16, 7.4, -5.6).w)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0, sqrt(0.0)))[_GLF_IDENTITY(2, (0 & 51737) ^ (2))]), vec3(_GLF_FUZZED(-378.201), _GLF_FUZZED(-37.50), _GLF_FUZZED(_GLF_IDENTITY(-6.9, (-6.9) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bvec3(false, false, false))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, true && (true)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6368.3037)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83))))), (_GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83)))))) - 0.0) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, true && (true)))))) : _GLF_FUZZED(-6.6)))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), vec3(mat2x3(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, sqrt(0.0)), mix(vec3((vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(log(-4178.6197))))))[0], (vec3(injectionSwitch.x, 1.0, sqrt(0.0)))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.67), _GLF_FUZZED(vec4(751.407, 69.16, 7.4, -5.6).w)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0, sqrt(0.0)))[_GLF_IDENTITY(2, (0 & 51737) ^ (2))]), vec3(_GLF_FUZZED(_GLF_IDENTITY(-378.201, (_GLF_IDENTITY(-378.201, min(-378.201, -378.201))) / _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(75.02))))), _GLF_FUZZED(-37.50), _GLF_FUZZED(_GLF_IDENTITY(-6.9, (-6.9) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bvec3(false, false, false))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))))), bool(_GLF_IDENTITY(true, true && (true)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6368.3037)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83))))), (_GLF_FUZZED(_GLF_IDENTITY(-92.83, min(-92.83, _GLF_IDENTITY(-92.83, clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83)))))) - 0.0) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(1.2), float(mat3x2(_GLF_FUZZED(1.2), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_FUZZED(1.2), _GLF_IDENTITY(_GLF_FUZZED(1.2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(_GLF_FUZZED(1.2), clamp(_GLF_FUZZED(1.2), _GLF_FUZZED(1.2), _GLF_FUZZED(1.2)))))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, true && (true)))))) : _GLF_FUZZED(-6.6)))) > injectionSwitch.y))))))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-92.83, _GLF_IDENTITY(min(-92.83, _GLF_IDENTITY(_GLF_IDENTITY(-92.83, float(_GLF_IDENTITY(mat3x2(-92.83, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), mat3x2(_GLF_IDENTITY(mat4x2(mat3x2(-92.83, 1.0, 1.0, 1.0, sqrt(0.0), 0.0)), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(mat3x2(-92.83, 1.0, 1.0, 1.0, sqrt(0.0), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83))), (false ? _GLF_FUZZED(-880.855) : _GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), _GLF_IDENTITY(-92.83, mix(float(_GLF_FUZZED(7.0)), float(-92.83), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83))), (_GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83)))) + 0.0))))), float(mat2x3(_GLF_IDENTITY(min(-92.83, _GLF_IDENTITY(-92.83, _GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83))))), 1.0 * (min(_GLF_IDENTITY(-92.83, 0.0 + (_GLF_IDENTITY(-92.83, (false ? _GLF_FUZZED(83.84) : -92.83)))), _GLF_IDENTITY(_GLF_IDENTITY(-92.83, float(_GLF_IDENTITY(vec3(-92.83, 1.0, 1.0), mix(vec3(_GLF_IDENTITY((vec3(-92.83, 1.0, 1.0))[0], max((vec3(-92.83, 1.0, 1.0))[0], (vec3(-92.83, 1.0, 1.0))[0])), (vec3(-92.83, 1.0, 1.0))[1], _GLF_FUZZED(-244.202)), vec3(_GLF_FUZZED(7.7), _GLF_FUZZED(-2.9), (vec3(-92.83, 1.0, 1.0))[2]), bvec3(false, false, true))))), _GLF_IDENTITY(clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, -92.83)), -92.83), 1.0 * (clamp(-92.83, _GLF_IDENTITY(-92.83, max(-92.83, _GLF_IDENTITY(-92.83, min(-92.83, -92.83)))), -92.83))))))), 1.0, length(tan(vec3(0.0, 0.0, 0.0))), 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y)))))), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(37.43, -812.122)))).x) + 0.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) >> 0u), min(next_virtual_gid, next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(985.120)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5967.3172)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(985.120), clamp(_GLF_IDENTITY(_GLF_FUZZED(985.120), (true ? _GLF_FUZZED(985.120) : _GLF_FUZZED(4633.1968))), _GLF_FUZZED(985.120), _GLF_FUZZED(985.120)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5967.3172)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(-5.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
